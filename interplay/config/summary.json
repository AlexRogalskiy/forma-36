{
   "components": {
      "@contentful/forma-36-react-components": {
         "TextLink": {
            "packageName": "@contentful/forma-36-react-components",
            "exportedName": "TextLink",
            "relativePath": "packages/forma-36-react-components/src/components/TextLink/TextLink.tsx",
            "importedName": "TextLink",
            "resolved": [
               {
                  "relativePath": "packages/forma-36-react-components/src/index.ts",
                  "exportName": "TextLink"
               },
               {
                  "relativePath": "packages/forma-36-react-components/src/components/TextLink/TextLink.tsx",
                  "exportName": "TextLink"
               }
            ],
            "parsed": {
               "props": {
                  "linkType": {
                     "name": "linkType",
                     "type": "string",
                     "enum": [
                        "primary",
                        "positive",
                        "negative",
                        "secondary",
                        "muted",
                        "white"
                     ],
                     "default": "primary",
                     "parent": "TextLinkProps"
                  },
                  "href": {
                     "name": "href",
                     "type": "string",
                     "parent": "TextLinkProps"
                  },
                  "target": {
                     "name": "target",
                     "type": "string",
                     "parent": "TextLinkProps"
                  },
                  "rel": {
                     "name": "rel",
                     "type": "string",
                     "parent": "TextLinkProps"
                  },
                  "disabled": {
                     "name": "disabled",
                     "type": "boolean",
                     "default": false,
                     "parent": "TextLinkProps"
                  },
                  "testId": {
                     "name": "testId",
                     "type": "string",
                     "default": "cf-ui-text-link",
                     "parent": "TextLinkProps"
                  },
                  "onClick": {
                     "name": "onClick",
                     "type": "Event",
                     "multipleTypes": true,
                     "parent": "TextLinkProps"
                  },
                  "className": {
                     "name": "className",
                     "type": "string",
                     "parent": "TextLinkProps"
                  },
                  "icon": {
                     "name": "icon",
                     "type": "string",
                     "enum": [
                        "ArrowDown",
                        "ArrowDownTrimmed",
                        "ArrowUp",
                        "ArrowUpTrimmed",
                        "Asset",
                        "AssetTrimmed",
                        "Calendar",
                        "ChatBubble",
                        "ChatBubbleTrimmed",
                        "CheckCircle",
                        "CheckCircleTrimmed"
                     ],
                     "parent": "TextLinkProps"
                  },
                  "text": {
                     "name": "text",
                     "type": "string",
                     "parent": "TextLinkProps"
                  },
                  "iconPosition": {
                     "name": "iconPosition",
                     "type": "string",
                     "enum": [
                        "right",
                        "left"
                     ],
                     "default": "left",
                     "parent": "TextLinkProps"
                  },
                  "children": {
                     "name": "children",
                     "type": "array",
                     "items": {
                        "type": "Node"
                     }
                  }
               }
            }
         },
         "Icon": {
            "packageName": "@contentful/forma-36-react-components",
            "exportedName": "Icon",
            "relativePath": "packages/forma-36-react-components/src/components/Icon/Icon.tsx",
            "importedName": "Icon",
            "resolved": [
               {
                  "relativePath": "packages/forma-36-react-components/src/index.ts",
                  "exportName": "Icon"
               },
               {
                  "relativePath": "packages/forma-36-react-components/src/components/Icon/Icon.tsx",
                  "exportName": "Icon"
               }
            ],
            "parsed": {
               "props": {
                  "size": {
                     "name": "size",
                     "type": "string",
                     "enum": [
                        "tiny",
                        "small",
                        "medium",
                        "large"
                     ],
                     "default": "small",
                     "parent": "IconProps"
                  },
                  "color": {
                     "name": "color",
                     "type": "string",
                     "enum": [
                        "primary",
                        "positive",
                        "negative",
                        "warning",
                        "secondary",
                        "muted",
                        "white"
                     ],
                     "default": "primary",
                     "parent": "IconProps"
                  },
                  "style": {
                     "name": "style",
                     "type": "object",
                     "parent": "IconProps"
                  },
                  "icon": {
                     "name": "icon",
                     "type": "string",
                     "enum": [
                        "ArrowDown",
                        "ArrowDownTrimmed",
                        "ArrowUp",
                        "ArrowUpTrimmed",
                        "Asset",
                        "AssetTrimmed",
                        "Calendar",
                        "ChatBubble",
                        "ChatBubbleTrimmed",
                        "CheckCircle",
                        "CheckCircleTrimmed",
                        "ChevronDown",
                        "ChevronDownTrimmed",
                        "ChevronLeft",
                        "ChevronLeftTrimmed",
                        "ChevronRight",
                        "ChevronRightTrimmed",
                        "ChevronUp",
                        "ChevronUpTrimmed",
                        "Clock",
                        "ClockTrimmed",
                        "Close",
                        "CloseTrimmed",
                        "Code",
                        "CodeTrimmed",
                        "Copy",
                        "CopyTrimmed",
                        "Cycle",
                        "CycleTrimmed",
                        "Delete",
                        "DeleteTrimmed",
                        "Download",
                        "DownloadTrimmed",
                        "Drag",
                        "DragTrimmed",
                        "Edit",
                        "EditTrimmed",
                        "EmbeddedEntryBlock",
                        "EmbeddedEntryBlockTrimmed",
                        "EmbeddedEntryInline",
                        "EmbeddedEntryInlineTrimmed",
                        "Entry",
                        "EntryTrimmed",
                        "ErrorCircle",
                        "ErrorCircleTrimmed",
                        "ExternalLink",
                        "ExternalLinkTrimmed",
                        "FaceHappy",
                        "FaceHappyTrimmed",
                        "Filter",
                        "FilterTrimmed",
                        "Folder",
                        "FolderCreate",
                        "FolderCreateTrimmed",
                        "FolderOpen",
                        "FolderOpenTrimmed",
                        "FolderTrimmed",
                        "FormatBold",
                        "FormatBoldTrimmed",
                        "FormatItalic",
                        "FormatItalicTrimmed",
                        "FormatUnderlined",
                        "FormatUnderlinedTrimmed",
                        "Heading",
                        "HeadingOne",
                        "HeadingOneTrimmed",
                        "HeadingTrimmed",
                        "HeadingTwo",
                        "HeadingTwoTrimmed",
                        "HelpCircle",
                        "HelpCircleTrimmed",
                        "HorizontalRule",
                        "HorizontalRuleTrimmed",
                        "InfoCircle",
                        "InfoCircleTrimmed",
                        "Language",
                        "Link",
                        "LinkTrimmed",
                        "ListBulleted",
                        "ListBulletedTrimmed",
                        "ListNumbered",
                        "ListNumberedTrimmed",
                        "Lock",
                        "LockTrimmed",
                        "LooksOne",
                        "LooksOneTrimmed",
                        "LooksTwo",
                        "LooksTwoTrimmed",
                        "Menu",
                        "MenuTrimmed",
                        "MoreHorizontal",
                        "MoreHorizontalTrimmed",
                        "MoreVertical",
                        "MoreVerticalTrimmed",
                        "Person",
                        "Plus",
                        "PlusCircle",
                        "PlusCircleTrimmed",
                        "PlusTrimmed",
                        "Preview",
                        "Quote",
                        "QuoteTrimmed",
                        "References",
                        "Release",
                        "ReleaseTrimmed",
                        "Receipt",
                        "ReceiptTrimmed",
                        "Search",
                        "SearchTrimmed",
                        "Settings",
                        "SettingsTrimmed",
                        "ShoppingCart",
                        "ShoppingCartTrimmed",
                        "Star",
                        "StarTrimmed",
                        "Tags",
                        "Text",
                        "TextTrimmed",
                        "ThumbDown",
                        "ThumbDownTrimmed",
                        "ThumbUp",
                        "ThumbUpTrimmed",
                        "Users",
                        "UsersTrimmed",
                        "Warning",
                        "WarningTrimmed",
                        "Workflows"
                     ],
                     "parent": "IconProps"
                  },
                  "className": {
                     "name": "className",
                     "type": "string",
                     "parent": "IconProps"
                  },
                  "testId": {
                     "name": "testId",
                     "type": "string",
                     "default": "cf-ui-icon",
                     "parent": "IconProps"
                  }
               }
            }
         },
         "Pill": {
            "packageName": "@contentful/forma-36-react-components",
            "exportedName": "Pill",
            "relativePath": "packages/forma-36-react-components/src/components/Pill/Pill.tsx",
            "importedName": "Pill",
            "resolved": [
               {
                  "relativePath": "packages/forma-36-react-components/src/index.ts",
                  "exportName": "Pill"
               },
               {
                  "relativePath": "packages/forma-36-react-components/src/components/Pill/Pill.tsx",
                  "exportName": "Pill"
               }
            ],
            "parsed": {
               "props": {
                  "label": {
                     "name": "label",
                     "type": "string",
                     "parent": "PillProps"
                  },
                  "onClose": {
                     "name": "onClose",
                     "type": "Event",
                     "parent": "PillProps"
                  },
                  "onDrag": {
                     "name": "onDrag",
                     "type": "Event",
                     "parent": "PillProps"
                  },
                  "className": {
                     "name": "className",
                     "type": "string",
                     "parent": "PillProps"
                  },
                  "testId": {
                     "name": "testId",
                     "type": "string",
                     "default": "cf-ui-pill",
                     "parent": "PillProps"
                  },
                  "style": {
                     "name": "style",
                     "type": "object",
                     "parent": "PillProps"
                  },
                  "dragHandleComponent": {
                     "name": "dragHandleComponent",
                     "type": "array",
                     "items": {
                        "type": "Node"
                     },
                     "parent": "PillProps"
                  }
               }
            }
         },
         "HelpText": {
            "packageName": "@contentful/forma-36-react-components",
            "exportedName": "HelpText",
            "relativePath": "packages/forma-36-react-components/src/components/HelpText/HelpText.tsx",
            "importedName": "HelpText",
            "resolved": [
               {
                  "relativePath": "packages/forma-36-react-components/src/index.ts",
                  "exportName": "HelpText"
               },
               {
                  "relativePath": "packages/forma-36-react-components/src/components/HelpText/HelpText.tsx",
                  "exportName": "HelpText"
               }
            ],
            "parsed": {
               "props": {
                  "className": {
                     "name": "className",
                     "type": "string",
                     "parent": "HelpTextProps"
                  },
                  "testId": {
                     "name": "testId",
                     "type": "string",
                     "default": "cf-ui-help-text",
                     "parent": "HelpTextProps"
                  },
                  "style": {
                     "name": "style",
                     "type": "object",
                     "parent": "HelpTextProps"
                  },
                  "children": {
                     "name": "children",
                     "type": "array",
                     "items": {
                        "type": "Node"
                     }
                  }
               }
            }
         },
         "FormLabel": {
            "packageName": "@contentful/forma-36-react-components",
            "exportedName": "FormLabel",
            "relativePath": "packages/forma-36-react-components/src/components/FormLabel/FormLabel.tsx",
            "importedName": "FormLabel",
            "resolved": [
               {
                  "relativePath": "packages/forma-36-react-components/src/index.ts",
                  "exportName": "FormLabel"
               },
               {
                  "relativePath": "packages/forma-36-react-components/src/components/FormLabel/FormLabel.tsx",
                  "exportName": "FormLabel"
               }
            ],
            "parsed": {
               "props": {
                  "htmlFor": {
                     "name": "htmlFor",
                     "type": "string",
                     "parent": "FormLabelProps"
                  },
                  "testId": {
                     "name": "testId",
                     "type": "string",
                     "default": "cf-ui-form-label",
                     "parent": "FormLabelProps"
                  },
                  "className": {
                     "name": "className",
                     "type": "string",
                     "parent": "FormLabelProps"
                  },
                  "requiredText": {
                     "name": "requiredText",
                     "type": "string",
                     "default": "required",
                     "parent": "FormLabelProps"
                  },
                  "required": {
                     "name": "required",
                     "type": "boolean",
                     "default": false,
                     "parent": "FormLabelProps"
                  },
                  "children": {
                     "name": "children",
                     "type": "array",
                     "items": {
                        "type": "Node"
                     }
                  }
               }
            }
         },
         "ValidationMessage": {
            "packageName": "@contentful/forma-36-react-components",
            "exportedName": "ValidationMessage",
            "relativePath": "packages/forma-36-react-components/src/components/ValidationMessage/ValidationMessage.tsx",
            "importedName": "ValidationMessage",
            "resolved": [
               {
                  "relativePath": "packages/forma-36-react-components/src/index.ts",
                  "exportName": "ValidationMessage"
               },
               {
                  "relativePath": "packages/forma-36-react-components/src/components/ValidationMessage/ValidationMessage.tsx",
                  "exportName": "ValidationMessage"
               }
            ],
            "parsed": {
               "props": {
                  "className": {
                     "name": "className",
                     "type": "string",
                     "parent": "ValidationMessageProps"
                  },
                  "testId": {
                     "name": "testId",
                     "type": "string",
                     "default": "cf-ui-validation-message",
                     "parent": "ValidationMessageProps"
                  },
                  "style": {
                     "name": "style",
                     "type": "object",
                     "parent": "ValidationMessageProps"
                  },
                  "children": {
                     "name": "children",
                     "type": "array",
                     "items": {
                        "type": "Node"
                     }
                  }
               }
            }
         },
         "TextInput": {
            "packageName": "@contentful/forma-36-react-components",
            "exportedName": "TextInput",
            "relativePath": "packages/forma-36-react-components/src/components/TextInput/TextInput.tsx",
            "importedName": "TextInput",
            "resolved": [
               {
                  "relativePath": "packages/forma-36-react-components/src/index.ts",
                  "exportName": "TextInput"
               },
               {
                  "relativePath": "packages/forma-36-react-components/src/components/TextInput/TextInput.tsx",
                  "exportName": "TextInput"
               }
            ],
            "parsed": {
               "props": {
                  "width": {
                     "name": "width",
                     "type": "string",
                     "enum": [
                        "small",
                        "medium",
                        "large",
                        "full"
                     ],
                     "default": "full"
                  },
                  "isReadOnly": {
                     "name": "isReadOnly",
                     "type": "boolean",
                     "default": false
                  },
                  "type": {
                     "name": "type",
                     "type": "string",
                     "enum": [
                        "number",
                        "text",
                        "password",
                        "email",
                        "search",
                        "url",
                        "date",
                        "time"
                     ]
                  },
                  "name": {
                     "name": "name",
                     "type": "string"
                  },
                  "id": {
                     "name": "id",
                     "type": "string"
                  },
                  "className": {
                     "name": "className",
                     "type": "string"
                  },
                  "withCopyButton": {
                     "name": "withCopyButton",
                     "type": "boolean",
                     "default": false
                  },
                  "testId": {
                     "name": "testId",
                     "type": "string",
                     "default": "cf-ui-text-input"
                  },
                  "onCopy": {
                     "name": "onCopy",
                     "type": "Event",
                     "multipleTypes": true
                  },
                  "value": {
                     "name": "value",
                     "type": "string",
                     "multipleTypes": true
                  },
                  "inputRef": {
                     "name": "inputRef",
                     "type": "unknown"
                  },
                  "error": {
                     "name": "error",
                     "type": "boolean"
                  },
                  "willBlurOnEsc": {
                     "name": "willBlurOnEsc",
                     "type": "boolean",
                     "default": false
                  },
                  "ref": {
                     "name": "ref",
                     "type": "string",
                     "multipleTypes": true,
                     "parent": "ClassAttributes"
                  },
                  "key": {
                     "name": "key",
                     "type": "string",
                     "multipleTypes": true,
                     "parent": "Attributes"
                  },
                  "accept": {
                     "name": "accept",
                     "type": "string",
                     "parent": "InputHTMLAttributes"
                  },
                  "alt": {
                     "name": "alt",
                     "type": "string",
                     "parent": "InputHTMLAttributes"
                  },
                  "autoComplete": {
                     "name": "autoComplete",
                     "type": "string",
                     "parent": "InputHTMLAttributes"
                  },
                  "autoFocus": {
                     "name": "autoFocus",
                     "type": "boolean",
                     "parent": "InputHTMLAttributes"
                  },
                  "capture": {
                     "name": "capture",
                     "type": "string",
                     "multipleTypes": true,
                     "parent": "InputHTMLAttributes"
                  },
                  "checked": {
                     "name": "checked",
                     "type": "boolean",
                     "parent": "InputHTMLAttributes"
                  },
                  "crossOrigin": {
                     "name": "crossOrigin",
                     "type": "string",
                     "parent": "InputHTMLAttributes"
                  },
                  "disabled": {
                     "name": "disabled",
                     "type": "boolean",
                     "default": false,
                     "parent": "InputHTMLAttributes"
                  },
                  "form": {
                     "name": "form",
                     "type": "string",
                     "parent": "InputHTMLAttributes"
                  },
                  "formAction": {
                     "name": "formAction",
                     "type": "string",
                     "parent": "InputHTMLAttributes"
                  },
                  "formEncType": {
                     "name": "formEncType",
                     "type": "string",
                     "parent": "InputHTMLAttributes"
                  },
                  "formMethod": {
                     "name": "formMethod",
                     "type": "string",
                     "parent": "InputHTMLAttributes"
                  },
                  "formNoValidate": {
                     "name": "formNoValidate",
                     "type": "boolean",
                     "parent": "InputHTMLAttributes"
                  },
                  "formTarget": {
                     "name": "formTarget",
                     "type": "string",
                     "parent": "InputHTMLAttributes"
                  },
                  "height": {
                     "name": "height",
                     "type": "string",
                     "multipleTypes": true,
                     "parent": "InputHTMLAttributes"
                  },
                  "list": {
                     "name": "list",
                     "type": "string",
                     "parent": "InputHTMLAttributes"
                  },
                  "max": {
                     "name": "max",
                     "type": "string",
                     "multipleTypes": true,
                     "parent": "InputHTMLAttributes"
                  },
                  "maxLength": {
                     "name": "maxLength",
                     "type": "number",
                     "parent": "InputHTMLAttributes"
                  },
                  "min": {
                     "name": "min",
                     "type": "string",
                     "multipleTypes": true,
                     "parent": "InputHTMLAttributes"
                  },
                  "minLength": {
                     "name": "minLength",
                     "type": "number",
                     "parent": "InputHTMLAttributes"
                  },
                  "multiple": {
                     "name": "multiple",
                     "type": "boolean",
                     "parent": "InputHTMLAttributes"
                  },
                  "pattern": {
                     "name": "pattern",
                     "type": "string",
                     "parent": "InputHTMLAttributes"
                  },
                  "placeholder": {
                     "name": "placeholder",
                     "type": "string",
                     "parent": "InputHTMLAttributes"
                  },
                  "readOnly": {
                     "name": "readOnly",
                     "type": "boolean",
                     "parent": "InputHTMLAttributes"
                  },
                  "required": {
                     "name": "required",
                     "type": "boolean",
                     "default": false,
                     "parent": "InputHTMLAttributes"
                  },
                  "size": {
                     "name": "size",
                     "type": "number",
                     "parent": "InputHTMLAttributes"
                  },
                  "src": {
                     "name": "src",
                     "type": "string",
                     "parent": "InputHTMLAttributes"
                  },
                  "step": {
                     "name": "step",
                     "type": "string",
                     "multipleTypes": true,
                     "parent": "InputHTMLAttributes"
                  },
                  "onChange": {
                     "name": "onChange",
                     "type": "Event",
                     "parent": "InputHTMLAttributes"
                  },
                  "defaultChecked": {
                     "name": "defaultChecked",
                     "type": "boolean",
                     "parent": "HTMLAttributes"
                  },
                  "defaultValue": {
                     "name": "defaultValue",
                     "type": "string",
                     "multipleTypes": true,
                     "parent": "HTMLAttributes"
                  },
                  "suppressContentEditableWarning": {
                     "name": "suppressContentEditableWarning",
                     "type": "boolean",
                     "parent": "HTMLAttributes"
                  },
                  "suppressHydrationWarning": {
                     "name": "suppressHydrationWarning",
                     "type": "boolean",
                     "parent": "HTMLAttributes"
                  },
                  "accessKey": {
                     "name": "accessKey",
                     "type": "string",
                     "parent": "HTMLAttributes"
                  },
                  "contentEditable": {
                     "name": "contentEditable",
                     "type": "boolean",
                     "parent": "HTMLAttributes"
                  },
                  "contextMenu": {
                     "name": "contextMenu",
                     "type": "string",
                     "parent": "HTMLAttributes"
                  },
                  "dir": {
                     "name": "dir",
                     "type": "string",
                     "parent": "HTMLAttributes"
                  },
                  "draggable": {
                     "name": "draggable",
                     "type": "boolean",
                     "parent": "HTMLAttributes"
                  },
                  "hidden": {
                     "name": "hidden",
                     "type": "boolean",
                     "parent": "HTMLAttributes"
                  },
                  "lang": {
                     "name": "lang",
                     "type": "string",
                     "parent": "HTMLAttributes"
                  },
                  "slot": {
                     "name": "slot",
                     "type": "string",
                     "parent": "HTMLAttributes"
                  },
                  "spellCheck": {
                     "name": "spellCheck",
                     "type": "boolean",
                     "parent": "HTMLAttributes"
                  },
                  "style": {
                     "name": "style",
                     "type": "object",
                     "parent": "HTMLAttributes"
                  },
                  "tabIndex": {
                     "name": "tabIndex",
                     "type": "number",
                     "parent": "HTMLAttributes"
                  },
                  "title": {
                     "name": "title",
                     "type": "string",
                     "parent": "HTMLAttributes"
                  },
                  "inputMode": {
                     "name": "inputMode",
                     "type": "string",
                     "parent": "HTMLAttributes"
                  },
                  "is": {
                     "name": "is",
                     "type": "string",
                     "parent": "HTMLAttributes"
                  },
                  "radioGroup": {
                     "name": "radioGroup",
                     "type": "string",
                     "parent": "HTMLAttributes"
                  },
                  "role": {
                     "name": "role",
                     "type": "string",
                     "parent": "HTMLAttributes"
                  },
                  "about": {
                     "name": "about",
                     "type": "string",
                     "parent": "HTMLAttributes"
                  },
                  "datatype": {
                     "name": "datatype",
                     "type": "string",
                     "parent": "HTMLAttributes"
                  },
                  "inlist": {
                     "name": "inlist",
                     "type": "unknown",
                     "parent": "HTMLAttributes"
                  },
                  "prefix": {
                     "name": "prefix",
                     "type": "string",
                     "parent": "HTMLAttributes"
                  },
                  "property": {
                     "name": "property",
                     "type": "string",
                     "parent": "HTMLAttributes"
                  },
                  "resource": {
                     "name": "resource",
                     "type": "string",
                     "parent": "HTMLAttributes"
                  },
                  "typeof": {
                     "name": "typeof",
                     "type": "string",
                     "parent": "HTMLAttributes"
                  },
                  "vocab": {
                     "name": "vocab",
                     "type": "string",
                     "parent": "HTMLAttributes"
                  },
                  "autoCapitalize": {
                     "name": "autoCapitalize",
                     "type": "string",
                     "parent": "HTMLAttributes"
                  },
                  "autoCorrect": {
                     "name": "autoCorrect",
                     "type": "string",
                     "parent": "HTMLAttributes"
                  },
                  "autoSave": {
                     "name": "autoSave",
                     "type": "string",
                     "parent": "HTMLAttributes"
                  },
                  "color": {
                     "name": "color",
                     "type": "string",
                     "parent": "HTMLAttributes"
                  },
                  "itemProp": {
                     "name": "itemProp",
                     "type": "string",
                     "parent": "HTMLAttributes"
                  },
                  "itemScope": {
                     "name": "itemScope",
                     "type": "boolean",
                     "parent": "HTMLAttributes"
                  },
                  "itemType": {
                     "name": "itemType",
                     "type": "string",
                     "parent": "HTMLAttributes"
                  },
                  "itemID": {
                     "name": "itemID",
                     "type": "string",
                     "parent": "HTMLAttributes"
                  },
                  "itemRef": {
                     "name": "itemRef",
                     "type": "string",
                     "parent": "HTMLAttributes"
                  },
                  "results": {
                     "name": "results",
                     "type": "number",
                     "parent": "HTMLAttributes"
                  },
                  "security": {
                     "name": "security",
                     "type": "string",
                     "parent": "HTMLAttributes"
                  },
                  "unselectable": {
                     "name": "unselectable",
                     "type": "string",
                     "enum": [
                        "on",
                        "off"
                     ],
                     "parent": "HTMLAttributes"
                  },
                  "aria-activedescendant": {
                     "name": "aria-activedescendant",
                     "type": "string",
                     "description": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",
                     "parent": "HTMLAttributes"
                  },
                  "aria-atomic": {
                     "name": "aria-atomic",
                     "type": "boolean",
                     "multipleTypes": true,
                     "description": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",
                     "parent": "HTMLAttributes"
                  },
                  "aria-autocomplete": {
                     "name": "aria-autocomplete",
                     "type": "string",
                     "enum": [
                        "list",
                        "none",
                        "inline",
                        "both"
                     ],
                     "description": "Indicates whether inputting text could trigger display of one or more predictions of the users intended value for an input and specifies how predictions would be presented if they are made.",
                     "parent": "HTMLAttributes"
                  },
                  "aria-busy": {
                     "name": "aria-busy",
                     "type": "boolean",
                     "multipleTypes": true,
                     "description": "Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.",
                     "parent": "HTMLAttributes"
                  },
                  "aria-checked": {
                     "name": "aria-checked",
                     "type": "boolean",
                     "multipleTypes": true,
                     "description": "Indicates the current checked state of checkboxes, radio buttons, and other widgets.",
                     "parent": "HTMLAttributes"
                  },
                  "aria-colcount": {
                     "name": "aria-colcount",
                     "type": "number",
                     "description": "Defines the total number of columns in a table, grid, or treegrid.",
                     "parent": "HTMLAttributes"
                  },
                  "aria-colindex": {
                     "name": "aria-colindex",
                     "type": "number",
                     "description": "Defines an elements column index or position with respect to the total number of columns within a table, grid, or treegrid.",
                     "parent": "HTMLAttributes"
                  },
                  "aria-colspan": {
                     "name": "aria-colspan",
                     "type": "number",
                     "description": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",
                     "parent": "HTMLAttributes"
                  },
                  "aria-controls": {
                     "name": "aria-controls",
                     "type": "string",
                     "description": "Identifies the element (or elements) whose contents or presence are controlled by the current element.",
                     "parent": "HTMLAttributes"
                  },
                  "aria-current": {
                     "name": "aria-current",
                     "type": "boolean",
                     "multipleTypes": true,
                     "description": "Indicates the element that represents the current item within a container or set of related elements.",
                     "parent": "HTMLAttributes"
                  },
                  "aria-describedby": {
                     "name": "aria-describedby",
                     "type": "string",
                     "description": "Identifies the element (or elements) that describes the object.",
                     "parent": "HTMLAttributes"
                  },
                  "aria-details": {
                     "name": "aria-details",
                     "type": "string",
                     "description": "Identifies the element that provides a detailed, extended description for the object.",
                     "parent": "HTMLAttributes"
                  },
                  "aria-disabled": {
                     "name": "aria-disabled",
                     "type": "boolean",
                     "multipleTypes": true,
                     "description": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",
                     "parent": "HTMLAttributes"
                  },
                  "aria-dropeffect": {
                     "name": "aria-dropeffect",
                     "type": "string",
                     "enum": [
                        "none",
                        "copy",
                        "execute",
                        "link",
                        "move",
                        "popup"
                     ],
                     "description": "in ARIA 1.1",
                     "parent": "HTMLAttributes"
                  },
                  "aria-errormessage": {
                     "name": "aria-errormessage",
                     "type": "string",
                     "description": "Identifies the element that provides an error message for the object.",
                     "parent": "HTMLAttributes"
                  },
                  "aria-expanded": {
                     "name": "aria-expanded",
                     "type": "boolean",
                     "multipleTypes": true,
                     "description": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",
                     "parent": "HTMLAttributes"
                  },
                  "aria-flowto": {
                     "name": "aria-flowto",
                     "type": "string",
                     "description": "Identifies the next element (or elements) in an alternate reading order of content which, at the users discretion, allows assistive technology to override the general default of reading in document source order.",
                     "parent": "HTMLAttributes"
                  },
                  "aria-grabbed": {
                     "name": "aria-grabbed",
                     "type": "boolean",
                     "multipleTypes": true,
                     "description": "in ARIA 1.1",
                     "parent": "HTMLAttributes"
                  },
                  "aria-haspopup": {
                     "name": "aria-haspopup",
                     "type": "boolean",
                     "multipleTypes": true,
                     "description": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",
                     "parent": "HTMLAttributes"
                  },
                  "aria-hidden": {
                     "name": "aria-hidden",
                     "type": "boolean",
                     "multipleTypes": true,
                     "description": "Indicates whether the element is exposed to an accessibility API.",
                     "parent": "HTMLAttributes"
                  },
                  "aria-invalid": {
                     "name": "aria-invalid",
                     "type": "boolean",
                     "multipleTypes": true,
                     "description": "Indicates the entered value does not conform to the format expected by the application.",
                     "parent": "HTMLAttributes"
                  },
                  "aria-keyshortcuts": {
                     "name": "aria-keyshortcuts",
                     "type": "string",
                     "description": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",
                     "parent": "HTMLAttributes"
                  },
                  "aria-label": {
                     "name": "aria-label",
                     "type": "string",
                     "description": "Defines a string value that labels the current element.",
                     "parent": "HTMLAttributes"
                  },
                  "aria-labelledby": {
                     "name": "aria-labelledby",
                     "type": "string",
                     "description": "Identifies the element (or elements) that labels the current element.",
                     "parent": "HTMLAttributes"
                  },
                  "aria-level": {
                     "name": "aria-level",
                     "type": "number",
                     "description": "Defines the hierarchical level of an element within a structure.",
                     "parent": "HTMLAttributes"
                  },
                  "aria-live": {
                     "name": "aria-live",
                     "type": "string",
                     "enum": [
                        "off",
                        "assertive",
                        "polite"
                     ],
                     "description": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",
                     "parent": "HTMLAttributes"
                  },
                  "aria-modal": {
                     "name": "aria-modal",
                     "type": "boolean",
                     "multipleTypes": true,
                     "description": "Indicates whether an element is modal when displayed.",
                     "parent": "HTMLAttributes"
                  },
                  "aria-multiline": {
                     "name": "aria-multiline",
                     "type": "boolean",
                     "multipleTypes": true,
                     "description": "Indicates whether a text box accepts multiple lines of input or only a single line.",
                     "parent": "HTMLAttributes"
                  },
                  "aria-multiselectable": {
                     "name": "aria-multiselectable",
                     "type": "boolean",
                     "multipleTypes": true,
                     "description": "Indicates that the user may select more than one item from the current selectable descendants.",
                     "parent": "HTMLAttributes"
                  },
                  "aria-orientation": {
                     "name": "aria-orientation",
                     "type": "string",
                     "enum": [
                        "horizontal",
                        "vertical"
                     ],
                     "description": "Indicates whether the elements orientation is horizontal, vertical, or unknown/ambiguous.",
                     "parent": "HTMLAttributes"
                  },
                  "aria-owns": {
                     "name": "aria-owns",
                     "type": "string",
                     "description": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship between DOM elements where the DOM hierarchy cannot be used to represent the relationship.",
                     "parent": "HTMLAttributes"
                  },
                  "aria-placeholder": {
                     "name": "aria-placeholder",
                     "type": "string",
                     "description": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value. A hint could be a sample value or a brief description of the expected format.",
                     "parent": "HTMLAttributes"
                  },
                  "aria-posinset": {
                     "name": "aria-posinset",
                     "type": "number",
                     "description": "Defines an elements number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
                     "parent": "HTMLAttributes"
                  },
                  "aria-pressed": {
                     "name": "aria-pressed",
                     "type": "boolean",
                     "multipleTypes": true,
                     "description": "Indicates the current pressed state of toggle buttons.",
                     "parent": "HTMLAttributes"
                  },
                  "aria-readonly": {
                     "name": "aria-readonly",
                     "type": "boolean",
                     "multipleTypes": true,
                     "description": "Indicates that the element is not editable, but is otherwise operable.",
                     "parent": "HTMLAttributes"
                  },
                  "aria-relevant": {
                     "name": "aria-relevant",
                     "type": "string",
                     "enum": [
                        "text",
                        "additions",
                        "additions text",
                        "all",
                        "removals"
                     ],
                     "description": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",
                     "parent": "HTMLAttributes"
                  },
                  "aria-required": {
                     "name": "aria-required",
                     "type": "boolean",
                     "multipleTypes": true,
                     "description": "Indicates that user input is required on the element before a form may be submitted.",
                     "parent": "HTMLAttributes"
                  },
                  "aria-roledescription": {
                     "name": "aria-roledescription",
                     "type": "string",
                     "description": "Defines a human-readable, author-localized description for the role of an element.",
                     "parent": "HTMLAttributes"
                  },
                  "aria-rowcount": {
                     "name": "aria-rowcount",
                     "type": "number",
                     "description": "Defines the total number of rows in a table, grid, or treegrid.",
                     "parent": "HTMLAttributes"
                  },
                  "aria-rowindex": {
                     "name": "aria-rowindex",
                     "type": "number",
                     "description": "Defines an elements row index or position with respect to the total number of rows within a table, grid, or treegrid.",
                     "parent": "HTMLAttributes"
                  },
                  "aria-rowspan": {
                     "name": "aria-rowspan",
                     "type": "number",
                     "description": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",
                     "parent": "HTMLAttributes"
                  },
                  "aria-selected": {
                     "name": "aria-selected",
                     "type": "boolean",
                     "multipleTypes": true,
                     "description": "Indicates the current selected state of various widgets.",
                     "parent": "HTMLAttributes"
                  },
                  "aria-setsize": {
                     "name": "aria-setsize",
                     "type": "number",
                     "description": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
                     "parent": "HTMLAttributes"
                  },
                  "aria-sort": {
                     "name": "aria-sort",
                     "type": "string",
                     "enum": [
                        "none",
                        "ascending",
                        "descending",
                        "other"
                     ],
                     "description": "Indicates if items in a table or grid are sorted in ascending or descending order.",
                     "parent": "HTMLAttributes"
                  },
                  "aria-valuemax": {
                     "name": "aria-valuemax",
                     "type": "number",
                     "description": "Defines the maximum allowed value for a range widget.",
                     "parent": "HTMLAttributes"
                  },
                  "aria-valuemin": {
                     "name": "aria-valuemin",
                     "type": "number",
                     "description": "Defines the minimum allowed value for a range widget.",
                     "parent": "HTMLAttributes"
                  },
                  "aria-valuenow": {
                     "name": "aria-valuenow",
                     "type": "number",
                     "description": "Defines the current value for a range widget.",
                     "parent": "HTMLAttributes"
                  },
                  "aria-valuetext": {
                     "name": "aria-valuetext",
                     "type": "string",
                     "description": "Defines the human readable text alternative of aria-valuenow for a range widget.",
                     "parent": "HTMLAttributes"
                  },
                  "dangerouslySetInnerHTML": {
                     "name": "dangerouslySetInnerHTML",
                     "type": "unknown",
                     "parent": "DOMAttributes"
                  },
                  "onCopyCapture": {
                     "name": "onCopyCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onCut": {
                     "name": "onCut",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onCutCapture": {
                     "name": "onCutCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onPaste": {
                     "name": "onPaste",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onPasteCapture": {
                     "name": "onPasteCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onCompositionEnd": {
                     "name": "onCompositionEnd",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onCompositionEndCapture": {
                     "name": "onCompositionEndCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onCompositionStart": {
                     "name": "onCompositionStart",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onCompositionStartCapture": {
                     "name": "onCompositionStartCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onCompositionUpdate": {
                     "name": "onCompositionUpdate",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onCompositionUpdateCapture": {
                     "name": "onCompositionUpdateCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onFocus": {
                     "name": "onFocus",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onFocusCapture": {
                     "name": "onFocusCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onBlur": {
                     "name": "onBlur",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onBlurCapture": {
                     "name": "onBlurCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onChangeCapture": {
                     "name": "onChangeCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onBeforeInput": {
                     "name": "onBeforeInput",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onBeforeInputCapture": {
                     "name": "onBeforeInputCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onInput": {
                     "name": "onInput",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onInputCapture": {
                     "name": "onInputCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onReset": {
                     "name": "onReset",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onResetCapture": {
                     "name": "onResetCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onSubmit": {
                     "name": "onSubmit",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onSubmitCapture": {
                     "name": "onSubmitCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onInvalid": {
                     "name": "onInvalid",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onInvalidCapture": {
                     "name": "onInvalidCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onLoad": {
                     "name": "onLoad",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onLoadCapture": {
                     "name": "onLoadCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onError": {
                     "name": "onError",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onErrorCapture": {
                     "name": "onErrorCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onKeyDown": {
                     "name": "onKeyDown",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onKeyDownCapture": {
                     "name": "onKeyDownCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onKeyPress": {
                     "name": "onKeyPress",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onKeyPressCapture": {
                     "name": "onKeyPressCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onKeyUp": {
                     "name": "onKeyUp",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onKeyUpCapture": {
                     "name": "onKeyUpCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onAbort": {
                     "name": "onAbort",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onAbortCapture": {
                     "name": "onAbortCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onCanPlay": {
                     "name": "onCanPlay",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onCanPlayCapture": {
                     "name": "onCanPlayCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onCanPlayThrough": {
                     "name": "onCanPlayThrough",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onCanPlayThroughCapture": {
                     "name": "onCanPlayThroughCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onDurationChange": {
                     "name": "onDurationChange",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onDurationChangeCapture": {
                     "name": "onDurationChangeCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onEmptied": {
                     "name": "onEmptied",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onEmptiedCapture": {
                     "name": "onEmptiedCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onEncrypted": {
                     "name": "onEncrypted",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onEncryptedCapture": {
                     "name": "onEncryptedCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onEnded": {
                     "name": "onEnded",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onEndedCapture": {
                     "name": "onEndedCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onLoadedData": {
                     "name": "onLoadedData",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onLoadedDataCapture": {
                     "name": "onLoadedDataCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onLoadedMetadata": {
                     "name": "onLoadedMetadata",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onLoadedMetadataCapture": {
                     "name": "onLoadedMetadataCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onLoadStart": {
                     "name": "onLoadStart",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onLoadStartCapture": {
                     "name": "onLoadStartCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onPause": {
                     "name": "onPause",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onPauseCapture": {
                     "name": "onPauseCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onPlay": {
                     "name": "onPlay",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onPlayCapture": {
                     "name": "onPlayCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onPlaying": {
                     "name": "onPlaying",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onPlayingCapture": {
                     "name": "onPlayingCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onProgress": {
                     "name": "onProgress",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onProgressCapture": {
                     "name": "onProgressCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onRateChange": {
                     "name": "onRateChange",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onRateChangeCapture": {
                     "name": "onRateChangeCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onSeeked": {
                     "name": "onSeeked",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onSeekedCapture": {
                     "name": "onSeekedCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onSeeking": {
                     "name": "onSeeking",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onSeekingCapture": {
                     "name": "onSeekingCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onStalled": {
                     "name": "onStalled",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onStalledCapture": {
                     "name": "onStalledCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onSuspend": {
                     "name": "onSuspend",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onSuspendCapture": {
                     "name": "onSuspendCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onTimeUpdate": {
                     "name": "onTimeUpdate",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onTimeUpdateCapture": {
                     "name": "onTimeUpdateCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onVolumeChange": {
                     "name": "onVolumeChange",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onVolumeChangeCapture": {
                     "name": "onVolumeChangeCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onWaiting": {
                     "name": "onWaiting",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onWaitingCapture": {
                     "name": "onWaitingCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onClick": {
                     "name": "onClick",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onClickCapture": {
                     "name": "onClickCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onContextMenu": {
                     "name": "onContextMenu",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onContextMenuCapture": {
                     "name": "onContextMenuCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onDoubleClick": {
                     "name": "onDoubleClick",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onDoubleClickCapture": {
                     "name": "onDoubleClickCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onDrag": {
                     "name": "onDrag",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onDragCapture": {
                     "name": "onDragCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onDragEnd": {
                     "name": "onDragEnd",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onDragEndCapture": {
                     "name": "onDragEndCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onDragEnter": {
                     "name": "onDragEnter",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onDragEnterCapture": {
                     "name": "onDragEnterCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onDragExit": {
                     "name": "onDragExit",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onDragExitCapture": {
                     "name": "onDragExitCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onDragLeave": {
                     "name": "onDragLeave",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onDragLeaveCapture": {
                     "name": "onDragLeaveCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onDragOver": {
                     "name": "onDragOver",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onDragOverCapture": {
                     "name": "onDragOverCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onDragStart": {
                     "name": "onDragStart",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onDragStartCapture": {
                     "name": "onDragStartCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onDrop": {
                     "name": "onDrop",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onDropCapture": {
                     "name": "onDropCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onMouseDown": {
                     "name": "onMouseDown",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onMouseDownCapture": {
                     "name": "onMouseDownCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onMouseEnter": {
                     "name": "onMouseEnter",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onMouseLeave": {
                     "name": "onMouseLeave",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onMouseMove": {
                     "name": "onMouseMove",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onMouseMoveCapture": {
                     "name": "onMouseMoveCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onMouseOut": {
                     "name": "onMouseOut",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onMouseOutCapture": {
                     "name": "onMouseOutCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onMouseOver": {
                     "name": "onMouseOver",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onMouseOverCapture": {
                     "name": "onMouseOverCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onMouseUp": {
                     "name": "onMouseUp",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onMouseUpCapture": {
                     "name": "onMouseUpCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onSelect": {
                     "name": "onSelect",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onSelectCapture": {
                     "name": "onSelectCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onTouchCancel": {
                     "name": "onTouchCancel",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onTouchCancelCapture": {
                     "name": "onTouchCancelCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onTouchEnd": {
                     "name": "onTouchEnd",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onTouchEndCapture": {
                     "name": "onTouchEndCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onTouchMove": {
                     "name": "onTouchMove",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onTouchMoveCapture": {
                     "name": "onTouchMoveCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onTouchStart": {
                     "name": "onTouchStart",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onTouchStartCapture": {
                     "name": "onTouchStartCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onPointerDown": {
                     "name": "onPointerDown",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onPointerDownCapture": {
                     "name": "onPointerDownCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onPointerMove": {
                     "name": "onPointerMove",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onPointerMoveCapture": {
                     "name": "onPointerMoveCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onPointerUp": {
                     "name": "onPointerUp",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onPointerUpCapture": {
                     "name": "onPointerUpCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onPointerCancel": {
                     "name": "onPointerCancel",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onPointerCancelCapture": {
                     "name": "onPointerCancelCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onPointerEnter": {
                     "name": "onPointerEnter",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onPointerEnterCapture": {
                     "name": "onPointerEnterCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onPointerLeave": {
                     "name": "onPointerLeave",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onPointerLeaveCapture": {
                     "name": "onPointerLeaveCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onPointerOver": {
                     "name": "onPointerOver",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onPointerOverCapture": {
                     "name": "onPointerOverCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onPointerOut": {
                     "name": "onPointerOut",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onPointerOutCapture": {
                     "name": "onPointerOutCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onGotPointerCapture": {
                     "name": "onGotPointerCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onGotPointerCaptureCapture": {
                     "name": "onGotPointerCaptureCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onLostPointerCapture": {
                     "name": "onLostPointerCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onLostPointerCaptureCapture": {
                     "name": "onLostPointerCaptureCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onScroll": {
                     "name": "onScroll",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onScrollCapture": {
                     "name": "onScrollCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onWheel": {
                     "name": "onWheel",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onWheelCapture": {
                     "name": "onWheelCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onAnimationStart": {
                     "name": "onAnimationStart",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onAnimationStartCapture": {
                     "name": "onAnimationStartCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onAnimationEnd": {
                     "name": "onAnimationEnd",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onAnimationEndCapture": {
                     "name": "onAnimationEndCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onAnimationIteration": {
                     "name": "onAnimationIteration",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onAnimationIterationCapture": {
                     "name": "onAnimationIterationCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onTransitionEnd": {
                     "name": "onTransitionEnd",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onTransitionEndCapture": {
                     "name": "onTransitionEndCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  }
               }
            },
            "overrides": {
               "props": {
                  "inputRef": {
                     "source": "example",
                     "relativePath": "packages/forma-36-react-components/src/components/TextInput/TextInput.stories.tsx",
                     "prev": {
                        "type": "unknown"
                     },
                     "new": {
                        "type": "object"
                     }
                  }
               }
            }
         },
         "TextField": {
            "packageName": "@contentful/forma-36-react-components",
            "exportedName": "TextField",
            "relativePath": "packages/forma-36-react-components/src/components/TextField/TextField.tsx",
            "importedName": "TextField",
            "resolved": [
               {
                  "relativePath": "packages/forma-36-react-components/src/index.ts",
                  "exportName": "TextField"
               },
               {
                  "relativePath": "packages/forma-36-react-components/src/components/TextField/TextField.tsx",
                  "exportName": "TextField"
               }
            ],
            "parsed": {
               "props": {
                  "name": {
                     "name": "name",
                     "type": "string",
                     "parent": "TextFieldProps"
                  },
                  "id": {
                     "name": "id",
                     "type": "string",
                     "parent": "TextFieldProps"
                  },
                  "width": {
                     "name": "width",
                     "type": "string",
                     "default": "full",
                     "parent": "TextFieldProps"
                  },
                  "labelText": {
                     "name": "labelText",
                     "type": "string",
                     "parent": "TextFieldProps"
                  },
                  "value": {
                     "name": "value",
                     "type": "string",
                     "parent": "TextFieldProps"
                  },
                  "validationMessage": {
                     "name": "validationMessage",
                     "type": "string",
                     "parent": "TextFieldProps"
                  },
                  "testId": {
                     "name": "testId",
                     "type": "string",
                     "default": "cf-ui-text-field",
                     "parent": "TextFieldProps"
                  },
                  "className": {
                     "name": "className",
                     "type": "string",
                     "parent": "TextFieldProps"
                  },
                  "formLabelProps": {
                     "name": "formLabelProps",
                     "type": "unknown",
                     "parent": "TextFieldProps"
                  },
                  "textLinkProps": {
                     "name": "textLinkProps",
                     "type": "unknown",
                     "parent": "TextFieldProps"
                  },
                  "textInputProps": {
                     "name": "textInputProps",
                     "type": "unknown",
                     "parent": "TextFieldProps"
                  },
                  "helpText": {
                     "name": "helpText",
                     "type": "string",
                     "parent": "TextFieldProps"
                  },
                  "required": {
                     "name": "required",
                     "type": "boolean",
                     "default": false,
                     "parent": "TextFieldProps"
                  },
                  "textarea": {
                     "name": "textarea",
                     "type": "boolean",
                     "default": false,
                     "parent": "TextFieldProps"
                  },
                  "countCharacters": {
                     "name": "countCharacters",
                     "type": "boolean",
                     "default": false,
                     "parent": "TextFieldProps"
                  },
                  "onChange": {
                     "name": "onChange",
                     "type": "Event",
                     "parent": "TextFieldProps"
                  },
                  "onBlur": {
                     "name": "onBlur",
                     "type": "Event",
                     "parent": "TextFieldProps"
                  },
                  "onFocus": {
                     "name": "onFocus",
                     "type": "Event",
                     "parent": "TextFieldProps"
                  }
               }
            },
            "overrides": {
               "props": {
                  "formLabelProps": {
                     "source": "example",
                     "relativePath": "packages/forma-36-react-components/src/components/TextField/TextField.stories.tsx",
                     "prev": {
                        "type": "unknown"
                     },
                     "new": {
                        "type": "object"
                     }
                  },
                  "textInputProps": {
                     "source": "example",
                     "relativePath": "packages/forma-36-react-components/src/components/TextField/TextField.stories.tsx",
                     "prev": {
                        "type": "unknown"
                     },
                     "new": {
                        "type": "object"
                     }
                  },
                  "textLinkProps": {
                     "source": "example",
                     "relativePath": "packages/forma-36-react-components/src/components/TextField/TextField.stories.tsx",
                     "prev": {
                        "type": "unknown"
                     },
                     "new": {
                        "type": "object"
                     }
                  }
               }
            }
         },
         "Textarea": {
            "packageName": "@contentful/forma-36-react-components",
            "exportedName": "Textarea",
            "relativePath": "packages/forma-36-react-components/src/components/Textarea/Textarea.tsx",
            "importedName": "Textarea",
            "resolved": [
               {
                  "relativePath": "packages/forma-36-react-components/src/index.ts",
                  "exportName": "Textarea"
               },
               {
                  "relativePath": "packages/forma-36-react-components/src/components/Textarea/Textarea.tsx",
                  "exportName": "Textarea"
               }
            ],
            "parsed": {
               "props": {
                  "name": {
                     "name": "name",
                     "type": "string",
                     "parent": "TextareaProps"
                  },
                  "id": {
                     "name": "id",
                     "type": "string",
                     "parent": "TextareaProps"
                  },
                  "testId": {
                     "name": "testId",
                     "type": "string",
                     "default": "cf-ui-textarea",
                     "parent": "TextareaProps"
                  },
                  "placeholder": {
                     "name": "placeholder",
                     "type": "string",
                     "parent": "TextareaProps"
                  },
                  "className": {
                     "name": "className",
                     "type": "string",
                     "parent": "TextareaProps"
                  },
                  "width": {
                     "name": "width",
                     "type": "string",
                     "enum": [
                        "small",
                        "medium",
                        "large",
                        "full"
                     ],
                     "default": "full",
                     "parent": "TextareaProps"
                  },
                  "maxLength": {
                     "name": "maxLength",
                     "type": "number",
                     "parent": "TextareaProps"
                  },
                  "required": {
                     "name": "required",
                     "type": "boolean",
                     "default": false,
                     "parent": "TextareaProps"
                  },
                  "disabled": {
                     "name": "disabled",
                     "type": "boolean",
                     "default": false,
                     "parent": "TextareaProps"
                  },
                  "value": {
                     "name": "value",
                     "type": "string",
                     "parent": "TextareaProps"
                  },
                  "rows": {
                     "name": "rows",
                     "type": "number",
                     "parent": "TextareaProps"
                  },
                  "error": {
                     "name": "error",
                     "type": "boolean",
                     "parent": "TextareaProps"
                  },
                  "onChange": {
                     "name": "onChange",
                     "type": "Event",
                     "parent": "TextareaProps"
                  },
                  "onBlur": {
                     "name": "onBlur",
                     "type": "Event",
                     "parent": "TextareaProps"
                  },
                  "onFocus": {
                     "name": "onFocus",
                     "type": "Event",
                     "parent": "TextareaProps"
                  },
                  "onKeyPress": {
                     "name": "onKeyPress",
                     "type": "Event",
                     "parent": "TextareaProps"
                  },
                  "onKeyDown": {
                     "name": "onKeyDown",
                     "type": "Event",
                     "parent": "TextareaProps"
                  },
                  "onKeyUp": {
                     "name": "onKeyUp",
                     "type": "Event",
                     "parent": "TextareaProps"
                  },
                  "willBlurOnEsc": {
                     "name": "willBlurOnEsc",
                     "type": "boolean",
                     "default": false,
                     "parent": "TextareaProps"
                  },
                  "textareaRef": {
                     "name": "textareaRef",
                     "type": "unknown",
                     "parent": "TextareaProps"
                  }
               }
            },
            "overrides": {
               "props": {
                  "textareaRef": {
                     "source": "example",
                     "relativePath": "packages/forma-36-react-components/src/components/Textarea/Textarea.stories.tsx",
                     "prev": {
                        "type": "unknown"
                     },
                     "new": {
                        "type": "object"
                     }
                  }
               }
            }
         },
         "CopyButton": {
            "packageName": "@contentful/forma-36-react-components",
            "exportedName": "CopyButton",
            "relativePath": "packages/forma-36-react-components/src/components/CopyButton/CopyButton.tsx",
            "importedName": "CopyButton",
            "resolved": [
               {
                  "relativePath": "packages/forma-36-react-components/src/index.ts",
                  "exportName": "CopyButton"
               },
               {
                  "relativePath": "packages/forma-36-react-components/src/components/CopyButton/CopyButton.tsx",
                  "exportName": "CopyButton"
               }
            ],
            "parsed": {
               "props": {
                  "copyValue": {
                     "name": "copyValue",
                     "type": "string",
                     "parent": "CopyButtonProps"
                  },
                  "onCopy": {
                     "name": "onCopy",
                     "type": "Event",
                     "parent": "CopyButtonProps"
                  },
                  "className": {
                     "name": "className",
                     "type": "string",
                     "parent": "CopyButtonProps"
                  },
                  "testId": {
                     "name": "testId",
                     "type": "string",
                     "default": "cf-ui-copy-button",
                     "parent": "CopyButtonProps"
                  },
                  "tooltipPlace": {
                     "name": "tooltipPlace",
                     "type": "string",
                     "enum": [
                        "auto",
                        "auto-start",
                        "auto-end",
                        "top",
                        "bottom",
                        "right",
                        "left",
                        "top-start",
                        "top-end",
                        "bottom-start",
                        "bottom-end",
                        "right-start",
                        "right-end",
                        "left-start",
                        "left-end"
                     ],
                     "parent": "CopyButtonProps"
                  },
                  "tooltipText": {
                     "name": "tooltipText",
                     "type": "array",
                     "items": {
                        "type": "Node"
                     },
                     "parent": "CopyButtonProps"
                  },
                  "tooltipCopiedText": {
                     "name": "tooltipCopiedText",
                     "type": "array",
                     "items": {
                        "type": "Node"
                     },
                     "parent": "CopyButtonProps"
                  }
               }
            }
         },
         "Card": {
            "packageName": "@contentful/forma-36-react-components",
            "exportedName": "Card",
            "relativePath": "packages/forma-36-react-components/src/components/Card/Card.tsx",
            "importedName": "Card",
            "resolved": [
               {
                  "relativePath": "packages/forma-36-react-components/src/index.ts",
                  "exportName": "Card"
               },
               {
                  "relativePath": "packages/forma-36-react-components/src/components/Card/Card.tsx",
                  "exportName": "Card"
               }
            ],
            "parsed": {
               "props": {
                  "onClick": {
                     "name": "onClick",
                     "type": "Event",
                     "description": "The action to be performed on click of the Card component",
                     "parent": "CardPropTypes"
                  },
                  "padding": {
                     "name": "padding",
                     "type": "string",
                     "enum": [
                        "default",
                        "large",
                        "none"
                     ],
                     "default": "default",
                     "description": "Applies padding styles of different sizes",
                     "parent": "CardPropTypes"
                  },
                  "title": {
                     "name": "title",
                     "type": "string",
                     "description": "The title of the entry",
                     "parent": "CardPropTypes"
                  },
                  "style": {
                     "name": "style",
                     "type": "object",
                     "description": "Any additional styles that are being applied",
                     "parent": "CardPropTypes"
                  },
                  "href": {
                     "name": "href",
                     "type": "string",
                     "description": "Used to make the decision of either rendering the card as a link tag or as a div tag",
                     "parent": "BaseCardProps"
                  },
                  "target": {
                     "name": "target",
                     "type": "string",
                     "description": "Used with href to specify target attribute value",
                     "parent": "BaseCardProps"
                  },
                  "selected": {
                     "name": "selected",
                     "type": "boolean",
                     "default": false,
                     "description": "Applies selected styles to the element",
                     "parent": "BaseCardProps"
                  },
                  "testId": {
                     "name": "testId",
                     "type": "string",
                     "default": "cf-ui-card",
                     "description": "An ID used for testing purposes applied as a data attribute (data-test-id)",
                     "parent": "BaseCardProps"
                  },
                  "className": {
                     "name": "className",
                     "type": "string",
                     "description": "Class names to be appended to the className prop of the component",
                     "parent": "BaseCardProps"
                  },
                  "children": {
                     "name": "children",
                     "type": "array",
                     "items": {
                        "type": "Node"
                     }
                  }
               }
            }
         },
         "CardActions": {
            "packageName": "@contentful/forma-36-react-components",
            "exportedName": "CardActions",
            "relativePath": "packages/forma-36-react-components/src/components/Card/CardActions/CardActions.tsx",
            "importedName": "CardActions",
            "resolved": [
               {
                  "relativePath": "packages/forma-36-react-components/src/index.ts",
                  "exportName": "CardActions"
               },
               {
                  "relativePath": "packages/forma-36-react-components/src/components/Card/CardActions/CardActions.tsx",
                  "exportName": "CardActions"
               }
            ],
            "parsed": {
               "props": {
                  "className": {
                     "name": "className",
                     "type": "string",
                     "description": "Class names to be appended to the className prop of the component",
                     "parent": "CardActionsPropTypes"
                  },
                  "iconButtonProps": {
                     "name": "iconButtonProps",
                     "type": "unknown",
                     "description": "Props to pass down to the IconButton component",
                     "parent": "CardActionsPropTypes"
                  },
                  "isDisabled": {
                     "name": "isDisabled",
                     "type": "boolean",
                     "default": false,
                     "description": "A boolean used to disable the actions",
                     "parent": "CardActionsPropTypes"
                  },
                  "children": {
                     "name": "children",
                     "type": "array",
                     "items": {
                        "type": "Node"
                     },
                     "multipleTypes": true,
                     "description": "The DropdownList elements used to render an actions dropdown for the component",
                     "parent": "CardActionsPropTypes"
                  },
                  "testId": {
                     "name": "testId",
                     "type": "string",
                     "default": "cf-ui-card-actions",
                     "description": "An ID used for testing purposes applied as a data attribute (data-test-id)",
                     "parent": "CardActionsPropTypes"
                  }
               }
            }
         },
         "Tooltip": {
            "packageName": "@contentful/forma-36-react-components",
            "exportedName": "Tooltip",
            "relativePath": "packages/forma-36-react-components/src/components/Tooltip/Tooltip.tsx",
            "importedName": "Tooltip",
            "resolved": [
               {
                  "relativePath": "packages/forma-36-react-components/src/index.ts",
                  "exportName": "Tooltip"
               },
               {
                  "relativePath": "packages/forma-36-react-components/src/components/Tooltip/Tooltip.tsx",
                  "exportName": "Tooltip"
               }
            ],
            "parsed": {
               "props": {
                  "children": {
                     "name": "children",
                     "type": "array",
                     "items": {
                        "type": "Node"
                     },
                     "description": "Child nodes to be rendered in the component and that will show the tooltip when they are hovered",
                     "parent": "TooltipProps"
                  },
                  "className": {
                     "name": "className",
                     "type": "string",
                     "description": "Class names to be appended to the className prop of the Tooltip wrapper",
                     "parent": "TooltipProps"
                  },
                  "containerElement": {
                     "name": "containerElement",
                     "type": "string",
                     "enum": [
                        "symbol",
                        "object",
                        "a",
                        "abbr",
                        "address",
                        "area",
                        "article",
                        "aside",
                        "audio",
                        "b",
                        "base",
                        "bdi",
                        "bdo",
                        "big",
                        "blockquote",
                        "body",
                        "br",
                        "button",
                        "canvas"
                     ],
                     "default": "span",
                     "description": "HTML element used to wrap the target of the Tooltip",
                     "parent": "TooltipProps"
                  },
                  "content": {
                     "name": "content",
                     "type": "array",
                     "items": {
                        "type": "Node"
                     },
                     "description": "Content of the Tooltip",
                     "parent": "TooltipProps"
                  },
                  "id": {
                     "name": "id",
                     "type": "string",
                     "parent": "TooltipProps"
                  },
                  "isVisible": {
                     "name": "isVisible",
                     "type": "boolean",
                     "default": false,
                     "description": "It controls the initial visibility of the Tooltip",
                     "parent": "TooltipProps"
                  },
                  "maxWidth": {
                     "name": "maxWidth",
                     "type": "string",
                     "multipleTypes": true,
                     "default": 360,
                     "description": "It sets a max-width for the Tooltip",
                     "parent": "TooltipProps"
                  },
                  "onBlur": {
                     "name": "onBlur",
                     "type": "Event",
                     "description": "Function that will be called when target gets blurred",
                     "parent": "TooltipProps"
                  },
                  "onFocus": {
                     "name": "onFocus",
                     "type": "Event",
                     "description": "Function that will be called when target gets focused",
                     "parent": "TooltipProps"
                  },
                  "onMouseLeave": {
                     "name": "onMouseLeave",
                     "type": "Event",
                     "description": "Function that will be called when the user move the mouse out of the target",
                     "parent": "TooltipProps"
                  },
                  "onMouseOver": {
                     "name": "onMouseOver",
                     "type": "Event",
                     "description": "Function that will be called when the user move the mouse over of the target",
                     "parent": "TooltipProps"
                  },
                  "place": {
                     "name": "place",
                     "type": "string",
                     "enum": [
                        "auto",
                        "auto-start",
                        "auto-end",
                        "top",
                        "bottom",
                        "right",
                        "left",
                        "top-start",
                        "top-end",
                        "bottom-start",
                        "bottom-end",
                        "right-start",
                        "right-end",
                        "left-start",
                        "left-end"
                     ],
                     "default": "auto",
                     "description": "It sets the preferred position of the Tooltip",
                     "parent": "TooltipProps"
                  },
                  "targetWrapperClassName": {
                     "name": "targetWrapperClassName",
                     "type": "string",
                     "description": "Class names to be appended to the className prop of the Tooltip’s target",
                     "parent": "TooltipProps"
                  },
                  "testId": {
                     "name": "testId",
                     "type": "string",
                     "default": "cf-ui-tooltip",
                     "description": "An ID used for testing purposes applied as a data attribute (data-test-id)",
                     "parent": "TooltipProps"
                  }
               }
            }
         },
         "EntryCard": {
            "packageName": "@contentful/forma-36-react-components",
            "exportedName": "EntryCard",
            "relativePath": "packages/forma-36-react-components/src/components/Card/EntryCard/EntryCard.tsx",
            "importedName": "EntryCard",
            "resolved": [
               {
                  "relativePath": "packages/forma-36-react-components/src/index.ts",
                  "exportName": "EntryCard"
               },
               {
                  "relativePath": "packages/forma-36-react-components/src/components/Card/EntryCard/EntryCard.tsx",
                  "exportName": "EntryCard"
               }
            ],
            "parsed": {
               "props": {
                  "title": {
                     "name": "title",
                     "type": "string",
                     "default": "Untitled",
                     "description": "The title of the entry",
                     "parent": "EntryCardPropTypes"
                  },
                  "description": {
                     "name": "description",
                     "type": "string",
                     "description": "The description of the entry",
                     "parent": "EntryCardPropTypes"
                  },
                  "contentType": {
                     "name": "contentType",
                     "type": "array",
                     "items": {
                        "type": "Node"
                     },
                     "description": "The content type of the entry",
                     "parent": "EntryCardPropTypes"
                  },
                  "status": {
                     "name": "status",
                     "type": "string",
                     "enum": [
                        "archived",
                        "changed",
                        "draft",
                        "published"
                     ],
                     "description": "The publish status of the entry",
                     "parent": "EntryCardPropTypes"
                  },
                  "statusIcon": {
                     "name": "statusIcon",
                     "type": "array",
                     "items": {
                        "type": "Node"
                     },
                     "description": "An icon for the status of the entry",
                     "parent": "EntryCardPropTypes"
                  },
                  "thumbnailElement": {
                     "name": "thumbnailElement",
                     "type": "array",
                     "items": {
                        "type": "Node"
                     },
                     "description": "The thumbnail of the entry",
                     "parent": "EntryCardPropTypes"
                  },
                  "loading": {
                     "name": "loading",
                     "type": "boolean",
                     "description": "Loading state for the EntryCard - when true will display loading feedback to the user",
                     "parent": "EntryCardPropTypes"
                  },
                  "onClick": {
                     "name": "onClick",
                     "type": "Event",
                     "description": "The action to be performed on click of the EntryCard",
                     "parent": "EntryCardPropTypes"
                  },
                  "dropdownListElements": {
                     "name": "dropdownListElements",
                     "type": "array",
                     "items": {
                        "type": "Node"
                     },
                     "multipleTypes": true,
                     "description": "The DropdownList elements used to render an actions dropdown for the EntryCard",
                     "parent": "EntryCardPropTypes"
                  },
                  "cardDragHandleComponent": {
                     "name": "cardDragHandleComponent",
                     "type": "array",
                     "items": {
                        "type": "Node"
                     },
                     "description": "Prop to pass a custom CardDragHandle component to for use in drag and drop contexts",
                     "parent": "EntryCardPropTypes"
                  },
                  "withDragHandle": {
                     "name": "withDragHandle",
                     "type": "boolean",
                     "description": "Renders a default drag handle for the component for use in drag and drop contexts",
                     "parent": "EntryCardPropTypes"
                  },
                  "cardDragHandleProps": {
                     "name": "cardDragHandleProps",
                     "type": "unknown",
                     "description": "Props to pass down to the default CardDragHandle component (does not work with cardDragHandleComponent prop)",
                     "parent": "EntryCardPropTypes"
                  },
                  "isDragActive": {
                     "name": "isDragActive",
                     "type": "boolean",
                     "description": "Applies styling for when the component is actively being dragged by the user",
                     "parent": "EntryCardPropTypes"
                  },
                  "size": {
                     "name": "size",
                     "type": "string",
                     "enum": [
                        "default",
                        "small",
                        "auto"
                     ],
                     "default": "default",
                     "description": "Changes the height of the component. When small will also ensure thumbnail and description arent rendered",
                     "parent": "EntryCardPropTypes"
                  },
                  "href": {
                     "name": "href",
                     "type": "string",
                     "description": "Used to make the decision of either rendering the card as a link tag or as a div tag",
                     "parent": "BaseCardProps"
                  },
                  "target": {
                     "name": "target",
                     "type": "string",
                     "description": "Used with href to specify target attribute value",
                     "parent": "BaseCardProps"
                  },
                  "selected": {
                     "name": "selected",
                     "type": "boolean",
                     "description": "Applies selected styles to the element",
                     "parent": "BaseCardProps"
                  },
                  "testId": {
                     "name": "testId",
                     "type": "string",
                     "default": "cf-ui-entry-card",
                     "description": "An ID used for testing purposes applied as a data attribute (data-test-id)",
                     "parent": "BaseCardProps"
                  },
                  "className": {
                     "name": "className",
                     "type": "string",
                     "description": "Class names to be appended to the className prop of the component",
                     "parent": "BaseCardProps"
                  }
               }
            }
         },
         "CardDragHandle": {
            "packageName": "@contentful/forma-36-react-components",
            "exportedName": "CardDragHandle",
            "relativePath": "packages/forma-36-react-components/src/components/Card/CardDragHandle/CardDragHandle.tsx",
            "importedName": "CardDragHandle",
            "resolved": [
               {
                  "relativePath": "packages/forma-36-react-components/src/index.ts",
                  "exportName": "CardDragHandle"
               },
               {
                  "relativePath": "packages/forma-36-react-components/src/components/Card/CardDragHandle/CardDragHandle.tsx",
                  "exportName": "CardDragHandle"
               }
            ],
            "parsed": {
               "props": {
                  "children": {
                     "name": "children",
                     "type": "array",
                     "items": {
                        "type": "Node"
                     },
                     "description": "Label rendered as child in CardDragHandle - not visible on screen as purpose is for screen readers only",
                     "parent": "CardDragHandlePropTypes"
                  },
                  "className": {
                     "name": "className",
                     "type": "string",
                     "description": "Class names to be appended to the className prop of the component",
                     "parent": "CardDragHandlePropTypes"
                  },
                  "testId": {
                     "name": "testId",
                     "type": "string",
                     "default": "cf-ui-card-drag-handle",
                     "description": "An ID used for testing purposes applied as a data attribute (data-test-id)",
                     "parent": "CardDragHandlePropTypes"
                  },
                  "isDragActive": {
                     "name": "isDragActive",
                     "type": "boolean",
                     "default": false,
                     "description": "Applies styling for when the component is actively being dragged by the user",
                     "parent": "CardDragHandlePropTypes"
                  }
               }
            }
         },
         "IconButton": {
            "packageName": "@contentful/forma-36-react-components",
            "exportedName": "IconButton",
            "relativePath": "packages/forma-36-react-components/src/components/IconButton/IconButton.tsx",
            "importedName": "IconButton",
            "resolved": [
               {
                  "relativePath": "packages/forma-36-react-components/src/index.ts",
                  "exportName": "IconButton"
               },
               {
                  "relativePath": "packages/forma-36-react-components/src/components/IconButton/IconButton.tsx",
                  "exportName": "IconButton"
               }
            ],
            "parsed": {
               "props": {
                  "label": {
                     "name": "label",
                     "type": "string",
                     "parent": "IconButtonProps"
                  },
                  "href": {
                     "name": "href",
                     "type": "string",
                     "parent": "IconButtonProps"
                  },
                  "iconProps": {
                     "name": "iconProps",
                     "type": "unknown",
                     "parent": "IconButtonProps"
                  },
                  "disabled": {
                     "name": "disabled",
                     "type": "boolean",
                     "default": false,
                     "parent": "IconButtonProps"
                  },
                  "buttonType": {
                     "name": "buttonType",
                     "type": "string",
                     "enum": [
                        "primary",
                        "positive",
                        "negative",
                        "secondary",
                        "muted",
                        "white"
                     ],
                     "default": "primary",
                     "parent": "IconButtonProps"
                  },
                  "withDropdown": {
                     "name": "withDropdown",
                     "type": "boolean",
                     "default": false,
                     "parent": "IconButtonProps"
                  },
                  "className": {
                     "name": "className",
                     "type": "string",
                     "parent": "IconButtonProps"
                  },
                  "testId": {
                     "name": "testId",
                     "type": "string",
                     "default": "cf-ui-icon-button",
                     "parent": "IconButtonProps"
                  },
                  "defaultChecked": {
                     "name": "defaultChecked",
                     "type": "boolean",
                     "parent": "HTMLAttributes"
                  },
                  "defaultValue": {
                     "name": "defaultValue",
                     "type": "string",
                     "multipleTypes": true,
                     "parent": "HTMLAttributes"
                  },
                  "suppressContentEditableWarning": {
                     "name": "suppressContentEditableWarning",
                     "type": "boolean",
                     "parent": "HTMLAttributes"
                  },
                  "suppressHydrationWarning": {
                     "name": "suppressHydrationWarning",
                     "type": "boolean",
                     "parent": "HTMLAttributes"
                  },
                  "accessKey": {
                     "name": "accessKey",
                     "type": "string",
                     "parent": "HTMLAttributes"
                  },
                  "contentEditable": {
                     "name": "contentEditable",
                     "type": "boolean",
                     "parent": "HTMLAttributes"
                  },
                  "contextMenu": {
                     "name": "contextMenu",
                     "type": "string",
                     "parent": "HTMLAttributes"
                  },
                  "dir": {
                     "name": "dir",
                     "type": "string",
                     "parent": "HTMLAttributes"
                  },
                  "draggable": {
                     "name": "draggable",
                     "type": "boolean",
                     "parent": "HTMLAttributes"
                  },
                  "hidden": {
                     "name": "hidden",
                     "type": "boolean",
                     "parent": "HTMLAttributes"
                  },
                  "id": {
                     "name": "id",
                     "type": "string",
                     "parent": "HTMLAttributes"
                  },
                  "lang": {
                     "name": "lang",
                     "type": "string",
                     "parent": "HTMLAttributes"
                  },
                  "placeholder": {
                     "name": "placeholder",
                     "type": "string",
                     "parent": "HTMLAttributes"
                  },
                  "slot": {
                     "name": "slot",
                     "type": "string",
                     "parent": "HTMLAttributes"
                  },
                  "spellCheck": {
                     "name": "spellCheck",
                     "type": "boolean",
                     "parent": "HTMLAttributes"
                  },
                  "style": {
                     "name": "style",
                     "type": "object",
                     "parent": "HTMLAttributes"
                  },
                  "tabIndex": {
                     "name": "tabIndex",
                     "type": "number",
                     "parent": "HTMLAttributes"
                  },
                  "title": {
                     "name": "title",
                     "type": "string",
                     "parent": "HTMLAttributes"
                  },
                  "inputMode": {
                     "name": "inputMode",
                     "type": "string",
                     "parent": "HTMLAttributes"
                  },
                  "is": {
                     "name": "is",
                     "type": "string",
                     "parent": "HTMLAttributes"
                  },
                  "radioGroup": {
                     "name": "radioGroup",
                     "type": "string",
                     "parent": "HTMLAttributes"
                  },
                  "role": {
                     "name": "role",
                     "type": "string",
                     "parent": "HTMLAttributes"
                  },
                  "about": {
                     "name": "about",
                     "type": "string",
                     "parent": "HTMLAttributes"
                  },
                  "datatype": {
                     "name": "datatype",
                     "type": "string",
                     "parent": "HTMLAttributes"
                  },
                  "inlist": {
                     "name": "inlist",
                     "type": "unknown",
                     "parent": "HTMLAttributes"
                  },
                  "prefix": {
                     "name": "prefix",
                     "type": "string",
                     "parent": "HTMLAttributes"
                  },
                  "property": {
                     "name": "property",
                     "type": "string",
                     "parent": "HTMLAttributes"
                  },
                  "resource": {
                     "name": "resource",
                     "type": "string",
                     "parent": "HTMLAttributes"
                  },
                  "typeof": {
                     "name": "typeof",
                     "type": "string",
                     "parent": "HTMLAttributes"
                  },
                  "vocab": {
                     "name": "vocab",
                     "type": "string",
                     "parent": "HTMLAttributes"
                  },
                  "autoCapitalize": {
                     "name": "autoCapitalize",
                     "type": "string",
                     "parent": "HTMLAttributes"
                  },
                  "autoCorrect": {
                     "name": "autoCorrect",
                     "type": "string",
                     "parent": "HTMLAttributes"
                  },
                  "autoSave": {
                     "name": "autoSave",
                     "type": "string",
                     "parent": "HTMLAttributes"
                  },
                  "color": {
                     "name": "color",
                     "type": "string",
                     "parent": "HTMLAttributes"
                  },
                  "itemProp": {
                     "name": "itemProp",
                     "type": "string",
                     "parent": "HTMLAttributes"
                  },
                  "itemScope": {
                     "name": "itemScope",
                     "type": "boolean",
                     "parent": "HTMLAttributes"
                  },
                  "itemType": {
                     "name": "itemType",
                     "type": "string",
                     "parent": "HTMLAttributes"
                  },
                  "itemID": {
                     "name": "itemID",
                     "type": "string",
                     "parent": "HTMLAttributes"
                  },
                  "itemRef": {
                     "name": "itemRef",
                     "type": "string",
                     "parent": "HTMLAttributes"
                  },
                  "results": {
                     "name": "results",
                     "type": "number",
                     "parent": "HTMLAttributes"
                  },
                  "security": {
                     "name": "security",
                     "type": "string",
                     "parent": "HTMLAttributes"
                  },
                  "unselectable": {
                     "name": "unselectable",
                     "type": "string",
                     "enum": [
                        "on",
                        "off"
                     ],
                     "parent": "HTMLAttributes"
                  },
                  "aria-activedescendant": {
                     "name": "aria-activedescendant",
                     "type": "string",
                     "description": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",
                     "parent": "HTMLAttributes"
                  },
                  "aria-atomic": {
                     "name": "aria-atomic",
                     "type": "boolean",
                     "multipleTypes": true,
                     "description": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",
                     "parent": "HTMLAttributes"
                  },
                  "aria-autocomplete": {
                     "name": "aria-autocomplete",
                     "type": "string",
                     "enum": [
                        "none",
                        "inline",
                        "list",
                        "both"
                     ],
                     "description": "Indicates whether inputting text could trigger display of one or more predictions of the users intended value for an input and specifies how predictions would be presented if they are made.",
                     "parent": "HTMLAttributes"
                  },
                  "aria-busy": {
                     "name": "aria-busy",
                     "type": "boolean",
                     "multipleTypes": true,
                     "description": "Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.",
                     "parent": "HTMLAttributes"
                  },
                  "aria-checked": {
                     "name": "aria-checked",
                     "type": "boolean",
                     "multipleTypes": true,
                     "description": "Indicates the current checked state of checkboxes, radio buttons, and other widgets.",
                     "parent": "HTMLAttributes"
                  },
                  "aria-colcount": {
                     "name": "aria-colcount",
                     "type": "number",
                     "description": "Defines the total number of columns in a table, grid, or treegrid.",
                     "parent": "HTMLAttributes"
                  },
                  "aria-colindex": {
                     "name": "aria-colindex",
                     "type": "number",
                     "description": "Defines an elements column index or position with respect to the total number of columns within a table, grid, or treegrid.",
                     "parent": "HTMLAttributes"
                  },
                  "aria-colspan": {
                     "name": "aria-colspan",
                     "type": "number",
                     "description": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",
                     "parent": "HTMLAttributes"
                  },
                  "aria-controls": {
                     "name": "aria-controls",
                     "type": "string",
                     "description": "Identifies the element (or elements) whose contents or presence are controlled by the current element.",
                     "parent": "HTMLAttributes"
                  },
                  "aria-current": {
                     "name": "aria-current",
                     "type": "boolean",
                     "multipleTypes": true,
                     "description": "Indicates the element that represents the current item within a container or set of related elements.",
                     "parent": "HTMLAttributes"
                  },
                  "aria-describedby": {
                     "name": "aria-describedby",
                     "type": "string",
                     "description": "Identifies the element (or elements) that describes the object.",
                     "parent": "HTMLAttributes"
                  },
                  "aria-details": {
                     "name": "aria-details",
                     "type": "string",
                     "description": "Identifies the element that provides a detailed, extended description for the object.",
                     "parent": "HTMLAttributes"
                  },
                  "aria-disabled": {
                     "name": "aria-disabled",
                     "type": "boolean",
                     "multipleTypes": true,
                     "description": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",
                     "parent": "HTMLAttributes"
                  },
                  "aria-dropeffect": {
                     "name": "aria-dropeffect",
                     "type": "string",
                     "enum": [
                        "none",
                        "copy",
                        "execute",
                        "link",
                        "move",
                        "popup"
                     ],
                     "description": "in ARIA 1.1",
                     "parent": "HTMLAttributes"
                  },
                  "aria-errormessage": {
                     "name": "aria-errormessage",
                     "type": "string",
                     "description": "Identifies the element that provides an error message for the object.",
                     "parent": "HTMLAttributes"
                  },
                  "aria-expanded": {
                     "name": "aria-expanded",
                     "type": "boolean",
                     "multipleTypes": true,
                     "description": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",
                     "parent": "HTMLAttributes"
                  },
                  "aria-flowto": {
                     "name": "aria-flowto",
                     "type": "string",
                     "description": "Identifies the next element (or elements) in an alternate reading order of content which, at the users discretion, allows assistive technology to override the general default of reading in document source order.",
                     "parent": "HTMLAttributes"
                  },
                  "aria-grabbed": {
                     "name": "aria-grabbed",
                     "type": "boolean",
                     "multipleTypes": true,
                     "description": "in ARIA 1.1",
                     "parent": "HTMLAttributes"
                  },
                  "aria-haspopup": {
                     "name": "aria-haspopup",
                     "type": "boolean",
                     "multipleTypes": true,
                     "description": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",
                     "parent": "HTMLAttributes"
                  },
                  "aria-hidden": {
                     "name": "aria-hidden",
                     "type": "boolean",
                     "multipleTypes": true,
                     "description": "Indicates whether the element is exposed to an accessibility API.",
                     "parent": "HTMLAttributes"
                  },
                  "aria-invalid": {
                     "name": "aria-invalid",
                     "type": "boolean",
                     "multipleTypes": true,
                     "description": "Indicates the entered value does not conform to the format expected by the application.",
                     "parent": "HTMLAttributes"
                  },
                  "aria-keyshortcuts": {
                     "name": "aria-keyshortcuts",
                     "type": "string",
                     "description": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",
                     "parent": "HTMLAttributes"
                  },
                  "aria-label": {
                     "name": "aria-label",
                     "type": "string",
                     "description": "Defines a string value that labels the current element.",
                     "parent": "HTMLAttributes"
                  },
                  "aria-labelledby": {
                     "name": "aria-labelledby",
                     "type": "string",
                     "description": "Identifies the element (or elements) that labels the current element.",
                     "parent": "HTMLAttributes"
                  },
                  "aria-level": {
                     "name": "aria-level",
                     "type": "number",
                     "description": "Defines the hierarchical level of an element within a structure.",
                     "parent": "HTMLAttributes"
                  },
                  "aria-live": {
                     "name": "aria-live",
                     "type": "string",
                     "enum": [
                        "off",
                        "assertive",
                        "polite"
                     ],
                     "description": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",
                     "parent": "HTMLAttributes"
                  },
                  "aria-modal": {
                     "name": "aria-modal",
                     "type": "boolean",
                     "multipleTypes": true,
                     "description": "Indicates whether an element is modal when displayed.",
                     "parent": "HTMLAttributes"
                  },
                  "aria-multiline": {
                     "name": "aria-multiline",
                     "type": "boolean",
                     "multipleTypes": true,
                     "description": "Indicates whether a text box accepts multiple lines of input or only a single line.",
                     "parent": "HTMLAttributes"
                  },
                  "aria-multiselectable": {
                     "name": "aria-multiselectable",
                     "type": "boolean",
                     "multipleTypes": true,
                     "description": "Indicates that the user may select more than one item from the current selectable descendants.",
                     "parent": "HTMLAttributes"
                  },
                  "aria-orientation": {
                     "name": "aria-orientation",
                     "type": "string",
                     "enum": [
                        "horizontal",
                        "vertical"
                     ],
                     "description": "Indicates whether the elements orientation is horizontal, vertical, or unknown/ambiguous.",
                     "parent": "HTMLAttributes"
                  },
                  "aria-owns": {
                     "name": "aria-owns",
                     "type": "string",
                     "description": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship between DOM elements where the DOM hierarchy cannot be used to represent the relationship.",
                     "parent": "HTMLAttributes"
                  },
                  "aria-placeholder": {
                     "name": "aria-placeholder",
                     "type": "string",
                     "description": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value. A hint could be a sample value or a brief description of the expected format.",
                     "parent": "HTMLAttributes"
                  },
                  "aria-posinset": {
                     "name": "aria-posinset",
                     "type": "number",
                     "description": "Defines an elements number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
                     "parent": "HTMLAttributes"
                  },
                  "aria-pressed": {
                     "name": "aria-pressed",
                     "type": "boolean",
                     "multipleTypes": true,
                     "description": "Indicates the current pressed state of toggle buttons.",
                     "parent": "HTMLAttributes"
                  },
                  "aria-readonly": {
                     "name": "aria-readonly",
                     "type": "boolean",
                     "multipleTypes": true,
                     "description": "Indicates that the element is not editable, but is otherwise operable.",
                     "parent": "HTMLAttributes"
                  },
                  "aria-relevant": {
                     "name": "aria-relevant",
                     "type": "string",
                     "enum": [
                        "additions",
                        "additions text",
                        "all",
                        "removals",
                        "text"
                     ],
                     "description": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",
                     "parent": "HTMLAttributes"
                  },
                  "aria-required": {
                     "name": "aria-required",
                     "type": "boolean",
                     "multipleTypes": true,
                     "description": "Indicates that user input is required on the element before a form may be submitted.",
                     "parent": "HTMLAttributes"
                  },
                  "aria-roledescription": {
                     "name": "aria-roledescription",
                     "type": "string",
                     "description": "Defines a human-readable, author-localized description for the role of an element.",
                     "parent": "HTMLAttributes"
                  },
                  "aria-rowcount": {
                     "name": "aria-rowcount",
                     "type": "number",
                     "description": "Defines the total number of rows in a table, grid, or treegrid.",
                     "parent": "HTMLAttributes"
                  },
                  "aria-rowindex": {
                     "name": "aria-rowindex",
                     "type": "number",
                     "description": "Defines an elements row index or position with respect to the total number of rows within a table, grid, or treegrid.",
                     "parent": "HTMLAttributes"
                  },
                  "aria-rowspan": {
                     "name": "aria-rowspan",
                     "type": "number",
                     "description": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",
                     "parent": "HTMLAttributes"
                  },
                  "aria-selected": {
                     "name": "aria-selected",
                     "type": "boolean",
                     "multipleTypes": true,
                     "description": "Indicates the current selected state of various widgets.",
                     "parent": "HTMLAttributes"
                  },
                  "aria-setsize": {
                     "name": "aria-setsize",
                     "type": "number",
                     "description": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
                     "parent": "HTMLAttributes"
                  },
                  "aria-sort": {
                     "name": "aria-sort",
                     "type": "string",
                     "enum": [
                        "none",
                        "ascending",
                        "descending",
                        "other"
                     ],
                     "description": "Indicates if items in a table or grid are sorted in ascending or descending order.",
                     "parent": "HTMLAttributes"
                  },
                  "aria-valuemax": {
                     "name": "aria-valuemax",
                     "type": "number",
                     "description": "Defines the maximum allowed value for a range widget.",
                     "parent": "HTMLAttributes"
                  },
                  "aria-valuemin": {
                     "name": "aria-valuemin",
                     "type": "number",
                     "description": "Defines the minimum allowed value for a range widget.",
                     "parent": "HTMLAttributes"
                  },
                  "aria-valuenow": {
                     "name": "aria-valuenow",
                     "type": "number",
                     "description": "Defines the current value for a range widget.",
                     "parent": "HTMLAttributes"
                  },
                  "aria-valuetext": {
                     "name": "aria-valuetext",
                     "type": "string",
                     "description": "Defines the human readable text alternative of aria-valuenow for a range widget.",
                     "parent": "HTMLAttributes"
                  },
                  "dangerouslySetInnerHTML": {
                     "name": "dangerouslySetInnerHTML",
                     "type": "unknown",
                     "parent": "DOMAttributes"
                  },
                  "onCopy": {
                     "name": "onCopy",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onCopyCapture": {
                     "name": "onCopyCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onCut": {
                     "name": "onCut",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onCutCapture": {
                     "name": "onCutCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onPaste": {
                     "name": "onPaste",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onPasteCapture": {
                     "name": "onPasteCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onCompositionEnd": {
                     "name": "onCompositionEnd",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onCompositionEndCapture": {
                     "name": "onCompositionEndCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onCompositionStart": {
                     "name": "onCompositionStart",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onCompositionStartCapture": {
                     "name": "onCompositionStartCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onCompositionUpdate": {
                     "name": "onCompositionUpdate",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onCompositionUpdateCapture": {
                     "name": "onCompositionUpdateCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onFocus": {
                     "name": "onFocus",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onFocusCapture": {
                     "name": "onFocusCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onBlur": {
                     "name": "onBlur",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onBlurCapture": {
                     "name": "onBlurCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onChange": {
                     "name": "onChange",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onChangeCapture": {
                     "name": "onChangeCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onBeforeInput": {
                     "name": "onBeforeInput",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onBeforeInputCapture": {
                     "name": "onBeforeInputCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onInput": {
                     "name": "onInput",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onInputCapture": {
                     "name": "onInputCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onReset": {
                     "name": "onReset",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onResetCapture": {
                     "name": "onResetCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onSubmit": {
                     "name": "onSubmit",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onSubmitCapture": {
                     "name": "onSubmitCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onInvalid": {
                     "name": "onInvalid",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onInvalidCapture": {
                     "name": "onInvalidCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onLoad": {
                     "name": "onLoad",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onLoadCapture": {
                     "name": "onLoadCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onError": {
                     "name": "onError",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onErrorCapture": {
                     "name": "onErrorCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onKeyDown": {
                     "name": "onKeyDown",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onKeyDownCapture": {
                     "name": "onKeyDownCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onKeyPress": {
                     "name": "onKeyPress",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onKeyPressCapture": {
                     "name": "onKeyPressCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onKeyUp": {
                     "name": "onKeyUp",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onKeyUpCapture": {
                     "name": "onKeyUpCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onAbort": {
                     "name": "onAbort",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onAbortCapture": {
                     "name": "onAbortCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onCanPlay": {
                     "name": "onCanPlay",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onCanPlayCapture": {
                     "name": "onCanPlayCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onCanPlayThrough": {
                     "name": "onCanPlayThrough",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onCanPlayThroughCapture": {
                     "name": "onCanPlayThroughCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onDurationChange": {
                     "name": "onDurationChange",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onDurationChangeCapture": {
                     "name": "onDurationChangeCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onEmptied": {
                     "name": "onEmptied",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onEmptiedCapture": {
                     "name": "onEmptiedCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onEncrypted": {
                     "name": "onEncrypted",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onEncryptedCapture": {
                     "name": "onEncryptedCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onEnded": {
                     "name": "onEnded",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onEndedCapture": {
                     "name": "onEndedCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onLoadedData": {
                     "name": "onLoadedData",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onLoadedDataCapture": {
                     "name": "onLoadedDataCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onLoadedMetadata": {
                     "name": "onLoadedMetadata",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onLoadedMetadataCapture": {
                     "name": "onLoadedMetadataCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onLoadStart": {
                     "name": "onLoadStart",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onLoadStartCapture": {
                     "name": "onLoadStartCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onPause": {
                     "name": "onPause",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onPauseCapture": {
                     "name": "onPauseCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onPlay": {
                     "name": "onPlay",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onPlayCapture": {
                     "name": "onPlayCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onPlaying": {
                     "name": "onPlaying",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onPlayingCapture": {
                     "name": "onPlayingCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onProgress": {
                     "name": "onProgress",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onProgressCapture": {
                     "name": "onProgressCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onRateChange": {
                     "name": "onRateChange",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onRateChangeCapture": {
                     "name": "onRateChangeCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onSeeked": {
                     "name": "onSeeked",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onSeekedCapture": {
                     "name": "onSeekedCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onSeeking": {
                     "name": "onSeeking",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onSeekingCapture": {
                     "name": "onSeekingCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onStalled": {
                     "name": "onStalled",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onStalledCapture": {
                     "name": "onStalledCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onSuspend": {
                     "name": "onSuspend",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onSuspendCapture": {
                     "name": "onSuspendCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onTimeUpdate": {
                     "name": "onTimeUpdate",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onTimeUpdateCapture": {
                     "name": "onTimeUpdateCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onVolumeChange": {
                     "name": "onVolumeChange",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onVolumeChangeCapture": {
                     "name": "onVolumeChangeCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onWaiting": {
                     "name": "onWaiting",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onWaitingCapture": {
                     "name": "onWaitingCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onClick": {
                     "name": "onClick",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onClickCapture": {
                     "name": "onClickCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onContextMenu": {
                     "name": "onContextMenu",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onContextMenuCapture": {
                     "name": "onContextMenuCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onDoubleClick": {
                     "name": "onDoubleClick",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onDoubleClickCapture": {
                     "name": "onDoubleClickCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onDrag": {
                     "name": "onDrag",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onDragCapture": {
                     "name": "onDragCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onDragEnd": {
                     "name": "onDragEnd",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onDragEndCapture": {
                     "name": "onDragEndCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onDragEnter": {
                     "name": "onDragEnter",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onDragEnterCapture": {
                     "name": "onDragEnterCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onDragExit": {
                     "name": "onDragExit",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onDragExitCapture": {
                     "name": "onDragExitCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onDragLeave": {
                     "name": "onDragLeave",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onDragLeaveCapture": {
                     "name": "onDragLeaveCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onDragOver": {
                     "name": "onDragOver",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onDragOverCapture": {
                     "name": "onDragOverCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onDragStart": {
                     "name": "onDragStart",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onDragStartCapture": {
                     "name": "onDragStartCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onDrop": {
                     "name": "onDrop",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onDropCapture": {
                     "name": "onDropCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onMouseDown": {
                     "name": "onMouseDown",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onMouseDownCapture": {
                     "name": "onMouseDownCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onMouseEnter": {
                     "name": "onMouseEnter",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onMouseLeave": {
                     "name": "onMouseLeave",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onMouseMove": {
                     "name": "onMouseMove",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onMouseMoveCapture": {
                     "name": "onMouseMoveCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onMouseOut": {
                     "name": "onMouseOut",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onMouseOutCapture": {
                     "name": "onMouseOutCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onMouseOver": {
                     "name": "onMouseOver",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onMouseOverCapture": {
                     "name": "onMouseOverCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onMouseUp": {
                     "name": "onMouseUp",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onMouseUpCapture": {
                     "name": "onMouseUpCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onSelect": {
                     "name": "onSelect",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onSelectCapture": {
                     "name": "onSelectCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onTouchCancel": {
                     "name": "onTouchCancel",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onTouchCancelCapture": {
                     "name": "onTouchCancelCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onTouchEnd": {
                     "name": "onTouchEnd",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onTouchEndCapture": {
                     "name": "onTouchEndCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onTouchMove": {
                     "name": "onTouchMove",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onTouchMoveCapture": {
                     "name": "onTouchMoveCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onTouchStart": {
                     "name": "onTouchStart",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onTouchStartCapture": {
                     "name": "onTouchStartCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onPointerDown": {
                     "name": "onPointerDown",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onPointerDownCapture": {
                     "name": "onPointerDownCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onPointerMove": {
                     "name": "onPointerMove",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onPointerMoveCapture": {
                     "name": "onPointerMoveCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onPointerUp": {
                     "name": "onPointerUp",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onPointerUpCapture": {
                     "name": "onPointerUpCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onPointerCancel": {
                     "name": "onPointerCancel",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onPointerCancelCapture": {
                     "name": "onPointerCancelCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onPointerEnter": {
                     "name": "onPointerEnter",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onPointerEnterCapture": {
                     "name": "onPointerEnterCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onPointerLeave": {
                     "name": "onPointerLeave",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onPointerLeaveCapture": {
                     "name": "onPointerLeaveCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onPointerOver": {
                     "name": "onPointerOver",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onPointerOverCapture": {
                     "name": "onPointerOverCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onPointerOut": {
                     "name": "onPointerOut",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onPointerOutCapture": {
                     "name": "onPointerOutCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onGotPointerCapture": {
                     "name": "onGotPointerCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onGotPointerCaptureCapture": {
                     "name": "onGotPointerCaptureCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onLostPointerCapture": {
                     "name": "onLostPointerCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onLostPointerCaptureCapture": {
                     "name": "onLostPointerCaptureCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onScroll": {
                     "name": "onScroll",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onScrollCapture": {
                     "name": "onScrollCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onWheel": {
                     "name": "onWheel",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onWheelCapture": {
                     "name": "onWheelCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onAnimationStart": {
                     "name": "onAnimationStart",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onAnimationStartCapture": {
                     "name": "onAnimationStartCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onAnimationEnd": {
                     "name": "onAnimationEnd",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onAnimationEndCapture": {
                     "name": "onAnimationEndCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onAnimationIteration": {
                     "name": "onAnimationIteration",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onAnimationIterationCapture": {
                     "name": "onAnimationIterationCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onTransitionEnd": {
                     "name": "onTransitionEnd",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  },
                  "onTransitionEndCapture": {
                     "name": "onTransitionEndCapture",
                     "type": "Event",
                     "parent": "DOMAttributes"
                  }
               }
            },
            "overrides": {
               "props": {
                  "iconProps": {
                     "source": "example",
                     "relativePath": "packages/forma-36-react-components/src/components/IconButton/IconButton.stories.tsx",
                     "prev": {
                        "type": "unknown"
                     },
                     "new": {
                        "type": "object"
                     }
                  }
               }
            }
         },
         "CheckboxField": {
            "packageName": "@contentful/forma-36-react-components",
            "exportedName": "CheckboxField",
            "relativePath": "packages/forma-36-react-components/src/components/CheckboxField/CheckboxField.tsx",
            "importedName": "CheckboxField",
            "resolved": [
               {
                  "relativePath": "packages/forma-36-react-components/src/index.ts",
                  "exportName": "CheckboxField"
               },
               {
                  "relativePath": "packages/forma-36-react-components/src/components/CheckboxField/CheckboxField.tsx",
                  "exportName": "CheckboxField"
               }
            ],
            "parsed": {
               "props": {
                  "id": {
                     "name": "id",
                     "type": "string",
                     "parent": "ControlledInputFieldPropTypes"
                  },
                  "labelText": {
                     "name": "labelText",
                     "type": "string",
                     "parent": "ControlledInputFieldPropTypes"
                  },
                  "labelIsLight": {
                     "name": "labelIsLight",
                     "type": "boolean",
                     "default": false,
                     "parent": "ControlledInputFieldPropTypes"
                  },
                  "required": {
                     "name": "required",
                     "type": "boolean",
                     "parent": "ControlledInputFieldPropTypes"
                  },
                  "helpText": {
                     "name": "helpText",
                     "type": "string",
                     "parent": "ControlledInputFieldPropTypes"
                  },
                  "formLabelProps": {
                     "name": "formLabelProps",
                     "type": "object",
                     "parent": "ControlledInputFieldPropTypes"
                  },
                  "disabled": {
                     "name": "disabled",
                     "type": "boolean",
                     "parent": "ControlledInputFieldPropTypes"
                  },
                  "helpTextProps": {
                     "name": "helpTextProps",
                     "type": "object",
                     "parent": "ControlledInputFieldPropTypes"
                  },
                  "validationMessage": {
                     "name": "validationMessage",
                     "type": "string",
                     "parent": "ControlledInputFieldPropTypes"
                  },
                  "value": {
                     "name": "value",
                     "type": "string",
                     "parent": "ControlledInputFieldPropTypes"
                  },
                  "name": {
                     "name": "name",
                     "type": "string",
                     "parent": "ControlledInputFieldPropTypes"
                  },
                  "checked": {
                     "name": "checked",
                     "type": "boolean",
                     "default": false,
                     "parent": "ControlledInputFieldPropTypes"
                  },
                  "inputProps": {
                     "name": "inputProps",
                     "type": "object",
                     "parent": "ControlledInputFieldPropTypes"
                  },
                  "inputType": {
                     "name": "inputType",
                     "type": "string",
                     "enum": [
                        "radio",
                        "checkbox"
                     ],
                     "default": "checkbox",
                     "parent": "ControlledInputFieldPropTypes"
                  },
                  "onChange": {
                     "name": "onChange",
                     "type": "Event",
                     "parent": "ControlledInputFieldPropTypes"
                  },
                  "className": {
                     "name": "className",
                     "type": "string",
                     "parent": "ControlledInputFieldPropTypes"
                  },
                  "testId": {
                     "name": "testId",
                     "type": "string",
                     "default": "cf-ui-checkbox-field",
                     "parent": "ControlledInputFieldPropTypes"
                  }
               }
            }
         },
         "Checkbox": {
            "packageName": "@contentful/forma-36-react-components",
            "exportedName": "Checkbox",
            "relativePath": "packages/forma-36-react-components/src/components/Checkbox/Checkbox.tsx",
            "importedName": "Checkbox",
            "resolved": [
               {
                  "relativePath": "packages/forma-36-react-components/src/index.ts",
                  "exportName": "Checkbox"
               },
               {
                  "relativePath": "packages/forma-36-react-components/src/components/Checkbox/Checkbox.tsx",
                  "exportName": "Checkbox"
               }
            ],
            "parsed": {
               "props": {
                  "id": {
                     "name": "id",
                     "type": "string",
                     "parent": "ControlledInputPropTypes"
                  },
                  "required": {
                     "name": "required",
                     "type": "boolean",
                     "default": false,
                     "parent": "ControlledInputPropTypes"
                  },
                  "labelText": {
                     "name": "labelText",
                     "type": "string",
                     "parent": "ControlledInputPropTypes"
                  },
                  "checked": {
                     "name": "checked",
                     "type": "boolean",
                     "parent": "ControlledInputPropTypes"
                  },
                  "onChange": {
                     "name": "onChange",
                     "type": "Event",
                     "parent": "ControlledInputPropTypes"
                  },
                  "name": {
                     "name": "name",
                     "type": "string",
                     "parent": "ControlledInputPropTypes"
                  },
                  "onBlur": {
                     "name": "onBlur",
                     "type": "Event",
                     "parent": "ControlledInputPropTypes"
                  },
                  "onFocus": {
                     "name": "onFocus",
                     "type": "Event",
                     "parent": "ControlledInputPropTypes"
                  },
                  "value": {
                     "name": "value",
                     "type": "string",
                     "parent": "ControlledInputPropTypes"
                  },
                  "disabled": {
                     "name": "disabled",
                     "type": "boolean",
                     "default": false,
                     "parent": "ControlledInputPropTypes"
                  },
                  "type": {
                     "name": "type",
                     "type": "string",
                     "enum": [
                        "checkbox",
                        "radio"
                     ],
                     "default": "checkbox",
                     "parent": "ControlledInputPropTypes"
                  },
                  "className": {
                     "name": "className",
                     "type": "string",
                     "parent": "ControlledInputPropTypes"
                  },
                  "testId": {
                     "name": "testId",
                     "type": "string",
                     "default": "ctf-ui-checkbox",
                     "parent": "ControlledInputPropTypes"
                  },
                  "willBlurOnEsc": {
                     "name": "willBlurOnEsc",
                     "type": "boolean",
                     "default": false,
                     "parent": "ControlledInputPropTypes"
                  }
               }
            }
         },
         "TabFocusTrap": {
            "packageName": "@contentful/forma-36-react-components",
            "exportedName": "TabFocusTrap",
            "relativePath": "packages/forma-36-react-components/src/components/TabFocusTrap/TabFocusTrap.tsx",
            "importedName": "TabFocusTrap",
            "resolved": [
               {
                  "relativePath": "packages/forma-36-react-components/src/index.ts",
                  "exportName": "TabFocusTrap"
               },
               {
                  "relativePath": "packages/forma-36-react-components/src/components/TabFocusTrap/TabFocusTrap.tsx",
                  "exportName": "TabFocusTrap"
               }
            ],
            "parsed": {
               "props": {
                  "className": {
                     "name": "className",
                     "type": "string",
                     "parent": "TabFocusTrapProps"
                  },
                  "children": {
                     "name": "children",
                     "type": "array",
                     "items": {
                        "type": "Node"
                     }
                  }
               }
            }
         },
         "Spinner": {
            "packageName": "@contentful/forma-36-react-components",
            "exportedName": "Spinner",
            "relativePath": "packages/forma-36-react-components/src/components/Spinner/Spinner.tsx",
            "importedName": "Spinner",
            "resolved": [
               {
                  "relativePath": "packages/forma-36-react-components/src/index.ts",
                  "exportName": "Spinner"
               },
               {
                  "relativePath": "packages/forma-36-react-components/src/components/Spinner/Spinner.tsx",
                  "exportName": "Spinner"
               }
            ],
            "parsed": {
               "props": {
                  "size": {
                     "name": "size",
                     "type": "string",
                     "enum": [
                        "default",
                        "small",
                        "large"
                     ],
                     "default": "default",
                     "parent": "SpinnerProps"
                  },
                  "customSize": {
                     "name": "customSize",
                     "type": "number",
                     "parent": "SpinnerProps"
                  },
                  "color": {
                     "name": "color",
                     "type": "string",
                     "enum": [
                        "default",
                        "white"
                     ],
                     "default": "default",
                     "parent": "SpinnerProps"
                  },
                  "className": {
                     "name": "className",
                     "type": "string",
                     "parent": "SpinnerProps"
                  },
                  "testId": {
                     "name": "testId",
                     "type": "string",
                     "default": "cf-ui-spinner",
                     "parent": "SpinnerProps"
                  }
               }
            }
         },
         "Button": {
            "packageName": "@contentful/forma-36-react-components",
            "exportedName": "Button",
            "relativePath": "packages/forma-36-react-components/src/components/Button/Button.tsx",
            "importedName": "Button",
            "resolved": [
               {
                  "relativePath": "packages/forma-36-react-components/src/index.ts",
                  "exportName": "Button"
               },
               {
                  "relativePath": "packages/forma-36-react-components/src/components/Button/Button.tsx",
                  "exportName": "Button"
               }
            ],
            "parsed": {
               "props": {
                  "icon": {
                     "name": "icon",
                     "type": "string",
                     "enum": [
                        "ArrowDown",
                        "ArrowDownTrimmed",
                        "ArrowUp",
                        "ArrowUpTrimmed",
                        "Asset",
                        "AssetTrimmed",
                        "Calendar",
                        "ChatBubble",
                        "ChatBubbleTrimmed",
                        "CheckCircle",
                        "CheckCircleTrimmed"
                     ],
                     "parent": "ButtonProps"
                  },
                  "indicateDropdown": {
                     "name": "indicateDropdown",
                     "type": "boolean",
                     "default": false,
                     "parent": "ButtonProps"
                  },
                  "onClick": {
                     "name": "onClick",
                     "type": "Event",
                     "parent": "ButtonProps"
                  },
                  "isFullWidth": {
                     "name": "isFullWidth",
                     "type": "boolean",
                     "default": false,
                     "parent": "ButtonProps"
                  },
                  "onBlur": {
                     "name": "onBlur",
                     "type": "Event",
                     "parent": "ButtonProps"
                  },
                  "loading": {
                     "name": "loading",
                     "type": "boolean",
                     "default": false,
                     "parent": "ButtonProps"
                  },
                  "disabled": {
                     "name": "disabled",
                     "type": "boolean",
                     "default": false,
                     "parent": "ButtonProps"
                  },
                  "testId": {
                     "name": "testId",
                     "type": "string",
                     "default": "cf-ui-button",
                     "parent": "ButtonProps"
                  },
                  "buttonType": {
                     "name": "buttonType",
                     "type": "string",
                     "enum": [
                        "primary",
                        "positive",
                        "negative",
                        "warning",
                        "muted",
                        "naked"
                     ],
                     "default": "primary",
                     "parent": "ButtonProps"
                  },
                  "type": {
                     "name": "type",
                     "type": "string",
                     "enum": [
                        "button",
                        "submit",
                        "reset"
                     ],
                     "default": "button",
                     "parent": "ButtonProps"
                  },
                  "size": {
                     "name": "size",
                     "type": "string",
                     "enum": [
                        "small",
                        "large"
                     ],
                     "parent": "ButtonProps"
                  },
                  "href": {
                     "name": "href",
                     "type": "string",
                     "parent": "ButtonProps"
                  },
                  "style": {
                     "name": "style",
                     "type": "object",
                     "parent": "ButtonProps"
                  },
                  "className": {
                     "name": "className",
                     "type": "string",
                     "parent": "ButtonProps"
                  },
                  "isActive": {
                     "name": "isActive",
                     "type": "boolean",
                     "parent": "ButtonProps"
                  },
                  "children": {
                     "name": "children",
                     "type": "array",
                     "items": {
                        "type": "Node"
                     }
                  }
               }
            }
         },
         "EditorToolbar": {
            "packageName": "@contentful/forma-36-react-components",
            "exportedName": "EditorToolbar",
            "relativePath": "packages/forma-36-react-components/src/components/EditorToolbar/EditorToolbar/EditorToolbar.tsx",
            "importedName": "EditorToolbar",
            "resolved": [
               {
                  "relativePath": "packages/forma-36-react-components/src/index.ts",
                  "exportName": "EditorToolbar"
               },
               {
                  "relativePath": "packages/forma-36-react-components/src/components/EditorToolbar/EditorToolbar/EditorToolbar.tsx",
                  "exportName": "EditorToolbar"
               }
            ],
            "parsed": {
               "props": {
                  "className": {
                     "name": "className",
                     "type": "string",
                     "parent": "EditorToolbarProps"
                  },
                  "testId": {
                     "name": "testId",
                     "type": "string",
                     "default": "cf-ui-editor-toolbar",
                     "parent": "EditorToolbarProps"
                  },
                  "style": {
                     "name": "style",
                     "type": "object",
                     "parent": "EditorToolbarProps"
                  },
                  "children": {
                     "name": "children",
                     "type": "array",
                     "items": {
                        "type": "Node"
                     }
                  }
               }
            }
         },
         "EditorToolbarButton": {
            "packageName": "@contentful/forma-36-react-components",
            "exportedName": "EditorToolbarButton",
            "relativePath": "packages/forma-36-react-components/src/components/EditorToolbar/EditorToolbarButton/EditorToolbarButton.tsx",
            "importedName": "EditorToolbarButton",
            "resolved": [
               {
                  "relativePath": "packages/forma-36-react-components/src/index.ts",
                  "exportName": "EditorToolbarButton"
               },
               {
                  "relativePath": "packages/forma-36-react-components/src/components/EditorToolbar/EditorToolbarButton/EditorToolbarButton.tsx",
                  "exportName": "EditorToolbarButton"
               }
            ],
            "parsed": {
               "props": {
                  "label": {
                     "name": "label",
                     "type": "string",
                     "parent": "EditorToolbarButtonProps"
                  },
                  "icon": {
                     "name": "icon",
                     "type": "string",
                     "enum": [
                        "ArrowDown",
                        "ArrowDownTrimmed",
                        "ArrowUp",
                        "ArrowUpTrimmed",
                        "Asset",
                        "AssetTrimmed",
                        "Calendar",
                        "ChatBubble",
                        "ChatBubbleTrimmed",
                        "CheckCircle",
                        "CheckCircleTrimmed",
                        "ChevronDown",
                        "ChevronDownTrimmed",
                        "ChevronLeft",
                        "ChevronLeftTrimmed",
                        "ChevronRight",
                        "ChevronRightTrimmed",
                        "ChevronUp",
                        "ChevronUpTrimmed",
                        "Clock",
                        "ClockTrimmed",
                        "Close",
                        "CloseTrimmed",
                        "Code",
                        "CodeTrimmed",
                        "Copy",
                        "CopyTrimmed",
                        "Cycle",
                        "CycleTrimmed",
                        "Delete",
                        "DeleteTrimmed",
                        "Download",
                        "DownloadTrimmed",
                        "Drag",
                        "DragTrimmed",
                        "Edit",
                        "EditTrimmed",
                        "EmbeddedEntryBlock",
                        "EmbeddedEntryBlockTrimmed",
                        "EmbeddedEntryInline",
                        "EmbeddedEntryInlineTrimmed",
                        "Entry",
                        "EntryTrimmed",
                        "ErrorCircle",
                        "ErrorCircleTrimmed",
                        "ExternalLink",
                        "ExternalLinkTrimmed",
                        "FaceHappy",
                        "FaceHappyTrimmed",
                        "Filter",
                        "FilterTrimmed",
                        "Folder",
                        "FolderCreate",
                        "FolderCreateTrimmed",
                        "FolderOpen",
                        "FolderOpenTrimmed",
                        "FolderTrimmed",
                        "FormatBold",
                        "FormatBoldTrimmed",
                        "FormatItalic",
                        "FormatItalicTrimmed",
                        "FormatUnderlined",
                        "FormatUnderlinedTrimmed",
                        "Heading",
                        "HeadingOne",
                        "HeadingOneTrimmed",
                        "HeadingTrimmed",
                        "HeadingTwo",
                        "HeadingTwoTrimmed",
                        "HelpCircle",
                        "HelpCircleTrimmed",
                        "HorizontalRule",
                        "HorizontalRuleTrimmed",
                        "InfoCircle",
                        "InfoCircleTrimmed",
                        "Language",
                        "Link",
                        "LinkTrimmed",
                        "ListBulleted",
                        "ListBulletedTrimmed",
                        "ListNumbered",
                        "ListNumberedTrimmed",
                        "Lock",
                        "LockTrimmed",
                        "LooksOne",
                        "LooksOneTrimmed",
                        "LooksTwo",
                        "LooksTwoTrimmed",
                        "Menu",
                        "MenuTrimmed",
                        "MoreHorizontal",
                        "MoreHorizontalTrimmed",
                        "MoreVertical",
                        "MoreVerticalTrimmed",
                        "Person",
                        "Plus",
                        "PlusCircle",
                        "PlusCircleTrimmed",
                        "PlusTrimmed",
                        "Preview",
                        "Quote",
                        "QuoteTrimmed",
                        "References",
                        "Release",
                        "ReleaseTrimmed",
                        "Receipt",
                        "ReceiptTrimmed",
                        "Search",
                        "SearchTrimmed",
                        "Settings",
                        "SettingsTrimmed",
                        "ShoppingCart",
                        "ShoppingCartTrimmed",
                        "Star",
                        "StarTrimmed",
                        "Tags",
                        "Text",
                        "TextTrimmed",
                        "ThumbDown",
                        "ThumbDownTrimmed",
                        "ThumbUp",
                        "ThumbUpTrimmed",
                        "Users",
                        "UsersTrimmed",
                        "Warning",
                        "WarningTrimmed",
                        "Workflows"
                     ],
                     "parent": "EditorToolbarButtonProps"
                  },
                  "tooltip": {
                     "name": "tooltip",
                     "type": "string",
                     "parent": "EditorToolbarButtonProps"
                  },
                  "iconButtonProps": {
                     "name": "iconButtonProps",
                     "type": "unknown",
                     "parent": "EditorToolbarButtonProps"
                  },
                  "isActive": {
                     "name": "isActive",
                     "type": "boolean",
                     "default": false,
                     "parent": "EditorToolbarButtonProps"
                  },
                  "disabled": {
                     "name": "disabled",
                     "type": "boolean",
                     "default": false,
                     "parent": "EditorToolbarButtonProps"
                  },
                  "onClick": {
                     "name": "onClick",
                     "type": "Event",
                     "parent": "EditorToolbarButtonProps"
                  },
                  "withDropdown": {
                     "name": "withDropdown",
                     "type": "boolean",
                     "default": false,
                     "parent": "EditorToolbarButtonProps"
                  },
                  "className": {
                     "name": "className",
                     "type": "string",
                     "parent": "EditorToolbarButtonProps"
                  },
                  "testId": {
                     "name": "testId",
                     "type": "string",
                     "default": "cf-ui-editor-toolbar-button",
                     "parent": "EditorToolbarButtonProps"
                  }
               }
            }
         },
         "Dropdown": {
            "packageName": "@contentful/forma-36-react-components",
            "exportedName": "Dropdown",
            "relativePath": "packages/forma-36-react-components/src/components/Dropdown/Dropdown.tsx",
            "importedName": "Dropdown",
            "resolved": [
               {
                  "relativePath": "packages/forma-36-react-components/src/index.ts",
                  "exportName": "Dropdown"
               },
               {
                  "relativePath": "packages/forma-36-react-components/src/components/Dropdown/Dropdown.tsx",
                  "exportName": "Dropdown"
               }
            ],
            "parsed": {
               "props": {
                  "toggleElement": {
                     "name": "toggleElement",
                     "type": "array",
                     "items": {
                        "type": "Node"
                     },
                     "multipleTypes": true,
                     "parent": "DropdownProps"
                  },
                  "submenuToggleLabel": {
                     "name": "submenuToggleLabel",
                     "type": "string",
                     "parent": "DropdownProps"
                  },
                  "position": {
                     "name": "position",
                     "type": "string",
                     "enum": [
                        "top",
                        "right",
                        "left",
                        "bottom-left",
                        "bottom-right",
                        "top-right",
                        "top-left"
                     ],
                     "default": "bottom-left",
                     "parent": "DropdownProps"
                  },
                  "isOpen": {
                     "name": "isOpen",
                     "type": "boolean",
                     "default": false,
                     "parent": "DropdownProps"
                  },
                  "onClose": {
                     "name": "onClose",
                     "type": "Event",
                     "parent": "DropdownProps"
                  },
                  "testId": {
                     "name": "testId",
                     "type": "string",
                     "default": "cf-ui-dropdown",
                     "parent": "DropdownProps"
                  },
                  "dropdownContainerClassName": {
                     "name": "dropdownContainerClassName",
                     "type": "string",
                     "parent": "DropdownProps"
                  },
                  "getContainerRef": {
                     "name": "getContainerRef",
                     "type": "Event",
                     "multipleTypes": true,
                     "parent": "DropdownProps"
                  },
                  "className": {
                     "name": "className",
                     "type": "string",
                     "parent": "DropdownProps"
                  },
                  "isFullWidth": {
                     "name": "isFullWidth",
                     "type": "boolean",
                     "parent": "DropdownProps"
                  },
                  "isAutoalignmentEnabled": {
                     "name": "isAutoalignmentEnabled",
                     "type": "boolean",
                     "default": false,
                     "parent": "DropdownProps"
                  },
                  "children": {
                     "name": "children",
                     "type": "array",
                     "items": {
                        "type": "Node"
                     }
                  }
               }
            }
         },
         "DropdownListItem": {
            "packageName": "@contentful/forma-36-react-components",
            "exportedName": "DropdownListItem",
            "relativePath": "packages/forma-36-react-components/src/components/Dropdown/DropdownListItem/DropdownListItem.tsx",
            "importedName": "DropdownListItem",
            "resolved": [
               {
                  "relativePath": "packages/forma-36-react-components/src/index.ts",
                  "exportName": "DropdownListItem"
               },
               {
                  "relativePath": "packages/forma-36-react-components/src/components/Dropdown/DropdownListItem/DropdownListItem.tsx",
                  "exportName": "DropdownListItem"
               }
            ],
            "parsed": {
               "props": {
                  "isDisabled": {
                     "name": "isDisabled",
                     "type": "boolean",
                     "default": false,
                     "parent": "DropdownListItemProps"
                  },
                  "listItemRef": {
                     "name": "listItemRef",
                     "type": "unknown",
                     "parent": "DropdownListItemProps"
                  },
                  "isActive": {
                     "name": "isActive",
                     "type": "boolean",
                     "default": false,
                     "parent": "DropdownListItemProps"
                  },
                  "isTitle": {
                     "name": "isTitle",
                     "type": "boolean",
                     "default": false,
                     "parent": "DropdownListItemProps"
                  },
                  "onClick": {
                     "name": "onClick",
                     "type": "Event",
                     "parent": "DropdownListItemProps"
                  },
                  "onMouseDown": {
                     "name": "onMouseDown",
                     "type": "Event",
                     "parent": "DropdownListItemProps"
                  },
                  "submenuToggleLabel": {
                     "name": "submenuToggleLabel",
                     "type": "string",
                     "parent": "DropdownListItemProps"
                  },
                  "href": {
                     "name": "href",
                     "type": "string",
                     "parent": "DropdownListItemProps"
                  },
                  "onFocus": {
                     "name": "onFocus",
                     "type": "Event",
                     "parent": "DropdownListItemProps"
                  },
                  "onLeave": {
                     "name": "onLeave",
                     "type": "Event",
                     "parent": "DropdownListItemProps"
                  },
                  "onEnter": {
                     "name": "onEnter",
                     "type": "Event",
                     "parent": "DropdownListItemProps"
                  },
                  "className": {
                     "name": "className",
                     "type": "string",
                     "parent": "DropdownListItemProps"
                  },
                  "testId": {
                     "name": "testId",
                     "type": "string",
                     "default": "cf-ui-dropdown-list-item",
                     "parent": "DropdownListItemProps"
                  },
                  "children": {
                     "name": "children",
                     "type": "array",
                     "items": {
                        "type": "Node"
                     }
                  }
               }
            },
            "overrides": {
               "props": {
                  "key": {
                     "source": "example",
                     "relativePath": "packages/forma-36-react-components/src/components/Dropdown/Dropdown.stories.tsx",
                     "prev": null,
                     "new": {
                        "name": "key",
                        "used": true,
                        "type": "string"
                     }
                  }
               }
            }
         },
         "DropdownList": {
            "packageName": "@contentful/forma-36-react-components",
            "exportedName": "DropdownList",
            "relativePath": "packages/forma-36-react-components/src/components/Dropdown/DropdownList/DropdownList.tsx",
            "importedName": "DropdownList",
            "resolved": [
               {
                  "relativePath": "packages/forma-36-react-components/src/index.ts",
                  "exportName": "DropdownList"
               },
               {
                  "relativePath": "packages/forma-36-react-components/src/components/Dropdown/DropdownList/DropdownList.tsx",
                  "exportName": "DropdownList"
               }
            ],
            "parsed": {
               "props": {
                  "listRef": {
                     "name": "listRef",
                     "type": "unknown",
                     "parent": "DropdownListProps"
                  },
                  "className": {
                     "name": "className",
                     "type": "string",
                     "parent": "DropdownListProps"
                  },
                  "testId": {
                     "name": "testId",
                     "type": "string",
                     "default": "cf-ui-dropdown-list",
                     "parent": "DropdownListProps"
                  },
                  "border": {
                     "name": "border",
                     "type": "string",
                     "enum": [
                        "top",
                        "bottom"
                     ],
                     "parent": "DropdownListProps"
                  },
                  "maxHeight": {
                     "name": "maxHeight",
                     "type": "string",
                     "multipleTypes": true,
                     "parent": "DropdownListProps"
                  },
                  "styles": {
                     "name": "styles",
                     "type": "object",
                     "parent": "DropdownListProps"
                  },
                  "children": {
                     "name": "children",
                     "type": "array",
                     "items": {
                        "type": "Node"
                     }
                  }
               }
            }
         },
         "EditorToolbarDivider": {
            "packageName": "@contentful/forma-36-react-components",
            "exportedName": "EditorToolbarDivider",
            "relativePath": "packages/forma-36-react-components/src/components/EditorToolbar/EditorToolbarDivider/EditorToolbarDivider.tsx",
            "importedName": "EditorToolbarDivider",
            "resolved": [
               {
                  "relativePath": "packages/forma-36-react-components/src/index.ts",
                  "exportName": "EditorToolbarDivider"
               },
               {
                  "relativePath": "packages/forma-36-react-components/src/components/EditorToolbar/EditorToolbarDivider/EditorToolbarDivider.tsx",
                  "exportName": "EditorToolbarDivider"
               }
            ],
            "parsed": {
               "props": {
                  "testId": {
                     "name": "testId",
                     "type": "string",
                     "default": "cf-editor-toolbar-divider",
                     "parent": "EditorToolbarDividerProps"
                  },
                  "className": {
                     "name": "className",
                     "type": "string",
                     "parent": "EditorToolbarDividerProps"
                  }
               }
            },
            "overrides": {
               "props": {
                  "children": {
                     "source": "example",
                     "relativePath": "packages/forma-36-react-components/src/components/EditorToolbar/EditorToolbarDivider/EditorToolbarDivider.stories.tsx",
                     "prev": null,
                     "new": {
                        "name": "children",
                        "used": true,
                        "type": "array",
                        "items": {
                           "type": "Node"
                        }
                     }
                  }
               }
            }
         },
         "SelectField": {
            "packageName": "@contentful/forma-36-react-components",
            "exportedName": "SelectField",
            "relativePath": "packages/forma-36-react-components/src/components/SelectField/SelectField.tsx",
            "importedName": "SelectField",
            "resolved": [
               {
                  "relativePath": "packages/forma-36-react-components/src/index.ts",
                  "exportName": "SelectField"
               },
               {
                  "relativePath": "packages/forma-36-react-components/src/components/SelectField/SelectField.tsx",
                  "exportName": "SelectField"
               }
            ],
            "parsed": {
               "props": {
                  "name": {
                     "name": "name",
                     "type": "string",
                     "parent": "SelectFieldProps"
                  },
                  "id": {
                     "name": "id",
                     "type": "string",
                     "parent": "SelectFieldProps"
                  },
                  "labelText": {
                     "name": "labelText",
                     "type": "string",
                     "parent": "SelectFieldProps"
                  },
                  "value": {
                     "name": "value",
                     "type": "string",
                     "parent": "SelectFieldProps"
                  },
                  "validationMessage": {
                     "name": "validationMessage",
                     "type": "string",
                     "parent": "SelectFieldProps"
                  },
                  "formLabelProps": {
                     "name": "formLabelProps",
                     "type": "unknown",
                     "parent": "SelectFieldProps"
                  },
                  "textLinkProps": {
                     "name": "textLinkProps",
                     "type": "unknown",
                     "parent": "SelectFieldProps"
                  },
                  "selectProps": {
                     "name": "selectProps",
                     "type": "unknown",
                     "parent": "SelectFieldProps"
                  },
                  "helpText": {
                     "name": "helpText",
                     "type": "string",
                     "parent": "SelectFieldProps"
                  },
                  "required": {
                     "name": "required",
                     "type": "boolean",
                     "default": false,
                     "parent": "SelectFieldProps"
                  },
                  "onChange": {
                     "name": "onChange",
                     "type": "Event",
                     "parent": "SelectFieldProps"
                  },
                  "onBlur": {
                     "name": "onBlur",
                     "type": "Event",
                     "parent": "SelectFieldProps"
                  },
                  "testId": {
                     "name": "testId",
                     "type": "string",
                     "default": "cf-ui-select-field",
                     "parent": "SelectFieldProps"
                  },
                  "className": {
                     "name": "className",
                     "type": "string",
                     "parent": "SelectFieldProps"
                  },
                  "children": {
                     "name": "children",
                     "type": "array",
                     "items": {
                        "type": "Node"
                     }
                  }
               }
            },
            "overrides": {
               "props": {
                  "formLabelProps": {
                     "source": "example",
                     "relativePath": "packages/forma-36-react-components/src/components/SelectField/SelectField.stories.tsx",
                     "prev": {
                        "type": "unknown"
                     },
                     "new": {
                        "type": "object"
                     }
                  },
                  "selectProps": {
                     "source": "example",
                     "relativePath": "packages/forma-36-react-components/src/components/SelectField/SelectField.stories.tsx",
                     "prev": {
                        "type": "unknown"
                     },
                     "new": {
                        "type": "object"
                     }
                  }
               }
            }
         },
         "Select": {
            "packageName": "@contentful/forma-36-react-components",
            "exportedName": "Select",
            "relativePath": "packages/forma-36-react-components/src/components/Select/Select.tsx",
            "importedName": "Select",
            "resolved": [
               {
                  "relativePath": "packages/forma-36-react-components/src/index.ts",
                  "exportName": "Select"
               },
               {
                  "relativePath": "packages/forma-36-react-components/src/components/Select/Select.tsx",
                  "exportName": "Select"
               }
            ],
            "parsed": {
               "props": {
                  "required": {
                     "name": "required",
                     "type": "boolean",
                     "default": false,
                     "parent": "SelectProps"
                  },
                  "name": {
                     "name": "name",
                     "type": "string",
                     "parent": "SelectProps"
                  },
                  "id": {
                     "name": "id",
                     "type": "string",
                     "parent": "SelectProps"
                  },
                  "hasError": {
                     "name": "hasError",
                     "type": "boolean",
                     "default": false,
                     "parent": "SelectProps"
                  },
                  "value": {
                     "name": "value",
                     "type": "string",
                     "parent": "SelectProps"
                  },
                  "isDisabled": {
                     "name": "isDisabled",
                     "type": "boolean",
                     "default": false,
                     "parent": "SelectProps"
                  },
                  "onChange": {
                     "name": "onChange",
                     "type": "Event",
                     "parent": "SelectProps"
                  },
                  "onBlur": {
                     "name": "onBlur",
                     "type": "Event",
                     "parent": "SelectProps"
                  },
                  "onFocus": {
                     "name": "onFocus",
                     "type": "Event",
                     "parent": "SelectProps"
                  },
                  "width": {
                     "name": "width",
                     "type": "string",
                     "enum": [
                        "auto",
                        "small",
                        "medium",
                        "large",
                        "full"
                     ],
                     "default": "full",
                     "parent": "SelectProps"
                  },
                  "testId": {
                     "name": "testId",
                     "type": "string",
                     "default": "cf-ui-select",
                     "parent": "SelectProps"
                  },
                  "className": {
                     "name": "className",
                     "type": "string",
                     "parent": "SelectProps"
                  },
                  "willBlurOnEsc": {
                     "name": "willBlurOnEsc",
                     "type": "boolean",
                     "default": false,
                     "parent": "SelectProps"
                  },
                  "children": {
                     "name": "children",
                     "type": "array",
                     "items": {
                        "type": "Node"
                     }
                  }
               }
            }
         },
         "Option": {
            "packageName": "@contentful/forma-36-react-components",
            "exportedName": "Option",
            "relativePath": "packages/forma-36-react-components/src/components/Select/Option/Option.tsx",
            "importedName": "Option",
            "resolved": [
               {
                  "relativePath": "packages/forma-36-react-components/src/index.ts",
                  "exportName": "Option"
               },
               {
                  "relativePath": "packages/forma-36-react-components/src/components/Select/Option/Option.tsx",
                  "exportName": "Option"
               }
            ],
            "parsed": {
               "props": {
                  "value": {
                     "name": "value",
                     "type": "string",
                     "parent": "OptionProps"
                  },
                  "testId": {
                     "name": "testId",
                     "type": "string",
                     "default": "cf-ui-select-option",
                     "parent": "OptionProps"
                  },
                  "children": {
                     "name": "children",
                     "type": "array",
                     "items": {
                        "type": "Node"
                     }
                  }
               }
            }
         },
         "InlineEntryCard": {
            "packageName": "@contentful/forma-36-react-components",
            "exportedName": "InlineEntryCard",
            "relativePath": "packages/forma-36-react-components/src/components/Card/InlineEntryCard/InlineEntryCard.tsx",
            "importedName": "InlineEntryCard",
            "resolved": [
               {
                  "relativePath": "packages/forma-36-react-components/src/index.ts",
                  "exportName": "InlineEntryCard"
               },
               {
                  "relativePath": "packages/forma-36-react-components/src/components/Card/InlineEntryCard/InlineEntryCard.tsx",
                  "exportName": "InlineEntryCard"
               }
            ],
            "parsed": {
               "props": {
                  "isSelected": {
                     "name": "isSelected",
                     "type": "boolean",
                     "description": "Gives the component a selected state",
                     "parent": "InlineEntryCardPropTypes"
                  },
                  "dropdownListElements": {
                     "name": "dropdownListElements",
                     "type": "array",
                     "items": {
                        "type": "Node"
                     },
                     "multipleTypes": true,
                     "description": "The DropdownList elements used to render an actions dropdown for the component",
                     "parent": "InlineEntryCardPropTypes"
                  },
                  "isLoading": {
                     "name": "isLoading",
                     "type": "boolean",
                     "description": "Loading state for the component - when true will display loading feedback to the user",
                     "parent": "InlineEntryCardPropTypes"
                  },
                  "status": {
                     "name": "status",
                     "type": "string",
                     "enum": [
                        "archived",
                        "changed",
                        "draft",
                        "published"
                     ],
                     "description": "The publish status of the entry",
                     "parent": "InlineEntryCardPropTypes"
                  },
                  "className": {
                     "name": "className",
                     "type": "string",
                     "description": "Class names to be appended to the className prop of the component",
                     "parent": "InlineEntryCardPropTypes"
                  },
                  "testId": {
                     "name": "testId",
                     "type": "string",
                     "default": "cf-ui-inline-entry-card",
                     "description": "An ID used for testing purposes applied as a data attribute (data-test-id)",
                     "parent": "InlineEntryCardPropTypes"
                  },
                  "href": {
                     "name": "href",
                     "type": "string",
                     "parent": "InlineEntryCardPropTypes"
                  },
                  "children": {
                     "name": "children",
                     "type": "array",
                     "items": {
                        "type": "Node"
                     },
                     "description": "Child nodes to be rendered in the component",
                     "parent": "InlineEntryCardPropTypes"
                  }
               }
            }
         },
         "Illustration": {
            "packageName": "@contentful/forma-36-react-components",
            "exportedName": "Illustration",
            "relativePath": "packages/forma-36-react-components/src/components/Illustration/Illustration.tsx",
            "importedName": "Illustration",
            "resolved": [
               {
                  "relativePath": "packages/forma-36-react-components/src/index.ts",
                  "exportName": "Illustration"
               },
               {
                  "relativePath": "packages/forma-36-react-components/src/components/Illustration/Illustration.tsx",
                  "exportName": "Illustration"
               }
            ],
            "parsed": {
               "props": {
                  "illustration": {
                     "name": "illustration",
                     "type": "string",
                     "enum": [
                        "Archive",
                        "Audio",
                        "Code",
                        "Image",
                        "Markup",
                        "Pdf",
                        "Plaintext",
                        "Presentation",
                        "Richtext",
                        "Spreadsheet",
                        "Video"
                     ],
                     "parent": "IllustrationProps"
                  },
                  "className": {
                     "name": "className",
                     "type": "string",
                     "parent": "IllustrationProps"
                  },
                  "testId": {
                     "name": "testId",
                     "type": "string",
                     "default": "cf-ui-illustration",
                     "parent": "IllustrationProps"
                  },
                  "style": {
                     "name": "style",
                     "type": "object",
                     "parent": "IllustrationProps"
                  }
               }
            }
         },
         "Table": {
            "packageName": "@contentful/forma-36-react-components",
            "exportedName": "Table",
            "relativePath": "packages/forma-36-react-components/src/components/Table/Table.tsx",
            "importedName": "Table",
            "resolved": [
               {
                  "relativePath": "packages/forma-36-react-components/src/index.ts",
                  "exportName": "Table"
               },
               {
                  "relativePath": "packages/forma-36-react-components/src/components/Table/Table.tsx",
                  "exportName": "Table"
               }
            ],
            "parsed": {
               "props": {
                  "testId": {
                     "name": "testId",
                     "type": "string",
                     "default": "cf-ui-table",
                     "parent": "TableProps"
                  },
                  "className": {
                     "name": "className",
                     "type": "string",
                     "parent": "TableProps"
                  },
                  "style": {
                     "name": "style",
                     "type": "object",
                     "parent": "TableProps"
                  },
                  "children": {
                     "name": "children",
                     "type": "array",
                     "items": {
                        "type": "Node"
                     }
                  }
               }
            }
         },
         "TableBody": {
            "packageName": "@contentful/forma-36-react-components",
            "exportedName": "TableBody",
            "relativePath": "packages/forma-36-react-components/src/components/Table/TableBody/TableBody.tsx",
            "importedName": "TableBody",
            "resolved": [
               {
                  "relativePath": "packages/forma-36-react-components/src/index.ts",
                  "exportName": "TableBody"
               },
               {
                  "relativePath": "packages/forma-36-react-components/src/components/Table/TableBody/TableBody.tsx",
                  "exportName": "TableBody"
               }
            ],
            "parsed": {
               "props": {
                  "className": {
                     "name": "className",
                     "type": "string",
                     "parent": "TableBodyProps"
                  },
                  "style": {
                     "name": "style",
                     "type": "object",
                     "parent": "TableBodyProps"
                  },
                  "testId": {
                     "name": "testId",
                     "type": "string",
                     "default": "cf-ui-table-body",
                     "parent": "TableBodyProps"
                  },
                  "children": {
                     "name": "children",
                     "type": "array",
                     "items": {
                        "type": "Node"
                     }
                  }
               }
            }
         },
         "TableCell": {
            "packageName": "@contentful/forma-36-react-components",
            "exportedName": "TableCell",
            "relativePath": "packages/forma-36-react-components/src/components/Table/TableCell/TableCell/TableCell.tsx",
            "importedName": "TableCell",
            "resolved": [
               {
                  "relativePath": "packages/forma-36-react-components/src/index.ts",
                  "exportName": "TableCell"
               },
               {
                  "relativePath": "packages/forma-36-react-components/src/components/Table/TableCell/TableCell/TableCell.tsx",
                  "exportName": "TableCell"
               }
            ],
            "parsed": {
               "props": {
                  "align": {
                     "name": "align",
                     "type": "string",
                     "enum": [
                        "center",
                        "left",
                        "right"
                     ],
                     "default": "left",
                     "parent": "TableCellProps"
                  },
                  "sorting": {
                     "name": "sorting",
                     "type": "boolean",
                     "multipleTypes": true,
                     "default": false,
                     "parent": "TableCellProps"
                  },
                  "style": {
                     "name": "style",
                     "type": "object",
                     "parent": "TableCellProps"
                  },
                  "className": {
                     "name": "className",
                     "type": "string",
                     "parent": "TableCellProps"
                  },
                  "testId": {
                     "name": "testId",
                     "type": "string",
                     "default": "cf-ui-table-cell",
                     "parent": "TableCellProps"
                  },
                  "children": {
                     "name": "children",
                     "type": "array",
                     "items": {
                        "type": "Node"
                     }
                  }
               }
            }
         },
         "TableHead": {
            "packageName": "@contentful/forma-36-react-components",
            "exportedName": "TableHead",
            "relativePath": "packages/forma-36-react-components/src/components/Table/TableHead/TableHead.tsx",
            "importedName": "TableHead",
            "resolved": [
               {
                  "relativePath": "packages/forma-36-react-components/src/index.ts",
                  "exportName": "TableHead"
               },
               {
                  "relativePath": "packages/forma-36-react-components/src/components/Table/TableHead/TableHead.tsx",
                  "exportName": "TableHead"
               }
            ],
            "parsed": {
               "props": {
                  "isSticky": {
                     "name": "isSticky",
                     "type": "boolean",
                     "default": false,
                     "parent": "TableHeadProps"
                  },
                  "offsetTop": {
                     "name": "offsetTop",
                     "type": "string",
                     "multipleTypes": true,
                     "parent": "TableHeadProps"
                  },
                  "className": {
                     "name": "className",
                     "type": "string",
                     "parent": "TableHeadProps"
                  },
                  "testId": {
                     "name": "testId",
                     "type": "string",
                     "default": "cf-ui-table-head",
                     "parent": "TableHeadProps"
                  },
                  "style": {
                     "name": "style",
                     "type": "object",
                     "parent": "TableHeadProps"
                  },
                  "children": {
                     "name": "children",
                     "type": "array",
                     "items": {
                        "type": "Node"
                     }
                  }
               }
            }
         },
         "TableRow": {
            "packageName": "@contentful/forma-36-react-components",
            "exportedName": "TableRow",
            "relativePath": "packages/forma-36-react-components/src/components/Table/TableRow/TableRow.tsx",
            "importedName": "TableRow",
            "resolved": [
               {
                  "relativePath": "packages/forma-36-react-components/src/index.ts",
                  "exportName": "TableRow"
               },
               {
                  "relativePath": "packages/forma-36-react-components/src/components/Table/TableRow/TableRow.tsx",
                  "exportName": "TableRow"
               }
            ],
            "parsed": {
               "props": {
                  "className": {
                     "name": "className",
                     "type": "string",
                     "parent": "TableRowProps"
                  },
                  "style": {
                     "name": "style",
                     "type": "object",
                     "parent": "TableRowProps"
                  },
                  "testId": {
                     "name": "testId",
                     "type": "string",
                     "default": "cf-ui-table-row",
                     "parent": "TableRowProps"
                  },
                  "children": {
                     "name": "children",
                     "type": "array",
                     "items": {
                        "type": "Node"
                     }
                  }
               }
            }
         },
         "ToggleButton": {
            "packageName": "@contentful/forma-36-react-components",
            "exportedName": "ToggleButton",
            "relativePath": "packages/forma-36-react-components/src/components/ToggleButton/ToggleButton.tsx",
            "importedName": "ToggleButton",
            "resolved": [
               {
                  "relativePath": "packages/forma-36-react-components/src/index.ts",
                  "exportName": "ToggleButton"
               },
               {
                  "relativePath": "packages/forma-36-react-components/src/components/ToggleButton/ToggleButton.tsx",
                  "exportName": "ToggleButton"
               }
            ],
            "parsed": {
               "props": {
                  "icon": {
                     "name": "icon",
                     "type": "string",
                     "enum": [
                        "ArrowDown",
                        "ArrowDownTrimmed",
                        "ArrowUp",
                        "ArrowUpTrimmed",
                        "Asset",
                        "AssetTrimmed",
                        "Calendar",
                        "ChatBubble",
                        "ChatBubbleTrimmed",
                        "CheckCircle",
                        "CheckCircleTrimmed"
                     ],
                     "parent": "ToggleButtonProps"
                  },
                  "isActive": {
                     "name": "isActive",
                     "type": "boolean",
                     "default": false,
                     "parent": "ToggleButtonProps"
                  },
                  "onToggle": {
                     "name": "onToggle",
                     "type": "Event",
                     "parent": "ToggleButtonProps"
                  },
                  "isDisabled": {
                     "name": "isDisabled",
                     "type": "boolean",
                     "default": false,
                     "parent": "ToggleButtonProps"
                  },
                  "testId": {
                     "name": "testId",
                     "type": "string",
                     "default": "cf-ui-toggle-button",
                     "parent": "ToggleButtonProps"
                  },
                  "className": {
                     "name": "className",
                     "type": "string",
                     "parent": "ToggleButtonProps"
                  },
                  "children": {
                     "name": "children",
                     "type": "array",
                     "items": {
                        "type": "Node"
                     }
                  }
               }
            }
         },
         "AssetCard": {
            "packageName": "@contentful/forma-36-react-components",
            "exportedName": "AssetCard",
            "relativePath": "packages/forma-36-react-components/src/components/Card/AssetCard/AssetCard.tsx",
            "importedName": "AssetCard",
            "resolved": [
               {
                  "relativePath": "packages/forma-36-react-components/src/index.ts",
                  "exportName": "AssetCard"
               },
               {
                  "relativePath": "packages/forma-36-react-components/src/components/Card/AssetCard/AssetCard.tsx",
                  "exportName": "AssetCard"
               }
            ],
            "parsed": {
               "props": {
                  "src": {
                     "name": "src",
                     "type": "string",
                     "description": "The source of the asset (will also render a thumbnail if the AssetCards type is set to image)",
                     "parent": "AssetCardProps"
                  },
                  "title": {
                     "name": "title",
                     "type": "string",
                     "description": "The title of the asset",
                     "parent": "AssetCardProps"
                  },
                  "isLoading": {
                     "name": "isLoading",
                     "type": "boolean",
                     "default": false,
                     "description": "Loading state for the AssetCard - when true will display loading feedback to the user",
                     "parent": "AssetCardProps"
                  },
                  "dropdownListElements": {
                     "name": "dropdownListElements",
                     "type": "array",
                     "items": {
                        "type": "Node"
                     },
                     "multipleTypes": true,
                     "description": "The DropdownList elements used to render an actions dropdown for the AssetCard",
                     "parent": "AssetCardProps"
                  },
                  "status": {
                     "name": "status",
                     "type": "string",
                     "enum": [
                        "archived",
                        "changed",
                        "draft",
                        "published"
                     ],
                     "description": "The publish status of the asset",
                     "parent": "AssetCardProps"
                  },
                  "type": {
                     "name": "type",
                     "type": "string",
                     "enum": [
                        "archive",
                        "audio",
                        "code",
                        "image",
                        "markup",
                        "pdf",
                        "plaintext",
                        "presentation",
                        "richtext",
                        "spreadsheet",
                        "video"
                     ],
                     "description": "The type of asset being represented",
                     "parent": "AssetCardProps"
                  },
                  "cardDragHandleComponent": {
                     "name": "cardDragHandleComponent",
                     "type": "array",
                     "items": {
                        "type": "Node"
                     },
                     "description": "Prop to pass a custom CardDragHandle component to for use in drag and drop contexts",
                     "parent": "AssetCardProps"
                  },
                  "withDragHandle": {
                     "name": "withDragHandle",
                     "type": "boolean",
                     "description": "Renders a default drag handle for the component for use in drag and drop contexts",
                     "parent": "AssetCardProps"
                  },
                  "cardDragHandleProps": {
                     "name": "cardDragHandleProps",
                     "type": "unknown",
                     "description": "Props to pass down to the default CardDragHandle component (does not work with cardDragHandleComponent prop)",
                     "parent": "AssetCardProps"
                  },
                  "isDragActive": {
                     "name": "isDragActive",
                     "type": "boolean",
                     "description": "Applies styling for when the component is actively being dragged by the user",
                     "parent": "AssetCardProps"
                  },
                  "size": {
                     "name": "size",
                     "type": "string",
                     "enum": [
                        "small",
                        "default"
                     ],
                     "default": "default",
                     "description": "Renders a small variant of the card which accommodates a 150x150px image",
                     "parent": "AssetCardProps"
                  },
                  "href": {
                     "name": "href",
                     "type": "string",
                     "description": "Used to make the decision of either rendering the card as a link tag or as a div tag",
                     "parent": "BaseCardProps"
                  },
                  "target": {
                     "name": "target",
                     "type": "string",
                     "description": "Used with href to specify target attribute value",
                     "parent": "BaseCardProps"
                  },
                  "selected": {
                     "name": "selected",
                     "type": "boolean",
                     "description": "Applies selected styles to the element",
                     "parent": "BaseCardProps"
                  },
                  "testId": {
                     "name": "testId",
                     "type": "string",
                     "default": "cf-ui-asset-card",
                     "description": "An ID used for testing purposes applied as a data attribute (data-test-id)",
                     "parent": "BaseCardProps"
                  },
                  "className": {
                     "name": "className",
                     "type": "string",
                     "description": "Class names to be appended to the className prop of the component",
                     "parent": "BaseCardProps"
                  }
               }
            }
         },
         "Asset": {
            "packageName": "@contentful/forma-36-react-components",
            "exportedName": "Asset",
            "relativePath": "packages/forma-36-react-components/src/components/Asset/Asset.tsx",
            "importedName": "Asset",
            "resolved": [
               {
                  "relativePath": "packages/forma-36-react-components/src/index.ts",
                  "exportName": "Asset"
               },
               {
                  "relativePath": "packages/forma-36-react-components/src/components/Asset/index.ts",
                  "exportName": "Asset"
               },
               {
                  "relativePath": "packages/forma-36-react-components/src/components/Asset/Asset.tsx",
                  "exportName": "Asset"
               }
            ],
            "parsed": {
               "props": {
                  "src": {
                     "name": "src",
                     "type": "string",
                     "parent": "AssetProps"
                  },
                  "title": {
                     "name": "title",
                     "type": "string",
                     "parent": "AssetProps"
                  },
                  "type": {
                     "name": "type",
                     "type": "string",
                     "enum": [
                        "archive",
                        "audio",
                        "code",
                        "image",
                        "markup",
                        "pdf",
                        "plaintext",
                        "presentation",
                        "richtext",
                        "spreadsheet",
                        "video"
                     ],
                     "default": "image",
                     "parent": "AssetProps"
                  },
                  "className": {
                     "name": "className",
                     "type": "string",
                     "parent": "AssetProps"
                  },
                  "status": {
                     "name": "status",
                     "type": "string",
                     "enum": [
                        "archived",
                        "changed",
                        "draft",
                        "published"
                     ],
                     "parent": "AssetProps"
                  },
                  "testId": {
                     "name": "testId",
                     "type": "string",
                     "default": "cf-ui-asset",
                     "parent": "AssetProps"
                  }
               }
            }
         },
         "AssetIcon": {
            "packageName": "@contentful/forma-36-react-components",
            "exportedName": "AssetIcon",
            "relativePath": "packages/forma-36-react-components/src/components/Asset/AssetIcon/AssetIcon.tsx",
            "importedName": "AssetIcon",
            "resolved": [
               {
                  "relativePath": "packages/forma-36-react-components/src/index.ts",
                  "exportName": "AssetIcon"
               },
               {
                  "relativePath": "packages/forma-36-react-components/src/components/Asset/index.ts",
                  "exportName": "AssetIcon"
               },
               {
                  "relativePath": "packages/forma-36-react-components/src/components/Asset/AssetIcon/AssetIcon.tsx",
                  "exportName": "AssetIcon"
               }
            ],
            "parsed": {
               "props": {
                  "type": {
                     "name": "type",
                     "type": "string",
                     "enum": [
                        "archive",
                        "audio",
                        "code",
                        "image",
                        "markup",
                        "pdf",
                        "plaintext",
                        "presentation",
                        "richtext",
                        "spreadsheet",
                        "video"
                     ],
                     "default": "archive",
                     "parent": "AssetIconProps"
                  },
                  "className": {
                     "name": "className",
                     "type": "string",
                     "parent": "IllustrationProps"
                  },
                  "testId": {
                     "name": "testId",
                     "type": "string",
                     "default": "cf-ui-asset-icon",
                     "parent": "IllustrationProps"
                  },
                  "style": {
                     "name": "style",
                     "type": "object",
                     "parent": "IllustrationProps"
                  }
               }
            }
         },
         "Tag": {
            "packageName": "@contentful/forma-36-react-components",
            "exportedName": "Tag",
            "relativePath": "packages/forma-36-react-components/src/components/Tag/Tag.tsx",
            "importedName": "Tag",
            "resolved": [
               {
                  "relativePath": "packages/forma-36-react-components/src/index.ts",
                  "exportName": "Tag"
               },
               {
                  "relativePath": "packages/forma-36-react-components/src/components/Tag/Tag.tsx",
                  "exportName": "Tag"
               }
            ],
            "parsed": {
               "props": {
                  "tagType": {
                     "name": "tagType",
                     "type": "string",
                     "enum": [
                        "primary",
                        "positive",
                        "negative",
                        "warning",
                        "secondary",
                        "muted"
                     ],
                     "default": "primary as TagType",
                     "parent": "TagProps"
                  },
                  "style": {
                     "name": "style",
                     "type": "object",
                     "parent": "TagProps"
                  },
                  "className": {
                     "name": "className",
                     "type": "string",
                     "parent": "TagProps"
                  },
                  "testId": {
                     "name": "testId",
                     "type": "string",
                     "default": "cf-ui-tag",
                     "parent": "TagProps"
                  },
                  "entityStatusType": {
                     "name": "entityStatusType",
                     "type": "string",
                     "enum": [
                        "published",
                        "draft",
                        "archived",
                        "changed",
                        "deleted"
                     ],
                     "parent": "TagProps"
                  },
                  "children": {
                     "name": "children",
                     "type": "array",
                     "items": {
                        "type": "Node"
                     }
                  }
               }
            }
         },
         "Heading": {
            "packageName": "@contentful/forma-36-react-components",
            "exportedName": "Heading",
            "relativePath": "packages/forma-36-react-components/src/components/Typography/Heading/Heading.tsx",
            "importedName": "Heading",
            "resolved": [
               {
                  "relativePath": "packages/forma-36-react-components/src/index.ts",
                  "exportName": "Heading"
               },
               {
                  "relativePath": "packages/forma-36-react-components/src/components/Typography/Heading/Heading.tsx",
                  "exportName": "Heading"
               }
            ],
            "parsed": {
               "props": {
                  "element": {
                     "name": "element",
                     "type": "string",
                     "enum": [
                        "h1",
                        "h2",
                        "h3",
                        "h4",
                        "h5",
                        "h6",
                        "p"
                     ],
                     "default": "h1",
                     "parent": "HeadingProps"
                  },
                  "style": {
                     "name": "style",
                     "type": "object",
                     "parent": "HeadingProps"
                  },
                  "className": {
                     "name": "className",
                     "type": "string",
                     "parent": "HeadingProps"
                  },
                  "testId": {
                     "name": "testId",
                     "type": "string",
                     "default": "cf-ui-heading",
                     "parent": "HeadingProps"
                  },
                  "children": {
                     "name": "children",
                     "type": "array",
                     "items": {
                        "type": "Node"
                     }
                  }
               }
            }
         },
         "InViewport": {
            "packageName": "@contentful/forma-36-react-components",
            "exportedName": "InViewport",
            "relativePath": "packages/forma-36-react-components/src/components/InViewport/InViewport.tsx",
            "importedName": "InViewport",
            "resolved": [
               {
                  "relativePath": "packages/forma-36-react-components/src/index.ts",
                  "exportName": "InViewport"
               },
               {
                  "relativePath": "packages/forma-36-react-components/src/components/InViewport/InViewport.tsx",
                  "exportName": "InViewport"
               }
            ],
            "parsed": {
               "props": {
                  "offset": {
                     "name": "offset",
                     "type": "number",
                     "default": 0,
                     "parent": "InViewportProps"
                  },
                  "onOverflowTop": {
                     "name": "onOverflowTop",
                     "type": "Event",
                     "parent": "InViewportProps"
                  },
                  "onOverflowRight": {
                     "name": "onOverflowRight",
                     "type": "Event",
                     "parent": "InViewportProps"
                  },
                  "onOverflowBottom": {
                     "name": "onOverflowBottom",
                     "type": "Event",
                     "parent": "InViewportProps"
                  },
                  "onOverflowLeft": {
                     "name": "onOverflowLeft",
                     "type": "Event",
                     "parent": "InViewportProps"
                  },
                  "className": {
                     "name": "className",
                     "type": "string",
                     "parent": "InViewportProps"
                  },
                  "testId": {
                     "name": "testId",
                     "type": "string",
                     "default": "cf-ui-in-viewport",
                     "parent": "InViewportProps"
                  },
                  "children": {
                     "name": "children",
                     "type": "array",
                     "items": {
                        "type": "Node"
                     }
                  }
               }
            }
         },
         "Modal": {
            "packageName": "@contentful/forma-36-react-components",
            "exportedName": "Modal",
            "relativePath": "packages/forma-36-react-components/src/components/Modal/Modal.tsx",
            "importedName": "Modal",
            "resolved": [
               {
                  "relativePath": "packages/forma-36-react-components/src/index.ts",
                  "exportName": "Modal"
               },
               {
                  "relativePath": "packages/forma-36-react-components/src/components/Modal/Modal.tsx",
                  "exportName": "Modal"
               }
            ],
            "parsed": {
               "props": {
                  "isShown": {
                     "name": "isShown",
                     "type": "boolean",
                     "description": "When true, the dialog is shown.",
                     "parent": "ModalProps"
                  },
                  "onClose": {
                     "name": "onClose",
                     "type": "Event",
                     "description": "Function that will be called when the exit is complete.",
                     "parent": "ModalProps"
                  },
                  "onAfterOpen": {
                     "name": "onAfterOpen",
                     "type": "Event",
                     "description": "Function that will be called when the enter is complete.",
                     "parent": "ModalProps"
                  },
                  "shouldCloseOnOverlayClick": {
                     "name": "shouldCloseOnOverlayClick",
                     "type": "boolean",
                     "default": false,
                     "description": "Boolean indicating if clicking the overlay should close the overlay.",
                     "parent": "ModalProps"
                  },
                  "shouldCloseOnEscapePress": {
                     "name": "shouldCloseOnEscapePress",
                     "type": "boolean",
                     "default": false,
                     "description": "Boolean indicating if pressing the esc key should close the overlay.",
                     "parent": "ModalProps"
                  },
                  "position": {
                     "name": "position",
                     "type": "string",
                     "enum": [
                        "center",
                        "top"
                     ],
                     "default": "center",
                     "description": "Boolean indicating if modal is centered",
                     "parent": "ModalProps"
                  },
                  "topOffset": {
                     "name": "topOffset",
                     "type": "string",
                     "multipleTypes": true,
                     "default": "50px",
                     "description": "Top offset if position is top",
                     "parent": "ModalProps"
                  },
                  "title": {
                     "name": "title",
                     "type": "string",
                     "description": "Modal title that is used in header",
                     "parent": "ModalProps"
                  },
                  "size": {
                     "name": "size",
                     "type": "string",
                     "multipleTypes": true,
                     "default": "medium",
                     "description": "Size of the modal window",
                     "parent": "ModalProps",
                     "enum": [
                        "small",
                        "medium",
                        "large",
                        "fullWidth",
                        "zen",
                        "string",
                        "number"
                     ]
                  },
                  "allowHeightOverflow": {
                     "name": "allowHeightOverflow",
                     "type": "boolean",
                     "default": false,
                     "description": "Are modals higher than viewport allowed",
                     "parent": "ModalProps"
                  },
                  "modalHeaderProps": {
                     "name": "modalHeaderProps",
                     "type": "unknown",
                     "description": "Optional props to override ModalHeader behaviour",
                     "parent": "ModalProps"
                  },
                  "modalContentProps": {
                     "name": "modalContentProps",
                     "type": "unknown",
                     "description": "Optional props to override ModalContent behaviour",
                     "parent": "ModalProps"
                  },
                  "className": {
                     "name": "className",
                     "type": "string",
                     "parent": "ModalProps"
                  },
                  "testId": {
                     "name": "testId",
                     "type": "string",
                     "default": "cf-ui-modal",
                     "parent": "ModalProps"
                  },
                  "children": {
                     "name": "children",
                     "type": "unknown"
                  }
               }
            },
            "overrides": {
               "props": {
                  "modalHeaderProps": {
                     "source": "example",
                     "relativePath": "packages/forma-36-react-components/src/components/Modal/Modal.stories.tsx",
                     "prev": {
                        "type": "unknown"
                     },
                     "new": {
                        "type": "object"
                     }
                  },
                  "modalContentProps": {
                     "source": "example",
                     "relativePath": "packages/forma-36-react-components/src/components/Modal/Modal.stories.tsx",
                     "prev": {
                        "type": "unknown"
                     },
                     "new": {
                        "type": "object"
                     }
                  },
                  "children": {
                     "source": "example",
                     "relativePath": "packages/forma-36-react-components/src/components/Modal/Modal.stories.tsx",
                     "prev": {
                        "type": "unknown"
                     },
                     "new": {
                        "type": "array",
                        "items": {
                           "type": "string"
                        }
                     }
                  }
               }
            }
         },
         "ModalConfirm": {
            "packageName": "@contentful/forma-36-react-components",
            "exportedName": "ModalConfirm",
            "relativePath": "packages/forma-36-react-components/src/components/Modal/ModalConfirm/ModalConfirm.tsx",
            "importedName": "ModalConfirm",
            "resolved": [
               {
                  "relativePath": "packages/forma-36-react-components/src/index.ts",
                  "exportName": "ModalConfirm"
               },
               {
                  "relativePath": "packages/forma-36-react-components/src/components/Modal/ModalConfirm/ModalConfirm.tsx",
                  "exportName": "ModalConfirm"
               }
            ],
            "parsed": {
               "props": {
                  "isShown": {
                     "name": "isShown",
                     "type": "boolean",
                     "description": "When true, the dialog is shown.",
                     "parent": "ModalConfirmProps"
                  },
                  "onConfirm": {
                     "name": "onConfirm",
                     "type": "Event",
                     "description": "Function that will be called when the confirm button is clicked. This does not close the ModalConfirm.",
                     "parent": "ModalConfirmProps"
                  },
                  "onSecondary": {
                     "name": "onSecondary",
                     "type": "Event",
                     "description": "Function that will be called when the secondary button is clicked. This does not close the ModalConfirm.",
                     "parent": "ModalConfirmProps"
                  },
                  "onCancel": {
                     "name": "onCancel",
                     "type": "Event",
                     "description": "Function that will be called when the cancel button is clicked. This does not close the ModalConfirm.",
                     "parent": "ModalConfirmProps"
                  },
                  "title": {
                     "name": "title",
                     "type": "string",
                     "default": "Are you sure?",
                     "description": "Modal title that is used in header",
                     "parent": "ModalConfirmProps"
                  },
                  "confirmLabel": {
                     "name": "confirmLabel",
                     "type": "string",
                     "multipleTypes": true,
                     "default": "Confirm",
                     "description": "Label of the confirm button",
                     "parent": "ModalConfirmProps"
                  },
                  "secondaryLabel": {
                     "name": "secondaryLabel",
                     "type": "string",
                     "multipleTypes": true,
                     "description": "Label of the secondary button",
                     "parent": "ModalConfirmProps"
                  },
                  "cancelLabel": {
                     "name": "cancelLabel",
                     "type": "string",
                     "multipleTypes": true,
                     "default": "Cancel",
                     "description": "Label of the cancel button",
                     "parent": "ModalConfirmProps"
                  },
                  "intent": {
                     "name": "intent",
                     "type": "string",
                     "enum": [
                        "primary",
                        "positive",
                        "negative"
                     ],
                     "default": "positive",
                     "description": "The intent of the ModalConfirm. Used for the Button.",
                     "parent": "ModalConfirmProps"
                  },
                  "secondaryIntent": {
                     "name": "secondaryIntent",
                     "type": "string",
                     "enum": [
                        "primary",
                        "positive",
                        "negative",
                        "muted"
                     ],
                     "description": "The intent of the ModalConfirm. Used for the secondary Button.",
                     "parent": "ModalConfirmProps"
                  },
                  "size": {
                     "name": "size",
                     "type": "string",
                     "multipleTypes": true,
                     "default": "medium",
                     "description": "Size of the modal window",
                     "parent": "ModalConfirmProps"
                  },
                  "shouldCloseOnOverlayClick": {
                     "name": "shouldCloseOnOverlayClick",
                     "type": "boolean",
                     "default": false,
                     "description": "Boolean indicating if clicking the overlay should close the overlay.",
                     "parent": "ModalConfirmProps"
                  },
                  "shouldCloseOnEscapePress": {
                     "name": "shouldCloseOnEscapePress",
                     "type": "boolean",
                     "default": false,
                     "description": "Boolean indicating if pressing the esc key should close the overlay.",
                     "parent": "ModalConfirmProps"
                  },
                  "isConfirmDisabled": {
                     "name": "isConfirmDisabled",
                     "type": "boolean",
                     "default": false,
                     "description": "When true, the confirm button is set to disabled.",
                     "parent": "ModalConfirmProps"
                  },
                  "isSecondaryDisabled": {
                     "name": "isSecondaryDisabled",
                     "type": "boolean",
                     "description": "When true, the secondary button is set to disabled.",
                     "parent": "ModalConfirmProps"
                  },
                  "isConfirmLoading": {
                     "name": "isConfirmLoading",
                     "type": "boolean",
                     "default": false,
                     "description": "When true, the confirm button is set to loading.",
                     "parent": "ModalConfirmProps"
                  },
                  "isSecondaryLoading": {
                     "name": "isSecondaryLoading",
                     "type": "boolean",
                     "description": "When true, the secondary button is set to loading.",
                     "parent": "ModalConfirmProps"
                  },
                  "allowHeightOverflow": {
                     "name": "allowHeightOverflow",
                     "type": "boolean",
                     "default": false,
                     "description": "Are modals higher than viewport allowed",
                     "parent": "ModalConfirmProps"
                  },
                  "modalHeaderProps": {
                     "name": "modalHeaderProps",
                     "type": "unknown",
                     "description": "Optional props to override ModalHeader behaviour",
                     "parent": "ModalConfirmProps"
                  },
                  "modalContentProps": {
                     "name": "modalContentProps",
                     "type": "unknown",
                     "description": "Optional props to override ModalContent behaviour",
                     "parent": "ModalConfirmProps"
                  },
                  "modalControlsProps": {
                     "name": "modalControlsProps",
                     "type": "unknown",
                     "description": "Optional props to override ModalControl behaviour",
                     "parent": "ModalConfirmProps"
                  },
                  "testId": {
                     "name": "testId",
                     "type": "string",
                     "default": "cf-ui-modal-confirm",
                     "parent": "ModalConfirmProps"
                  },
                  "confirmTestId": {
                     "name": "confirmTestId",
                     "type": "string",
                     "default": "cf-ui-modal-confirm-confirm-button",
                     "parent": "ModalConfirmProps"
                  },
                  "secondaryTestId": {
                     "name": "secondaryTestId",
                     "type": "string",
                     "default": "cf-ui-modal-confirm-secondary-button",
                     "parent": "ModalConfirmProps"
                  },
                  "cancelTestId": {
                     "name": "cancelTestId",
                     "type": "string",
                     "default": "cf-ui-modal-confirm-cancel-button",
                     "parent": "ModalConfirmProps"
                  },
                  "children": {
                     "name": "children",
                     "type": "array",
                     "items": {
                        "type": "Node"
                     }
                  }
               }
            }
         },
         "FieldGroup": {
            "packageName": "@contentful/forma-36-react-components",
            "exportedName": "FieldGroup",
            "relativePath": "packages/forma-36-react-components/src/components/Form/FieldGroup/FieldGroup.tsx",
            "importedName": "FieldGroup",
            "resolved": [
               {
                  "relativePath": "packages/forma-36-react-components/src/index.ts",
                  "exportName": "FieldGroup"
               },
               {
                  "relativePath": "packages/forma-36-react-components/src/components/Form/FieldGroup/FieldGroup.tsx",
                  "exportName": "FieldGroup"
               }
            ],
            "parsed": {
               "props": {
                  "className": {
                     "name": "className",
                     "type": "string",
                     "parent": "FieldGroupProps"
                  },
                  "style": {
                     "name": "style",
                     "type": "object",
                     "parent": "FieldGroupProps"
                  },
                  "testId": {
                     "name": "testId",
                     "type": "string",
                     "default": "cf-ui-field-group",
                     "parent": "FieldGroupProps"
                  },
                  "row": {
                     "name": "row",
                     "type": "boolean",
                     "default": false,
                     "parent": "FieldGroupProps"
                  },
                  "children": {
                     "name": "children",
                     "type": "array",
                     "items": {
                        "type": "Node"
                     }
                  }
               }
            }
         },
         "Form": {
            "packageName": "@contentful/forma-36-react-components",
            "exportedName": "Form",
            "relativePath": "packages/forma-36-react-components/src/components/Form/Form.tsx",
            "importedName": "Form",
            "resolved": [
               {
                  "relativePath": "packages/forma-36-react-components/src/index.ts",
                  "exportName": "Form"
               },
               {
                  "relativePath": "packages/forma-36-react-components/src/components/Form/Form.tsx",
                  "exportName": "Form"
               }
            ],
            "parsed": {
               "props": {
                  "onSubmit": {
                     "name": "onSubmit",
                     "type": "Event",
                     "parent": "FormProps"
                  },
                  "spacing": {
                     "name": "spacing",
                     "type": "string",
                     "enum": [
                        "condensed",
                        "default"
                     ],
                     "default": "default",
                     "parent": "FormProps"
                  },
                  "testId": {
                     "name": "testId",
                     "type": "string",
                     "default": "cf-ui-form",
                     "parent": "FormProps"
                  },
                  "style": {
                     "name": "style",
                     "type": "object",
                     "parent": "FormProps"
                  },
                  "className": {
                     "name": "className",
                     "type": "string",
                     "parent": "FormProps"
                  },
                  "children": {
                     "name": "children",
                     "type": "unknown"
                  }
               }
            },
            "overrides": {
               "props": {
                  "children": {
                     "source": "example",
                     "relativePath": "packages/forma-36-react-components/src/components/Form/Form.stories.tsx",
                     "prev": {
                        "type": "unknown"
                     },
                     "new": {
                        "type": "array",
                        "items": {
                           "type": "Node"
                        }
                     }
                  }
               }
            }
         },
         "Note": {
            "packageName": "@contentful/forma-36-react-components",
            "exportedName": "Note",
            "relativePath": "packages/forma-36-react-components/src/components/Note/Note.tsx",
            "importedName": "Note",
            "resolved": [
               {
                  "relativePath": "packages/forma-36-react-components/src/index.ts",
                  "exportName": "Note"
               },
               {
                  "relativePath": "packages/forma-36-react-components/src/components/Note/Note.tsx",
                  "exportName": "Note"
               }
            ],
            "parsed": {
               "props": {
                  "noteType": {
                     "name": "noteType",
                     "type": "string",
                     "enum": [
                        "primary",
                        "positive",
                        "negative",
                        "warning"
                     ],
                     "default": "primary",
                     "parent": "NoteProps"
                  },
                  "className": {
                     "name": "className",
                     "type": "string",
                     "parent": "NoteProps"
                  },
                  "title": {
                     "name": "title",
                     "type": "string",
                     "parent": "NoteProps"
                  },
                  "style": {
                     "name": "style",
                     "type": "object",
                     "parent": "NoteProps"
                  },
                  "testId": {
                     "name": "testId",
                     "type": "string",
                     "default": "cf-ui-note",
                     "parent": "NoteProps"
                  },
                  "hasCloseButton": {
                     "name": "hasCloseButton",
                     "type": "boolean",
                     "parent": "NoteProps"
                  },
                  "onClose": {
                     "name": "onClose",
                     "type": "Event",
                     "parent": "NoteProps"
                  },
                  "children": {
                     "name": "children",
                     "type": "array",
                     "items": {
                        "type": "Node"
                     }
                  }
               }
            }
         },
         "Notification": {
            "packageName": "@contentful/forma-36-react-components",
            "exportedName": "Notification",
            "relativePath": "packages/forma-36-react-components/src/components/Notification/index.tsx",
            "importedName": "Notification",
            "resolved": [
               {
                  "relativePath": "packages/forma-36-react-components/src/index.ts",
                  "exportName": "Notification"
               },
               {
                  "relativePath": "packages/forma-36-react-components/src/components/Notification/index.tsx",
                  "exportName": "Notification"
               }
            ],
            "parsed": {
               "error": "No matching component found"
            }
         },
         "ControlledInput": {
            "packageName": "@contentful/forma-36-react-components",
            "exportedName": "ControlledInput",
            "relativePath": "packages/forma-36-react-components/src/components/ControlledInput/ControlledInput.tsx",
            "importedName": "ControlledInput",
            "resolved": [
               {
                  "relativePath": "packages/forma-36-react-components/src/index.ts",
                  "exportName": "ControlledInput"
               },
               {
                  "relativePath": "packages/forma-36-react-components/src/components/ControlledInput/ControlledInput.tsx",
                  "exportName": "ControlledInput"
               }
            ],
            "parsed": {
               "props": {
                  "id": {
                     "name": "id",
                     "type": "string",
                     "parent": "ControlledInputPropTypes"
                  },
                  "required": {
                     "name": "required",
                     "type": "boolean",
                     "default": false,
                     "parent": "ControlledInputPropTypes"
                  },
                  "labelText": {
                     "name": "labelText",
                     "type": "string",
                     "parent": "ControlledInputPropTypes"
                  },
                  "checked": {
                     "name": "checked",
                     "type": "boolean",
                     "parent": "ControlledInputPropTypes"
                  },
                  "onChange": {
                     "name": "onChange",
                     "type": "Event",
                     "parent": "ControlledInputPropTypes"
                  },
                  "name": {
                     "name": "name",
                     "type": "string",
                     "parent": "ControlledInputPropTypes"
                  },
                  "onBlur": {
                     "name": "onBlur",
                     "type": "Event",
                     "parent": "ControlledInputPropTypes"
                  },
                  "onFocus": {
                     "name": "onFocus",
                     "type": "Event",
                     "parent": "ControlledInputPropTypes"
                  },
                  "value": {
                     "name": "value",
                     "type": "string",
                     "parent": "ControlledInputPropTypes"
                  },
                  "disabled": {
                     "name": "disabled",
                     "type": "boolean",
                     "default": false,
                     "parent": "ControlledInputPropTypes"
                  },
                  "type": {
                     "name": "type",
                     "type": "string",
                     "enum": [
                        "checkbox",
                        "radio"
                     ],
                     "default": "checkbox",
                     "parent": "ControlledInputPropTypes"
                  },
                  "className": {
                     "name": "className",
                     "type": "string",
                     "parent": "ControlledInputPropTypes"
                  },
                  "testId": {
                     "name": "testId",
                     "type": "string",
                     "default": "cf-ui-controlled-input",
                     "parent": "ControlledInputPropTypes"
                  },
                  "willBlurOnEsc": {
                     "name": "willBlurOnEsc",
                     "type": "boolean",
                     "default": false,
                     "parent": "ControlledInputPropTypes"
                  }
               }
            }
         },
         "ControlledInputField": {
            "packageName": "@contentful/forma-36-react-components",
            "exportedName": "ControlledInputField",
            "relativePath": "packages/forma-36-react-components/src/components/ControlledInputField/ControlledInputField.tsx",
            "importedName": "ControlledInputField",
            "resolved": [
               {
                  "relativePath": "packages/forma-36-react-components/src/index.ts",
                  "exportName": "ControlledInputField"
               },
               {
                  "relativePath": "packages/forma-36-react-components/src/components/ControlledInputField/ControlledInputField.tsx",
                  "exportName": "ControlledInputField"
               }
            ],
            "parsed": {
               "props": {
                  "id": {
                     "name": "id",
                     "type": "string",
                     "parent": "ControlledInputFieldPropTypes"
                  },
                  "labelText": {
                     "name": "labelText",
                     "type": "string",
                     "parent": "ControlledInputFieldPropTypes"
                  },
                  "labelIsLight": {
                     "name": "labelIsLight",
                     "type": "boolean",
                     "default": false,
                     "parent": "ControlledInputFieldPropTypes"
                  },
                  "required": {
                     "name": "required",
                     "type": "boolean",
                     "parent": "ControlledInputFieldPropTypes"
                  },
                  "helpText": {
                     "name": "helpText",
                     "type": "string",
                     "parent": "ControlledInputFieldPropTypes"
                  },
                  "formLabelProps": {
                     "name": "formLabelProps",
                     "type": "object",
                     "parent": "ControlledInputFieldPropTypes"
                  },
                  "disabled": {
                     "name": "disabled",
                     "type": "boolean",
                     "parent": "ControlledInputFieldPropTypes"
                  },
                  "helpTextProps": {
                     "name": "helpTextProps",
                     "type": "object",
                     "parent": "ControlledInputFieldPropTypes"
                  },
                  "validationMessage": {
                     "name": "validationMessage",
                     "type": "string",
                     "parent": "ControlledInputFieldPropTypes"
                  },
                  "value": {
                     "name": "value",
                     "type": "string",
                     "parent": "ControlledInputFieldPropTypes"
                  },
                  "name": {
                     "name": "name",
                     "type": "string",
                     "parent": "ControlledInputFieldPropTypes"
                  },
                  "checked": {
                     "name": "checked",
                     "type": "boolean",
                     "default": false,
                     "parent": "ControlledInputFieldPropTypes"
                  },
                  "inputProps": {
                     "name": "inputProps",
                     "type": "object",
                     "parent": "ControlledInputFieldPropTypes"
                  },
                  "inputType": {
                     "name": "inputType",
                     "type": "string",
                     "enum": [
                        "radio",
                        "checkbox"
                     ],
                     "default": "checkbox",
                     "parent": "ControlledInputFieldPropTypes"
                  },
                  "onChange": {
                     "name": "onChange",
                     "type": "Event",
                     "parent": "ControlledInputFieldPropTypes"
                  },
                  "className": {
                     "name": "className",
                     "type": "string",
                     "parent": "ControlledInputFieldPropTypes"
                  },
                  "testId": {
                     "name": "testId",
                     "type": "string",
                     "default": "cf-ui-controlled-input-field",
                     "parent": "ControlledInputFieldPropTypes"
                  },
                  "children": {
                     "name": "children",
                     "type": "array",
                     "items": {
                        "type": "Node"
                     }
                  }
               }
            }
         },
         "RadioButton": {
            "packageName": "@contentful/forma-36-react-components",
            "exportedName": "RadioButton",
            "relativePath": "packages/forma-36-react-components/src/components/RadioButton/RadioButton.tsx",
            "importedName": "RadioButton",
            "resolved": [
               {
                  "relativePath": "packages/forma-36-react-components/src/index.ts",
                  "exportName": "RadioButton"
               },
               {
                  "relativePath": "packages/forma-36-react-components/src/components/RadioButton/RadioButton.tsx",
                  "exportName": "RadioButton"
               }
            ],
            "parsed": {
               "props": {
                  "id": {
                     "name": "id",
                     "type": "string",
                     "parent": "ControlledInputPropTypes"
                  },
                  "required": {
                     "name": "required",
                     "type": "boolean",
                     "default": false,
                     "parent": "ControlledInputPropTypes"
                  },
                  "labelText": {
                     "name": "labelText",
                     "type": "string",
                     "parent": "ControlledInputPropTypes"
                  },
                  "checked": {
                     "name": "checked",
                     "type": "boolean",
                     "parent": "ControlledInputPropTypes"
                  },
                  "onChange": {
                     "name": "onChange",
                     "type": "Event",
                     "parent": "ControlledInputPropTypes"
                  },
                  "name": {
                     "name": "name",
                     "type": "string",
                     "parent": "ControlledInputPropTypes"
                  },
                  "onBlur": {
                     "name": "onBlur",
                     "type": "Event",
                     "parent": "ControlledInputPropTypes"
                  },
                  "onFocus": {
                     "name": "onFocus",
                     "type": "Event",
                     "parent": "ControlledInputPropTypes"
                  },
                  "value": {
                     "name": "value",
                     "type": "string",
                     "parent": "ControlledInputPropTypes"
                  },
                  "disabled": {
                     "name": "disabled",
                     "type": "boolean",
                     "default": false,
                     "parent": "ControlledInputPropTypes"
                  },
                  "type": {
                     "name": "type",
                     "type": "string",
                     "enum": [
                        "checkbox",
                        "radio"
                     ],
                     "default": "radio",
                     "parent": "ControlledInputPropTypes"
                  },
                  "className": {
                     "name": "className",
                     "type": "string",
                     "parent": "ControlledInputPropTypes"
                  },
                  "testId": {
                     "name": "testId",
                     "type": "string",
                     "default": "cf-ui-radio-button",
                     "parent": "ControlledInputPropTypes"
                  },
                  "willBlurOnEsc": {
                     "name": "willBlurOnEsc",
                     "type": "boolean",
                     "default": false,
                     "parent": "ControlledInputPropTypes"
                  }
               }
            }
         },
         "RadioButtonField": {
            "packageName": "@contentful/forma-36-react-components",
            "exportedName": "RadioButtonField",
            "relativePath": "packages/forma-36-react-components/src/components/RadioButtonField/RadioButtonField.tsx",
            "importedName": "RadioButtonField",
            "resolved": [
               {
                  "relativePath": "packages/forma-36-react-components/src/index.ts",
                  "exportName": "RadioButtonField"
               },
               {
                  "relativePath": "packages/forma-36-react-components/src/components/RadioButtonField/RadioButtonField.tsx",
                  "exportName": "RadioButtonField"
               }
            ],
            "parsed": {
               "props": {
                  "id": {
                     "name": "id",
                     "type": "string",
                     "parent": "ControlledInputFieldPropTypes"
                  },
                  "labelText": {
                     "name": "labelText",
                     "type": "string",
                     "parent": "ControlledInputFieldPropTypes"
                  },
                  "labelIsLight": {
                     "name": "labelIsLight",
                     "type": "boolean",
                     "default": false,
                     "parent": "ControlledInputFieldPropTypes"
                  },
                  "required": {
                     "name": "required",
                     "type": "boolean",
                     "parent": "ControlledInputFieldPropTypes"
                  },
                  "helpText": {
                     "name": "helpText",
                     "type": "string",
                     "parent": "ControlledInputFieldPropTypes"
                  },
                  "formLabelProps": {
                     "name": "formLabelProps",
                     "type": "object",
                     "parent": "ControlledInputFieldPropTypes"
                  },
                  "disabled": {
                     "name": "disabled",
                     "type": "boolean",
                     "parent": "ControlledInputFieldPropTypes"
                  },
                  "helpTextProps": {
                     "name": "helpTextProps",
                     "type": "object",
                     "parent": "ControlledInputFieldPropTypes"
                  },
                  "validationMessage": {
                     "name": "validationMessage",
                     "type": "string",
                     "parent": "ControlledInputFieldPropTypes"
                  },
                  "value": {
                     "name": "value",
                     "type": "string",
                     "parent": "ControlledInputFieldPropTypes"
                  },
                  "name": {
                     "name": "name",
                     "type": "string",
                     "parent": "ControlledInputFieldPropTypes"
                  },
                  "checked": {
                     "name": "checked",
                     "type": "boolean",
                     "default": false,
                     "parent": "ControlledInputFieldPropTypes"
                  },
                  "inputProps": {
                     "name": "inputProps",
                     "type": "object",
                     "parent": "ControlledInputFieldPropTypes"
                  },
                  "inputType": {
                     "name": "inputType",
                     "type": "string",
                     "enum": [
                        "radio",
                        "checkbox"
                     ],
                     "default": "checkbox",
                     "parent": "ControlledInputFieldPropTypes"
                  },
                  "onChange": {
                     "name": "onChange",
                     "type": "Event",
                     "parent": "ControlledInputFieldPropTypes"
                  },
                  "className": {
                     "name": "className",
                     "type": "string",
                     "parent": "ControlledInputFieldPropTypes"
                  },
                  "testId": {
                     "name": "testId",
                     "type": "string",
                     "default": "cf-ui-radio-button-field",
                     "parent": "ControlledInputFieldPropTypes"
                  }
               }
            }
         },
         "Subheading": {
            "packageName": "@contentful/forma-36-react-components",
            "exportedName": "Subheading",
            "relativePath": "packages/forma-36-react-components/src/components/Typography/Subheading/Subheading.tsx",
            "importedName": "Subheading",
            "resolved": [
               {
                  "relativePath": "packages/forma-36-react-components/src/index.ts",
                  "exportName": "Subheading"
               },
               {
                  "relativePath": "packages/forma-36-react-components/src/components/Typography/Subheading/Subheading.tsx",
                  "exportName": "Subheading"
               }
            ],
            "parsed": {
               "props": {
                  "element": {
                     "name": "element",
                     "type": "string",
                     "enum": [
                        "h1",
                        "h2",
                        "h3",
                        "h4",
                        "h5",
                        "h6",
                        "p"
                     ],
                     "default": "h2",
                     "parent": "SubheadingProps"
                  },
                  "className": {
                     "name": "className",
                     "type": "string",
                     "parent": "SubheadingProps"
                  },
                  "testId": {
                     "name": "testId",
                     "type": "string",
                     "default": "cf-ui-subheading",
                     "parent": "SubheadingProps"
                  },
                  "style": {
                     "name": "style",
                     "type": "object",
                     "parent": "SubheadingProps"
                  },
                  "children": {
                     "name": "children",
                     "type": "array",
                     "items": {
                        "type": "Node"
                     }
                  }
               }
            }
         },
         "SectionHeading": {
            "packageName": "@contentful/forma-36-react-components",
            "exportedName": "SectionHeading",
            "relativePath": "packages/forma-36-react-components/src/components/Typography/SectionHeading/SectionHeading.tsx",
            "importedName": "SectionHeading",
            "resolved": [
               {
                  "relativePath": "packages/forma-36-react-components/src/index.ts",
                  "exportName": "SectionHeading"
               },
               {
                  "relativePath": "packages/forma-36-react-components/src/components/Typography/SectionHeading/SectionHeading.tsx",
                  "exportName": "SectionHeading"
               }
            ],
            "parsed": {
               "props": {
                  "element": {
                     "name": "element",
                     "type": "string",
                     "enum": [
                        "h1",
                        "h2",
                        "h3",
                        "h4",
                        "h5",
                        "h6",
                        "p"
                     ],
                     "default": "h3",
                     "parent": "SectionHeadingProps"
                  },
                  "className": {
                     "name": "className",
                     "type": "string",
                     "parent": "SectionHeadingProps"
                  },
                  "testId": {
                     "name": "testId",
                     "type": "string",
                     "default": "cf-ui-section-heading",
                     "parent": "SectionHeadingProps"
                  },
                  "style": {
                     "name": "style",
                     "type": "object",
                     "parent": "SectionHeadingProps"
                  },
                  "children": {
                     "name": "children",
                     "type": "string"
                  }
               }
            }
         },
         "Paragraph": {
            "packageName": "@contentful/forma-36-react-components",
            "exportedName": "Paragraph",
            "relativePath": "packages/forma-36-react-components/src/components/Typography/Paragraph/Paragraph.tsx",
            "importedName": "Paragraph",
            "resolved": [
               {
                  "relativePath": "packages/forma-36-react-components/src/index.ts",
                  "exportName": "Paragraph"
               },
               {
                  "relativePath": "packages/forma-36-react-components/src/components/Typography/Paragraph/Paragraph.tsx",
                  "exportName": "Paragraph"
               }
            ],
            "parsed": {
               "props": {
                  "element": {
                     "name": "element",
                     "type": "string",
                     "enum": [
                        "h1",
                        "h2",
                        "h3",
                        "h4",
                        "h5",
                        "h6",
                        "p"
                     ],
                     "default": "p",
                     "parent": "ParagraphProps"
                  },
                  "className": {
                     "name": "className",
                     "type": "string",
                     "parent": "ParagraphProps"
                  },
                  "testId": {
                     "name": "testId",
                     "type": "string",
                     "default": "cf-ui-paragraph",
                     "parent": "ParagraphProps"
                  },
                  "style": {
                     "name": "style",
                     "type": "object",
                     "parent": "ParagraphProps"
                  },
                  "children": {
                     "name": "children",
                     "type": "array",
                     "items": {
                        "type": "Node"
                     }
                  }
               }
            }
         },
         "DisplayText": {
            "packageName": "@contentful/forma-36-react-components",
            "exportedName": "DisplayText",
            "relativePath": "packages/forma-36-react-components/src/components/Typography/DisplayText/DisplayText.tsx",
            "importedName": "DisplayText",
            "resolved": [
               {
                  "relativePath": "packages/forma-36-react-components/src/index.ts",
                  "exportName": "DisplayText"
               },
               {
                  "relativePath": "packages/forma-36-react-components/src/components/Typography/DisplayText/DisplayText.tsx",
                  "exportName": "DisplayText"
               }
            ],
            "parsed": {
               "props": {
                  "element": {
                     "name": "element",
                     "type": "string",
                     "enum": [
                        "h1",
                        "h2",
                        "h3",
                        "h4",
                        "h5",
                        "h6",
                        "p"
                     ],
                     "default": "h1",
                     "parent": "DisplayTextProps"
                  },
                  "size": {
                     "name": "size",
                     "type": "string",
                     "enum": [
                        "default",
                        "large"
                     ],
                     "default": "default",
                     "parent": "DisplayTextProps"
                  },
                  "className": {
                     "name": "className",
                     "type": "string",
                     "parent": "DisplayTextProps"
                  },
                  "style": {
                     "name": "style",
                     "type": "object",
                     "parent": "DisplayTextProps"
                  },
                  "testId": {
                     "name": "testId",
                     "type": "string",
                     "default": "cf-ui-display-text",
                     "parent": "DisplayTextProps"
                  },
                  "children": {
                     "name": "children",
                     "type": "array",
                     "items": {
                        "type": "Node"
                     }
                  }
               }
            }
         },
         "List": {
            "packageName": "@contentful/forma-36-react-components",
            "exportedName": "List",
            "relativePath": "packages/forma-36-react-components/src/components/List/List.tsx",
            "importedName": "List",
            "resolved": [
               {
                  "relativePath": "packages/forma-36-react-components/src/index.ts",
                  "exportName": "List"
               },
               {
                  "relativePath": "packages/forma-36-react-components/src/components/List/index.ts",
                  "exportName": "List"
               },
               {
                  "relativePath": "packages/forma-36-react-components/src/components/List/List.tsx",
                  "exportName": "List"
               }
            ],
            "parsed": {
               "props": {
                  "className": {
                     "name": "className",
                     "type": "string",
                     "parent": "ListProps"
                  },
                  "style": {
                     "name": "style",
                     "type": "object",
                     "parent": "ListProps"
                  },
                  "testId": {
                     "name": "testId",
                     "type": "string",
                     "default": "cf-ui-list",
                     "parent": "ListProps"
                  },
                  "children": {
                     "name": "children",
                     "type": "array",
                     "items": {
                        "type": "Node"
                     }
                  }
               }
            }
         },
         "ListItem": {
            "packageName": "@contentful/forma-36-react-components",
            "exportedName": "ListItem",
            "relativePath": "packages/forma-36-react-components/src/components/List/ListItem/ListItem.tsx",
            "importedName": "ListItem",
            "resolved": [
               {
                  "relativePath": "packages/forma-36-react-components/src/index.ts",
                  "exportName": "ListItem"
               },
               {
                  "relativePath": "packages/forma-36-react-components/src/components/List/ListItem/ListItem.tsx",
                  "exportName": "ListItem"
               }
            ],
            "parsed": {
               "props": {
                  "className": {
                     "name": "className",
                     "type": "string",
                     "parent": "ListItemProps"
                  },
                  "testId": {
                     "name": "testId",
                     "type": "string",
                     "default": "cf-ui-list-item",
                     "parent": "ListItemProps"
                  },
                  "children": {
                     "name": "children",
                     "type": "array",
                     "items": {
                        "type": "Node"
                     }
                  }
               }
            }
         },
         "SkeletonBodyText": {
            "packageName": "@contentful/forma-36-react-components",
            "exportedName": "SkeletonBodyText",
            "relativePath": "packages/forma-36-react-components/src/components/Skeleton/SkeletonBodyText/SkeletonBodyText.tsx",
            "importedName": "SkeletonBodyText",
            "resolved": [
               {
                  "relativePath": "packages/forma-36-react-components/src/index.ts",
                  "exportName": "SkeletonBodyText"
               },
               {
                  "relativePath": "packages/forma-36-react-components/src/components/Skeleton/SkeletonBodyText/SkeletonBodyText.tsx",
                  "exportName": "SkeletonBodyText"
               }
            ],
            "parsed": {
               "props": {
                  "numberOfLines": {
                     "name": "numberOfLines",
                     "type": "number",
                     "parent": "SkeletonTextProps"
                  },
                  "offsetTop": {
                     "name": "offsetTop",
                     "type": "string",
                     "multipleTypes": true,
                     "parent": "SkeletonTextProps"
                  },
                  "offsetLeft": {
                     "name": "offsetLeft",
                     "type": "string",
                     "multipleTypes": true,
                     "parent": "SkeletonTextProps"
                  },
                  "lineHeight": {
                     "name": "lineHeight",
                     "type": "string",
                     "multipleTypes": true,
                     "parent": "SkeletonTextProps"
                  },
                  "marginBottom": {
                     "name": "marginBottom",
                     "type": "string",
                     "multipleTypes": true,
                     "parent": "SkeletonTextProps"
                  },
                  "width": {
                     "name": "width",
                     "type": "string",
                     "multipleTypes": true,
                     "parent": "SkeletonTextProps"
                  }
               }
            }
         },
         "SkeletonContainer": {
            "packageName": "@contentful/forma-36-react-components",
            "exportedName": "SkeletonContainer",
            "relativePath": "packages/forma-36-react-components/src/components/Skeleton/SkeletonContainer/SkeletonContainer.tsx",
            "importedName": "SkeletonContainer",
            "resolved": [
               {
                  "relativePath": "packages/forma-36-react-components/src/index.ts",
                  "exportName": "SkeletonContainer"
               },
               {
                  "relativePath": "packages/forma-36-react-components/src/components/Skeleton/SkeletonContainer/SkeletonContainer.tsx",
                  "exportName": "SkeletonContainer"
               }
            ],
            "parsed": {
               "props": {
                  "width": {
                     "name": "width",
                     "type": "string",
                     "multipleTypes": true,
                     "default": "100%",
                     "parent": "SkeletonContainerProps"
                  },
                  "height": {
                     "name": "height",
                     "type": "string",
                     "multipleTypes": true,
                     "default": "100%",
                     "parent": "SkeletonContainerProps"
                  },
                  "preserveAspectRatio": {
                     "name": "preserveAspectRatio",
                     "type": "string",
                     "default": "xMidYMid meet",
                     "parent": "SkeletonContainerProps"
                  },
                  "clipId": {
                     "name": "clipId",
                     "type": "string",
                     "parent": "SkeletonContainerProps"
                  },
                  "gradientId": {
                     "name": "gradientId",
                     "type": "string",
                     "parent": "SkeletonContainerProps"
                  },
                  "animateId": {
                     "name": "animateId",
                     "type": "string",
                     "parent": "SkeletonContainerProps"
                  },
                  "backgroundColor": {
                     "name": "backgroundColor",
                     "type": "string",
                     "default": "#e5ebed",
                     "parent": "SkeletonContainerProps"
                  },
                  "backgroundOpacity": {
                     "name": "backgroundOpacity",
                     "type": "number",
                     "default": 1,
                     "parent": "SkeletonContainerProps"
                  },
                  "animate": {
                     "name": "animate",
                     "type": "boolean",
                     "default": false,
                     "parent": "SkeletonContainerProps"
                  },
                  "speed": {
                     "name": "speed",
                     "type": "string",
                     "multipleTypes": true,
                     "default": 2,
                     "parent": "SkeletonContainerProps"
                  },
                  "foregroundColor": {
                     "name": "foregroundColor",
                     "type": "string",
                     "default": "#f7f9fa",
                     "parent": "SkeletonContainerProps"
                  },
                  "foregroundOpacity": {
                     "name": "foregroundOpacity",
                     "type": "number",
                     "default": 1,
                     "parent": "SkeletonContainerProps"
                  },
                  "svgWidth": {
                     "name": "svgWidth",
                     "type": "string",
                     "multipleTypes": true,
                     "default": "100% as string | number",
                     "parent": "SkeletonContainerProps"
                  },
                  "svgHeight": {
                     "name": "svgHeight",
                     "type": "string",
                     "multipleTypes": true,
                     "default": "100% as string | number",
                     "parent": "SkeletonContainerProps"
                  },
                  "ariaLabel": {
                     "name": "ariaLabel",
                     "type": "string",
                     "default": "Loading component...",
                     "parent": "SkeletonContainerProps"
                  },
                  "className": {
                     "name": "className",
                     "type": "string",
                     "parent": "SkeletonContainerProps"
                  },
                  "testId": {
                     "name": "testId",
                     "type": "string",
                     "default": "cf-ui-skeleton-form",
                     "parent": "SkeletonContainerProps"
                  },
                  "children": {
                     "name": "children",
                     "type": "array",
                     "items": {
                        "type": "Node"
                     }
                  }
               }
            }
         },
         "SkeletonDisplayText": {
            "packageName": "@contentful/forma-36-react-components",
            "exportedName": "SkeletonDisplayText",
            "relativePath": "packages/forma-36-react-components/src/components/Skeleton/SkeletonDisplayText/SkeletonDisplayText.tsx",
            "importedName": "SkeletonDisplayText",
            "resolved": [
               {
                  "relativePath": "packages/forma-36-react-components/src/index.ts",
                  "exportName": "SkeletonDisplayText"
               },
               {
                  "relativePath": "packages/forma-36-react-components/src/components/Skeleton/SkeletonDisplayText/SkeletonDisplayText.tsx",
                  "exportName": "SkeletonDisplayText"
               }
            ],
            "parsed": {
               "props": {
                  "numberOfLines": {
                     "name": "numberOfLines",
                     "type": "number",
                     "default": 1,
                     "parent": "SkeletonTextProps"
                  },
                  "offsetTop": {
                     "name": "offsetTop",
                     "type": "string",
                     "multipleTypes": true,
                     "default": 0,
                     "parent": "SkeletonTextProps"
                  },
                  "offsetLeft": {
                     "name": "offsetLeft",
                     "type": "string",
                     "multipleTypes": true,
                     "default": 0,
                     "parent": "SkeletonTextProps"
                  },
                  "lineHeight": {
                     "name": "lineHeight",
                     "type": "string",
                     "multipleTypes": true,
                     "default": 21,
                     "parent": "SkeletonTextProps"
                  },
                  "marginBottom": {
                     "name": "marginBottom",
                     "type": "string",
                     "multipleTypes": true,
                     "default": 20,
                     "parent": "SkeletonTextProps"
                  },
                  "width": {
                     "name": "width",
                     "type": "string",
                     "multipleTypes": true,
                     "default": 100,
                     "parent": "SkeletonTextProps"
                  }
               }
            }
         },
         "SkeletonText": {
            "packageName": "@contentful/forma-36-react-components",
            "exportedName": "SkeletonText",
            "relativePath": "packages/forma-36-react-components/src/components/Skeleton/SkeletonText/SkeletonText.tsx",
            "importedName": "SkeletonText",
            "resolved": [
               {
                  "relativePath": "packages/forma-36-react-components/src/index.ts",
                  "exportName": "SkeletonText"
               },
               {
                  "relativePath": "packages/forma-36-react-components/src/components/Skeleton/SkeletonText/SkeletonText.tsx",
                  "exportName": "SkeletonText"
               }
            ],
            "parsed": {
               "props": {
                  "numberOfLines": {
                     "name": "numberOfLines",
                     "type": "number",
                     "default": 1,
                     "parent": "SkeletonTextProps"
                  },
                  "offsetTop": {
                     "name": "offsetTop",
                     "type": "string",
                     "multipleTypes": true,
                     "default": 0,
                     "parent": "SkeletonTextProps"
                  },
                  "offsetLeft": {
                     "name": "offsetLeft",
                     "type": "string",
                     "multipleTypes": true,
                     "default": 0,
                     "parent": "SkeletonTextProps"
                  },
                  "lineHeight": {
                     "name": "lineHeight",
                     "type": "string",
                     "multipleTypes": true,
                     "default": 21,
                     "parent": "SkeletonTextProps"
                  },
                  "marginBottom": {
                     "name": "marginBottom",
                     "type": "string",
                     "multipleTypes": true,
                     "default": 20,
                     "parent": "SkeletonTextProps"
                  },
                  "width": {
                     "name": "width",
                     "type": "string",
                     "multipleTypes": true,
                     "parent": "SkeletonTextProps"
                  }
               }
            }
         },
         "SkeletonImage": {
            "packageName": "@contentful/forma-36-react-components",
            "exportedName": "SkeletonImage",
            "relativePath": "packages/forma-36-react-components/src/components/Skeleton/SkeletonImage/SkeletonImage.tsx",
            "importedName": "SkeletonImage",
            "resolved": [
               {
                  "relativePath": "packages/forma-36-react-components/src/index.ts",
                  "exportName": "SkeletonImage"
               },
               {
                  "relativePath": "packages/forma-36-react-components/src/components/Skeleton/SkeletonImage/SkeletonImage.tsx",
                  "exportName": "SkeletonImage"
               }
            ],
            "parsed": {
               "props": {
                  "width": {
                     "name": "width",
                     "type": "string",
                     "multipleTypes": true,
                     "default": 70,
                     "parent": "SkeletonImageProps"
                  },
                  "height": {
                     "name": "height",
                     "type": "string",
                     "multipleTypes": true,
                     "default": 70,
                     "parent": "SkeletonImageProps"
                  },
                  "radiusX": {
                     "name": "radiusX",
                     "type": "string",
                     "multipleTypes": true,
                     "default": 0,
                     "parent": "SkeletonImageProps"
                  },
                  "radiusY": {
                     "name": "radiusY",
                     "type": "string",
                     "multipleTypes": true,
                     "default": 0,
                     "parent": "SkeletonImageProps"
                  },
                  "offsetLeft": {
                     "name": "offsetLeft",
                     "type": "string",
                     "multipleTypes": true,
                     "parent": "SkeletonImageProps"
                  },
                  "offsetTop": {
                     "name": "offsetTop",
                     "type": "string",
                     "multipleTypes": true,
                     "parent": "SkeletonImageProps"
                  },
                  "testId": {
                     "name": "testId",
                     "type": "string",
                     "default": "cf-ui-skeleton-image",
                     "parent": "SkeletonImageProps"
                  }
               }
            }
         },
         "SkeletonRow": {
            "packageName": "@contentful/forma-36-react-components",
            "exportedName": "SkeletonRow",
            "relativePath": "packages/forma-36-react-components/src/components/Skeleton/SkeletonRow/SkeletonRow.tsx",
            "importedName": "SkeletonRow",
            "resolved": [
               {
                  "relativePath": "packages/forma-36-react-components/src/index.ts",
                  "exportName": "SkeletonRow"
               },
               {
                  "relativePath": "packages/forma-36-react-components/src/components/Skeleton/SkeletonRow/SkeletonRow.tsx",
                  "exportName": "SkeletonRow"
               }
            ],
            "parsed": {
               "props": {
                  "rowCount": {
                     "name": "rowCount",
                     "type": "number",
                     "description": "Defines the number of rows to be rendered",
                     "parent": "SkeletonRowProps"
                  },
                  "columnCount": {
                     "name": "columnCount",
                     "type": "number",
                     "description": "Defines the number of columns to be rendered",
                     "parent": "SkeletonRowProps"
                  }
               }
            }
         },
         "SkeletonTableCell": {
            "packageName": "@contentful/forma-36-react-components",
            "exportedName": "SkeletonTableCell",
            "relativePath": "packages/forma-36-react-components/src/components/Skeleton/SkeletonRow/SkeletonTableCell/SkeletonTableCell.tsx",
            "importedName": "SkeletonTableCell",
            "resolved": [
               {
                  "relativePath": "packages/forma-36-react-components/src/index.ts",
                  "exportName": "SkeletonTableCell"
               },
               {
                  "relativePath": "packages/forma-36-react-components/src/components/Skeleton/SkeletonRow/SkeletonTableCell/SkeletonTableCell.tsx",
                  "exportName": "SkeletonTableCell"
               }
            ],
            "parsed": {
               "error": "No matching component found"
            }
         },
         "Tabs": {
            "packageName": "@contentful/forma-36-react-components",
            "exportedName": "Tabs",
            "relativePath": "packages/forma-36-react-components/src/components/Tabs/Tabs.tsx",
            "importedName": "Tabs",
            "resolved": [
               {
                  "relativePath": "packages/forma-36-react-components/src/index.ts",
                  "exportName": "Tabs"
               },
               {
                  "relativePath": "packages/forma-36-react-components/src/components/Tabs/Tabs.tsx",
                  "exportName": "Tabs"
               }
            ],
            "parsed": {
               "props": {
                  "role": {
                     "name": "role",
                     "type": "string",
                     "enum": [
                        "navigation",
                        "tablist"
                     ],
                     "default": "tablist",
                     "parent": "TabsProps"
                  },
                  "style": {
                     "name": "style",
                     "type": "object",
                     "parent": "TabsProps"
                  },
                  "className": {
                     "name": "className",
                     "type": "string",
                     "parent": "TabsProps"
                  },
                  "withDivider": {
                     "name": "withDivider",
                     "type": "boolean",
                     "default": false,
                     "parent": "TabsProps"
                  },
                  "testId": {
                     "name": "testId",
                     "type": "string",
                     "default": "cf-ui-tabs",
                     "parent": "TabsProps"
                  },
                  "children": {
                     "name": "children",
                     "type": "array",
                     "items": {
                        "type": "Node"
                     }
                  }
               }
            }
         },
         "Tab": {
            "packageName": "@contentful/forma-36-react-components",
            "exportedName": "Tab",
            "relativePath": "packages/forma-36-react-components/src/components/Tabs/Tab.tsx",
            "importedName": "Tab",
            "resolved": [
               {
                  "relativePath": "packages/forma-36-react-components/src/index.ts",
                  "exportName": "Tab"
               },
               {
                  "relativePath": "packages/forma-36-react-components/src/components/Tabs/Tab.tsx",
                  "exportName": "Tab"
               }
            ],
            "parsed": {
               "props": {
                  "id": {
                     "name": "id",
                     "type": "string",
                     "parent": "TabProps"
                  },
                  "onSelect": {
                     "name": "onSelect",
                     "type": "Event",
                     "parent": "TabProps"
                  },
                  "selected": {
                     "name": "selected",
                     "type": "boolean",
                     "default": false,
                     "parent": "TabProps"
                  },
                  "href": {
                     "name": "href",
                     "type": "string",
                     "parent": "TabProps"
                  },
                  "target": {
                     "name": "target",
                     "type": "string",
                     "parent": "TabProps"
                  },
                  "disabled": {
                     "name": "disabled",
                     "type": "boolean",
                     "default": false,
                     "parent": "TabProps"
                  },
                  "tabIndex": {
                     "name": "tabIndex",
                     "type": "number",
                     "default": 0,
                     "parent": "TabProps"
                  },
                  "style": {
                     "name": "style",
                     "type": "object",
                     "parent": "TabProps"
                  },
                  "className": {
                     "name": "className",
                     "type": "string",
                     "parent": "TabProps"
                  },
                  "testId": {
                     "name": "testId",
                     "type": "string",
                     "default": "cf-ui-tab",
                     "parent": "TabProps"
                  },
                  "children": {
                     "name": "children",
                     "type": "array",
                     "items": {
                        "type": "Node"
                     }
                  }
               }
            }
         },
         "TabPanel": {
            "packageName": "@contentful/forma-36-react-components",
            "exportedName": "TabPanel",
            "relativePath": "packages/forma-36-react-components/src/components/Tabs/TabPanel.tsx",
            "importedName": "TabPanel",
            "resolved": [
               {
                  "relativePath": "packages/forma-36-react-components/src/index.ts",
                  "exportName": "TabPanel"
               },
               {
                  "relativePath": "packages/forma-36-react-components/src/components/Tabs/TabPanel.tsx",
                  "exportName": "TabPanel"
               }
            ],
            "parsed": {
               "props": {
                  "id": {
                     "name": "id",
                     "type": "string",
                     "parent": "TabPanelProps"
                  },
                  "className": {
                     "name": "className",
                     "type": "string",
                     "parent": "TabPanelProps"
                  },
                  "testId": {
                     "name": "testId",
                     "type": "string",
                     "default": "cf-ui-tab-panel",
                     "parent": "TabPanelProps"
                  },
                  "style": {
                     "name": "style",
                     "type": "object",
                     "parent": "TabPanelProps"
                  },
                  "children": {
                     "name": "children",
                     "type": "array",
                     "items": {
                        "type": "Node"
                     }
                  }
               }
            }
         },
         "Typography": {
            "packageName": "@contentful/forma-36-react-components",
            "exportedName": "Typography",
            "relativePath": "packages/forma-36-react-components/src/components/Typography/Typography/Typography.tsx",
            "importedName": "Typography",
            "resolved": [
               {
                  "relativePath": "packages/forma-36-react-components/src/index.ts",
                  "exportName": "Typography"
               },
               {
                  "relativePath": "packages/forma-36-react-components/src/components/Typography/Typography/Typography.tsx",
                  "exportName": "Typography"
               }
            ],
            "parsed": {
               "props": {
                  "className": {
                     "name": "className",
                     "type": "string",
                     "parent": "TypographyProps"
                  },
                  "style": {
                     "name": "style",
                     "type": "object",
                     "parent": "TypographyProps"
                  },
                  "testId": {
                     "name": "testId",
                     "type": "string",
                     "default": "cf-ui-text-container",
                     "parent": "TypographyProps"
                  },
                  "children": {
                     "name": "children",
                     "type": "array",
                     "items": {
                        "type": "Node"
                     }
                  }
               }
            }
         },
         "EntityList": {
            "packageName": "@contentful/forma-36-react-components",
            "exportedName": "EntityList",
            "relativePath": "packages/forma-36-react-components/src/components/EntityList/EntityList.tsx",
            "importedName": "EntityList",
            "resolved": [
               {
                  "relativePath": "packages/forma-36-react-components/src/index.ts",
                  "exportName": "EntityList"
               },
               {
                  "relativePath": "packages/forma-36-react-components/src/components/EntityList/EntityList.tsx",
                  "exportName": "EntityList"
               }
            ],
            "parsed": {
               "props": {
                  "className": {
                     "name": "className",
                     "type": "string",
                     "description": "Class names to be appended to the className prop of the component",
                     "parent": "EntityListProps"
                  },
                  "children": {
                     "name": "children",
                     "type": "array",
                     "items": {
                        "type": "Node"
                     },
                     "description": "Child nodes to be rendered in the component",
                     "parent": "EntityListProps"
                  },
                  "testId": {
                     "name": "testId",
                     "type": "string",
                     "default": "cf-ui-entity-list",
                     "description": "An ID used for testing purposes applied as a data attribute (data-test-id)",
                     "parent": "EntityListProps"
                  },
                  "ref": {
                     "name": "ref",
                     "type": "Event",
                     "multipleTypes": true,
                     "parent": "RefAttributes"
                  },
                  "key": {
                     "name": "key",
                     "type": "string",
                     "multipleTypes": true,
                     "parent": "Attributes"
                  }
               }
            }
         },
         "EntityListItem": {
            "packageName": "@contentful/forma-36-react-components",
            "exportedName": "EntityListItem",
            "relativePath": "packages/forma-36-react-components/src/components/EntityList/EntityListItem/EntityListItem.tsx",
            "importedName": "EntityListItem",
            "resolved": [
               {
                  "relativePath": "packages/forma-36-react-components/src/index.ts",
                  "exportName": "EntityListItem"
               },
               {
                  "relativePath": "packages/forma-36-react-components/src/components/EntityList/EntityListItem/EntityListItem.tsx",
                  "exportName": "EntityListItem"
               }
            ],
            "parsed": {
               "props": {
                  "title": {
                     "name": "title",
                     "type": "string",
                     "description": "The title of the entity",
                     "parent": "EntityListItemProps"
                  },
                  "description": {
                     "name": "description",
                     "type": "string",
                     "description": "The description of the entity",
                     "parent": "EntityListItemProps"
                  },
                  "contentType": {
                     "name": "contentType",
                     "type": "string",
                     "description": "The content type of the entity",
                     "parent": "EntityListItemProps"
                  },
                  "status": {
                     "name": "status",
                     "type": "string",
                     "enum": [
                        "archived",
                        "changed",
                        "draft",
                        "published"
                     ],
                     "description": "The publish status of the entry",
                     "parent": "EntityListItemProps"
                  },
                  "withThumbnail": {
                     "name": "withThumbnail",
                     "type": "boolean",
                     "default": false,
                     "description": "A boolean used to render the Thumbnail or not",
                     "parent": "EntityListItemProps"
                  },
                  "thumbnailUrl": {
                     "name": "thumbnailUrl",
                     "type": "string",
                     "description": "The URL of the entitys preview thumbnail. Use 46px x 46px images for best results",
                     "parent": "EntityListItemProps"
                  },
                  "thumbnailAltText": {
                     "name": "thumbnailAltText",
                     "type": "string",
                     "description": "The alt text for the thumbnail",
                     "parent": "EntityListItemProps"
                  },
                  "dropdownListElements": {
                     "name": "dropdownListElements",
                     "type": "array",
                     "items": {
                        "type": "Node"
                     },
                     "multipleTypes": true,
                     "description": "The DropdownList elements used to render actions for the component",
                     "parent": "EntityListItemProps"
                  },
                  "withDragHandle": {
                     "name": "withDragHandle",
                     "type": "boolean",
                     "description": "Renders a drag handle for the component for use in drag and drop contexts",
                     "parent": "EntityListItemProps"
                  },
                  "isDragActive": {
                     "name": "isDragActive",
                     "type": "boolean",
                     "description": "Applies styling for when the component is actively being dragged by the user",
                     "parent": "EntityListItemProps"
                  },
                  "cardDragHandleComponent": {
                     "name": "cardDragHandleComponent",
                     "type": "array",
                     "items": {
                        "type": "Node"
                     },
                     "description": "Prop to pass a custom CardDragHandle component to for use in drag and drop contexts",
                     "parent": "EntityListItemProps"
                  },
                  "cardDragHandleProps": {
                     "name": "cardDragHandleProps",
                     "type": "unknown",
                     "description": "Props to pass down to the default CardDragHandle component (does not work with cardDragHandleComponent prop)",
                     "parent": "EntityListItemProps"
                  },
                  "entityType": {
                     "name": "entityType",
                     "type": "string",
                     "enum": [
                        "Entry",
                        "Asset",
                        "entry",
                        "asset",
                        "Release"
                     ],
                     "default": "entry",
                     "description": "An entity can either be an Entry, an Asset or a Release. This prop will apply styling based on if the entity is an asset, a release or an entry  Note: entry and asset are @deprecated but supported in v1.x for backwards compatibility",
                     "parent": "EntityListItemProps"
                  },
                  "isLoading": {
                     "name": "isLoading",
                     "type": "boolean",
                     "description": "Loading state for the component - when true will display loading feedback to the user",
                     "parent": "EntityListItemProps"
                  },
                  "onClick": {
                     "name": "onClick",
                     "type": "Event",
                     "description": "The action to be performed on click of the EntryCard",
                     "parent": "EntityListItemProps"
                  },
                  "href": {
                     "name": "href",
                     "type": "string",
                     "description": "The href for the component. Will render the card as an a element for native browser link handling",
                     "parent": "EntityListItemProps"
                  },
                  "className": {
                     "name": "className",
                     "type": "string",
                     "description": "Class names to be appended to the className prop of the component",
                     "parent": "EntityListItemProps"
                  },
                  "testId": {
                     "name": "testId",
                     "type": "string",
                     "default": "cf-ui-entity-list-item",
                     "description": "An ID used for testing purposes applied as a data attribute (data-test-id)",
                     "parent": "EntityListItemProps"
                  },
                  "isActionsDisabled": {
                     "name": "isActionsDisabled",
                     "type": "boolean",
                     "default": false,
                     "description": "A boolean used to disable the CardActions",
                     "parent": "EntityListItemProps"
                  }
               }
            }
         },
         "EmptyState": {
            "packageName": "@contentful/forma-36-react-components",
            "exportedName": "EmptyState",
            "relativePath": "packages/forma-36-react-components/src/components/EmptyState/EmptyState.tsx",
            "importedName": "EmptyState",
            "resolved": [
               {
                  "relativePath": "packages/forma-36-react-components/src/index.ts",
                  "exportName": "EmptyState"
               },
               {
                  "relativePath": "packages/forma-36-react-components/src/components/EmptyState/EmptyState.tsx",
                  "exportName": "EmptyState"
               }
            ],
            "parsed": {
               "props": {
                  "className": {
                     "name": "className",
                     "type": "string",
                     "description": "Class names to be appended to the className prop of the component",
                     "parent": "EmptyStateProps"
                  },
                  "children": {
                     "name": "children",
                     "type": "array",
                     "items": {
                        "type": "Node"
                     },
                     "description": "Child nodes to be rendered in the component",
                     "parent": "EmptyStateProps"
                  },
                  "testId": {
                     "name": "testId",
                     "type": "string",
                     "default": "cf-ui-empty-state",
                     "description": "An ID used for testing purposes applied as a data attribute (data-test-id)",
                     "parent": "EmptyStateProps"
                  },
                  "imageProps": {
                     "name": "imageProps",
                     "type": "unknown",
                     "description": "Props for imageProps block",
                     "parent": "EmptyStateProps"
                  },
                  "customImageElement": {
                     "name": "customImageElement",
                     "type": "Node",
                     "description": "As alternative,",
                     "parent": "EmptyStateProps"
                  },
                  "headingProps": {
                     "name": "headingProps",
                     "type": "unknown",
                     "description": "Heading text and semantic element type",
                     "parent": "EmptyStateProps"
                  },
                  "descriptionProps": {
                     "name": "descriptionProps",
                     "type": "unknown",
                     "description": "Description text and semantic element type",
                     "parent": "EmptyStateProps"
                  }
               }
            },
            "overrides": {
               "props": {
                  "headingProps": {
                     "source": "example",
                     "relativePath": "packages/forma-36-react-components/src/components/EmptyState/EmptyState.stories.tsx",
                     "prev": {
                        "type": "unknown"
                     },
                     "new": {
                        "type": "object"
                     }
                  },
                  "descriptionProps": {
                     "source": "example",
                     "relativePath": "packages/forma-36-react-components/src/components/EmptyState/EmptyState.stories.tsx",
                     "prev": {
                        "type": "unknown"
                     },
                     "new": {
                        "type": "object"
                     }
                  },
                  "imageProps": {
                     "source": "example",
                     "relativePath": "packages/forma-36-react-components/src/components/EmptyState/EmptyState.stories.tsx",
                     "prev": {
                        "type": "unknown"
                     },
                     "new": {
                        "type": "object"
                     }
                  }
               }
            }
         },
         "Switch": {
            "packageName": "@contentful/forma-36-react-components",
            "exportedName": "Switch",
            "relativePath": "packages/forma-36-react-components/src/components/Switch/Switch.tsx",
            "importedName": "Switch",
            "resolved": [
               {
                  "relativePath": "packages/forma-36-react-components/src/index.ts",
                  "exportName": "Switch"
               },
               {
                  "relativePath": "packages/forma-36-react-components/src/components/Switch/Switch.tsx",
                  "exportName": "Switch"
               }
            ],
            "parsed": {
               "props": {
                  "onToggle": {
                     "name": "onToggle",
                     "type": "Event",
                     "parent": "SwitchProps"
                  },
                  "isChecked": {
                     "name": "isChecked",
                     "type": "boolean",
                     "parent": "SwitchProps"
                  },
                  "isDisabled": {
                     "name": "isDisabled",
                     "type": "boolean",
                     "parent": "SwitchProps"
                  },
                  "labelText": {
                     "name": "labelText",
                     "type": "string",
                     "parent": "SwitchProps"
                  },
                  "className": {
                     "name": "className",
                     "type": "string",
                     "parent": "SwitchProps"
                  },
                  "id": {
                     "name": "id",
                     "type": "string",
                     "parent": "SwitchProps"
                  }
               }
            }
         },
         "Workbench": {
            "packageName": "@contentful/forma-36-react-components",
            "exportedName": "Workbench",
            "relativePath": "packages/forma-36-react-components/src/components/Workbench/Workbench.tsx",
            "importedName": "Workbench",
            "resolved": [
               {
                  "relativePath": "packages/forma-36-react-components/src/index.ts",
                  "exportName": "Workbench"
               },
               {
                  "relativePath": "packages/forma-36-react-components/src/components/Workbench/Workbench.tsx",
                  "exportName": "Workbench"
               }
            ],
            "parsed": {
               "props": {
                  "className": {
                     "name": "className",
                     "type": "string",
                     "description": "Class names to be appended to the className prop of the component",
                     "parent": "WorkbenchProps"
                  },
                  "children": {
                     "name": "children",
                     "type": "array",
                     "items": {
                        "type": "Node"
                     },
                     "description": "Child nodes to be rendered in the component",
                     "parent": "WorkbenchProps"
                  },
                  "testId": {
                     "name": "testId",
                     "type": "string",
                     "default": "cf-ui-workbench-content",
                     "description": "An ID used for testing purposes applied as a data attribute (data-test-id)",
                     "parent": "WorkbenchProps"
                  }
               }
            }
         },
         "DateTime": {
            "packageName": "@contentful/forma-36-react-components",
            "exportedName": "DateTime",
            "relativePath": "packages/forma-36-react-components/src/components/DateTime/DateTime/DateTime.tsx",
            "importedName": "DateTime",
            "resolved": [
               {
                  "relativePath": "packages/forma-36-react-components/src/index.ts",
                  "exportName": "DateTime"
               },
               {
                  "relativePath": "packages/forma-36-react-components/src/components/DateTime/index.ts",
                  "exportName": "DateTime"
               },
               {
                  "relativePath": "packages/forma-36-react-components/src/components/DateTime/DateTime/DateTime.tsx",
                  "exportName": "DateTime"
               }
            ],
            "parsed": {
               "props": {
                  "date": {
                     "name": "date",
                     "type": "unknown",
                     "description": "The date to display as a JS Date, an ISO8601 Timestamp, or Unix Epoch Milliseconds",
                     "parent": "DateTimeProps"
                  },
                  "format": {
                     "name": "format",
                     "type": "string",
                     "enum": [
                        "FULL",
                        "DATE_ONLY",
                        "TIME_ONLY",
                        "WEEKDAY_DATE"
                     ],
                     "default": "FULL",
                     "description": "Which display format to use",
                     "parent": "DateTimeProps"
                  },
                  "className": {
                     "name": "className",
                     "type": "string",
                     "parent": "DateTimeProps"
                  },
                  "testId": {
                     "name": "testId",
                     "type": "string",
                     "parent": "DateTimeProps"
                  }
               }
            }
         },
         "RelativeDate": {
            "packageName": "@contentful/forma-36-react-components",
            "exportedName": "RelativeDate",
            "relativePath": "packages/forma-36-react-components/src/components/DateTime/RelativeDate/RelativeDate.tsx",
            "importedName": "RelativeDate",
            "resolved": [
               {
                  "relativePath": "packages/forma-36-react-components/src/index.ts",
                  "exportName": "RelativeDate"
               },
               {
                  "relativePath": "packages/forma-36-react-components/src/components/DateTime/index.ts",
                  "exportName": "RelativeDate"
               },
               {
                  "relativePath": "packages/forma-36-react-components/src/components/DateTime/RelativeDate/RelativeDate.tsx",
                  "exportName": "RelativeDate"
               }
            ],
            "parsed": {
               "props": {
                  "date": {
                     "name": "date",
                     "type": "unknown",
                     "description": "the date to represent",
                     "parent": "RelativeDateProps"
                  },
                  "baseDate": {
                     "name": "baseDate",
                     "type": "string",
                     "multipleTypes": true,
                     "default": "now",
                     "description": "(optional) other date to compare against",
                     "parent": "RelativeDateProps"
                  },
                  "className": {
                     "name": "className",
                     "type": "string",
                     "parent": "RelativeDateProps"
                  },
                  "testId": {
                     "name": "testId",
                     "type": "string",
                     "parent": "RelativeDateProps"
                  }
               }
            }
         }
      }
   },
   "examples": {
      "packages/forma-36-react-components/src/components/Accordion/Accordion.stories.tsx": {
         "mode": "dynamic",
         "exportsFound": [
            "default",
            "basic"
         ],
         "examples": [
            {
               "name": "Basic",
               "status": "Imported",
               "origin": "base",
               "id": "(alpha)__Accordion__basic__1",
               "componentId": "ContentfulForma_36ReactComponents_Subheading"
            },
            {
               "name": "Icon",
               "status": "Limited",
               "origin": "node",
               "id": "s_b35afe1344bd7795c09710988a6f09be",
               "componentId": "ContentfulForma_36ReactComponents_Icon"
            },
            {
               "name": "Basic",
               "status": "Imported",
               "origin": "base",
               "id": "(alpha)__Accordion__basic__2",
               "componentId": "ContentfulForma_36ReactComponents_Typography"
            },
            {
               "name": "Paragraph",
               "status": "Limited",
               "origin": "node",
               "id": "s_1e445819e2807a32940ace6561b9a6cc",
               "componentId": "ContentfulForma_36ReactComponents_Paragraph"
            },
            {
               "name": "Basic",
               "status": "Duplicate",
               "origin": "base",
               "id": "(alpha)/Accordion/basic__3",
               "componentId": "ContentfulForma_36ReactComponents_Subheading"
            },
            {
               "name": "Icon",
               "status": "Duplicate",
               "origin": "node",
               "componentId": "ContentfulForma_36ReactComponents_Icon"
            },
            {
               "name": "Basic",
               "status": "Duplicate",
               "origin": "base",
               "id": "(alpha)/Accordion/basic__4",
               "componentId": "ContentfulForma_36ReactComponents_Typography"
            },
            {
               "name": "Paragraph",
               "status": "Duplicate",
               "origin": "node",
               "componentId": "ContentfulForma_36ReactComponents_Paragraph"
            },
            {
               "name": "Basic",
               "status": "Duplicate",
               "origin": "base",
               "id": "(alpha)/Accordion/basic__5",
               "componentId": "ContentfulForma_36ReactComponents_Subheading"
            },
            {
               "name": "Icon",
               "status": "Duplicate",
               "origin": "node",
               "componentId": "ContentfulForma_36ReactComponents_Icon"
            },
            {
               "name": "Basic",
               "status": "Duplicate",
               "origin": "base",
               "id": "(alpha)/Accordion/basic__6",
               "componentId": "ContentfulForma_36ReactComponents_Typography"
            },
            {
               "name": "Paragraph",
               "status": "Duplicate",
               "origin": "node",
               "componentId": "ContentfulForma_36ReactComponents_Paragraph"
            }
         ]
      },
      "packages/forma-36-react-components/src/components/Asset/Asset.stories.tsx": {
         "mode": "dynamic",
         "exportsFound": [],
         "examples": [
            {
               "name": "default",
               "status": "Imported",
               "origin": "base",
               "id": "Components__Asset__default__1",
               "componentId": "ContentfulForma_36ReactComponents_Asset"
            },
            {
               "name": "with an image",
               "status": "Imported",
               "origin": "base",
               "id": "Components__Asset__with_an_image__1",
               "componentId": "ContentfulForma_36ReactComponents_Asset"
            },
            {
               "name": "with an archived image",
               "status": "Imported",
               "origin": "base",
               "id": "Components__Asset__with_an_archived_image__1",
               "componentId": "ContentfulForma_36ReactComponents_Asset"
            }
         ]
      },
      "packages/forma-36-react-components/src/components/Asset/AssetIcon/AssetIcon.stories.tsx": {
         "mode": "dynamic",
         "exportsFound": [],
         "examples": [
            {
               "name": "default",
               "status": "Imported",
               "origin": "base",
               "id": "Components__Asset__AssetIcon__default__1",
               "componentId": "ContentfulForma_36ReactComponents_AssetIcon"
            },
            {
               "name": "with type image",
               "status": "Imported",
               "origin": "base",
               "id": "Components__Asset__AssetIcon__with_type_image__1",
               "componentId": "ContentfulForma_36ReactComponents_AssetIcon"
            }
         ]
      },
      "packages/forma-36-react-components/src/components/Autocomplete/Autocomplete.stories.tsx": {
         "mode": "static",
         "exportsFound": [],
         "examples": [
            {
               "status": "UnknownComponent",
               "origin": "base"
            },
            {
               "status": "UnknownComponent",
               "origin": "base"
            }
         ]
      },
      "packages/forma-36-react-components/src/components/Button/Button.stories.tsx": {
         "mode": "dynamic",
         "exportsFound": [],
         "examples": [
            {
               "name": "Button",
               "status": "Imported",
               "origin": "base",
               "id": "Components__Button__Button__1",
               "componentId": "ContentfulForma_36ReactComponents_Button"
            }
         ]
      },
      "packages/forma-36-react-components/src/components/Card/AssetCard/AssetCard.stories.tsx": {
         "mode": "dynamic",
         "exportsFound": [],
         "examples": [
            {
               "name": "default",
               "status": "Imported",
               "origin": "base",
               "id": "Components__Card__AssetCard__default__1",
               "componentId": "ContentfulForma_36ReactComponents_AssetCard"
            },
            {
               "name": "with custom CardDragHandle",
               "status": "Imported",
               "origin": "base",
               "id": "Components__Card__AssetCard__with_custom_CardDragHandle__1",
               "componentId": "ContentfulForma_36ReactComponents_AssetCard"
            },
            {
               "name": "CardDragHandle",
               "status": "Limited",
               "origin": "node",
               "id": "s_a954290b3f9e774c4c1342e6395ad02e",
               "componentId": "ContentfulForma_36ReactComponents_CardDragHandle"
            },
            {
               "name": "with dropdownListElements",
               "status": "Imported",
               "origin": "base",
               "id": "Components__Card__AssetCard__with_dropdownListElements__1",
               "componentId": "ContentfulForma_36ReactComponents_AssetCard"
            },
            {
               "name": "DropdownList",
               "status": "Limited",
               "origin": "node",
               "id": "s_d617d5f3a4b03d28c513faefe6fd4253",
               "componentId": "ContentfulForma_36ReactComponents_DropdownList"
            },
            {
               "name": "Is Title DropdownListItem",
               "status": "Limited",
               "origin": "node",
               "id": "s_92623d59d7bd67ef5a187fa7944a4395",
               "componentId": "ContentfulForma_36ReactComponents_DropdownListItem"
            },
            {
               "name": "DropdownListItem",
               "status": "Limited",
               "origin": "node",
               "id": "s_ab7116af844954b3cdb69b39a9ffa1f7",
               "componentId": "ContentfulForma_36ReactComponents_DropdownListItem"
            },
            {
               "name": "DropdownListItem",
               "status": "Duplicate",
               "origin": "node",
               "componentId": "ContentfulForma_36ReactComponents_DropdownListItem"
            },
            {
               "name": "DropdownListItem",
               "status": "Duplicate",
               "origin": "node",
               "componentId": "ContentfulForma_36ReactComponents_DropdownListItem"
            },
            {
               "name": "DropdownList",
               "status": "Limited",
               "origin": "node",
               "id": "s_cb58f9498d997661426310b55edb5d1a",
               "componentId": "ContentfulForma_36ReactComponents_DropdownList"
            },
            {
               "name": "Is Title DropdownListItem",
               "status": "Duplicate",
               "origin": "node",
               "componentId": "ContentfulForma_36ReactComponents_DropdownListItem"
            },
            {
               "name": "DropdownListItem",
               "status": "Duplicate",
               "origin": "node",
               "componentId": "ContentfulForma_36ReactComponents_DropdownListItem"
            },
            {
               "name": "DropdownListItem",
               "status": "Duplicate",
               "origin": "node",
               "componentId": "ContentfulForma_36ReactComponents_DropdownListItem"
            },
            {
               "name": "DropdownListItem",
               "status": "Duplicate",
               "origin": "node",
               "componentId": "ContentfulForma_36ReactComponents_DropdownListItem"
            },
            {
               "name": "DropdownListItem",
               "status": "Duplicate",
               "origin": "node",
               "componentId": "ContentfulForma_36ReactComponents_DropdownListItem"
            }
         ]
      },
      "packages/forma-36-react-components/src/components/Card/Card.stories.tsx": {
         "mode": "dynamic",
         "exportsFound": [],
         "examples": [
            {
               "name": "default",
               "status": "Imported",
               "origin": "base",
               "id": "Components__Card__default__1",
               "componentId": "ContentfulForma_36ReactComponents_Card"
            },
            {
               "name": "with href and target",
               "status": "Imported",
               "origin": "base",
               "id": "Components__Card__with_href_and_target__1",
               "componentId": "ContentfulForma_36ReactComponents_Card"
            },
            {
               "name": "with onClick handler",
               "status": "Duplicate",
               "origin": "base",
               "id": "Components/Card/with onClick handler__1",
               "componentId": "ContentfulForma_36ReactComponents_Card"
            }
         ]
      },
      "packages/forma-36-react-components/src/components/Card/CardActions/CardActions.stories.tsx": {
         "mode": "dynamic",
         "exportsFound": [],
         "examples": [
            {
               "name": "default",
               "status": "Imported",
               "origin": "base",
               "id": "Components__Card__CardActions__default__1",
               "componentId": "ContentfulForma_36ReactComponents_CardActions"
            },
            {
               "name": "DropdownList",
               "status": "Limited",
               "origin": "node",
               "id": "s_00cc1e8addf501bd45f2555360e51e37",
               "componentId": "ContentfulForma_36ReactComponents_DropdownList"
            },
            {
               "name": "DropdownListItem",
               "status": "Duplicate",
               "origin": "node",
               "componentId": "ContentfulForma_36ReactComponents_DropdownListItem"
            },
            {
               "name": "DropdownListItem",
               "status": "Duplicate",
               "origin": "node",
               "componentId": "ContentfulForma_36ReactComponents_DropdownListItem"
            },
            {
               "name": "DropdownListItem",
               "status": "Duplicate",
               "origin": "node",
               "componentId": "ContentfulForma_36ReactComponents_DropdownListItem"
            },
            {
               "name": "with multiple lists",
               "status": "Imported",
               "origin": "base",
               "id": "Components__Card__CardActions__with_multiple_lists__1",
               "componentId": "ContentfulForma_36ReactComponents_CardActions"
            },
            {
               "name": "DropdownList",
               "status": "Duplicate",
               "origin": "node",
               "componentId": "ContentfulForma_36ReactComponents_DropdownList"
            },
            {
               "name": "DropdownListItem",
               "status": "Duplicate",
               "origin": "node",
               "componentId": "ContentfulForma_36ReactComponents_DropdownListItem"
            },
            {
               "name": "DropdownListItem",
               "status": "Duplicate",
               "origin": "node",
               "componentId": "ContentfulForma_36ReactComponents_DropdownListItem"
            },
            {
               "name": "DropdownListItem",
               "status": "Duplicate",
               "origin": "node",
               "componentId": "ContentfulForma_36ReactComponents_DropdownListItem"
            },
            {
               "name": "DropdownList",
               "status": "Duplicate",
               "origin": "node",
               "componentId": "ContentfulForma_36ReactComponents_DropdownList"
            },
            {
               "name": "DropdownListItem",
               "status": "Duplicate",
               "origin": "node",
               "componentId": "ContentfulForma_36ReactComponents_DropdownListItem"
            },
            {
               "name": "DropdownListItem",
               "status": "Duplicate",
               "origin": "node",
               "componentId": "ContentfulForma_36ReactComponents_DropdownListItem"
            },
            {
               "name": "DropdownListItem",
               "status": "Duplicate",
               "origin": "node",
               "componentId": "ContentfulForma_36ReactComponents_DropdownListItem"
            }
         ]
      },
      "packages/forma-36-react-components/src/components/Card/CardDragHandle/CardActions.stories.tsx": {
         "mode": "dynamic",
         "exportsFound": [],
         "examples": [
            {
               "name": "default",
               "status": "Imported",
               "origin": "base",
               "id": "Components__Card__CardDragHandle__default__1",
               "componentId": "ContentfulForma_36ReactComponents_CardDragHandle"
            }
         ]
      },
      "packages/forma-36-react-components/src/components/Card/EntryCard/EntryCard.stories.tsx": {
         "mode": "dynamic",
         "exportsFound": [],
         "examples": [
            {
               "name": "default",
               "status": "Imported",
               "origin": "base",
               "id": "Components__Card__EntryCard__default__1",
               "componentId": "ContentfulForma_36ReactComponents_EntryCard"
            },
            {
               "name": "DropdownList",
               "status": "Limited",
               "origin": "node",
               "id": "s_633ff9890a07edb4f917cf3941f4b379",
               "componentId": "ContentfulForma_36ReactComponents_DropdownList"
            },
            {
               "name": "Is Title DropdownListItem",
               "status": "Duplicate",
               "origin": "node",
               "componentId": "ContentfulForma_36ReactComponents_DropdownListItem"
            },
            {
               "name": "DropdownListItem",
               "status": "Limited",
               "origin": "node",
               "id": "s_d52328b684e3e195dd72a850fb0d02f0",
               "componentId": "ContentfulForma_36ReactComponents_DropdownListItem"
            },
            {
               "name": "DropdownListItem",
               "status": "Duplicate",
               "origin": "node",
               "componentId": "ContentfulForma_36ReactComponents_DropdownListItem"
            },
            {
               "name": "DropdownListItem",
               "status": "Duplicate",
               "origin": "node",
               "componentId": "ContentfulForma_36ReactComponents_DropdownListItem"
            },
            {
               "name": "DropdownList",
               "status": "Duplicate",
               "origin": "node",
               "componentId": "ContentfulForma_36ReactComponents_DropdownList"
            },
            {
               "name": "Is Title DropdownListItem",
               "status": "Duplicate",
               "origin": "node",
               "componentId": "ContentfulForma_36ReactComponents_DropdownListItem"
            },
            {
               "name": "DropdownListItem",
               "status": "Duplicate",
               "origin": "node",
               "componentId": "ContentfulForma_36ReactComponents_DropdownListItem"
            },
            {
               "name": "DropdownListItem",
               "status": "Duplicate",
               "origin": "node",
               "componentId": "ContentfulForma_36ReactComponents_DropdownListItem"
            },
            {
               "name": "DropdownListItem",
               "status": "Duplicate",
               "origin": "node",
               "componentId": "ContentfulForma_36ReactComponents_DropdownListItem"
            },
            {
               "name": "with custom CardDragHandle",
               "status": "Imported",
               "origin": "base",
               "id": "Components__Card__EntryCard__with_custom_CardDragHandle__1",
               "componentId": "ContentfulForma_36ReactComponents_EntryCard"
            },
            {
               "name": "CardDragHandle",
               "status": "Duplicate",
               "origin": "node",
               "componentId": "ContentfulForma_36ReactComponents_CardDragHandle"
            },
            {
               "name": "DropdownList",
               "status": "Duplicate",
               "origin": "node",
               "componentId": "ContentfulForma_36ReactComponents_DropdownList"
            },
            {
               "name": "Is Title DropdownListItem",
               "status": "Duplicate",
               "origin": "node",
               "componentId": "ContentfulForma_36ReactComponents_DropdownListItem"
            },
            {
               "name": "DropdownListItem",
               "status": "Duplicate",
               "origin": "node",
               "componentId": "ContentfulForma_36ReactComponents_DropdownListItem"
            },
            {
               "name": "DropdownListItem",
               "status": "Duplicate",
               "origin": "node",
               "componentId": "ContentfulForma_36ReactComponents_DropdownListItem"
            },
            {
               "name": "DropdownListItem",
               "status": "Duplicate",
               "origin": "node",
               "componentId": "ContentfulForma_36ReactComponents_DropdownListItem"
            },
            {
               "name": "DropdownList",
               "status": "Duplicate",
               "origin": "node",
               "componentId": "ContentfulForma_36ReactComponents_DropdownList"
            },
            {
               "name": "Is Title DropdownListItem",
               "status": "Duplicate",
               "origin": "node",
               "componentId": "ContentfulForma_36ReactComponents_DropdownListItem"
            },
            {
               "name": "DropdownListItem",
               "status": "Duplicate",
               "origin": "node",
               "componentId": "ContentfulForma_36ReactComponents_DropdownListItem"
            },
            {
               "name": "DropdownListItem",
               "status": "Duplicate",
               "origin": "node",
               "componentId": "ContentfulForma_36ReactComponents_DropdownListItem"
            },
            {
               "name": "DropdownListItem",
               "status": "Duplicate",
               "origin": "node",
               "componentId": "ContentfulForma_36ReactComponents_DropdownListItem"
            },
            {
               "name": "with thumbnailElement",
               "status": "Imported",
               "origin": "base",
               "id": "Components__Card__EntryCard__with_thumbnailElement__1",
               "componentId": "ContentfulForma_36ReactComponents_EntryCard"
            },
            {
               "name": "DropdownList",
               "status": "Duplicate",
               "origin": "node",
               "componentId": "ContentfulForma_36ReactComponents_DropdownList"
            },
            {
               "name": "DropdownListItem",
               "status": "Duplicate",
               "origin": "node",
               "componentId": "ContentfulForma_36ReactComponents_DropdownListItem"
            },
            {
               "name": "DropdownListItem",
               "status": "Duplicate",
               "origin": "node",
               "componentId": "ContentfulForma_36ReactComponents_DropdownListItem"
            },
            {
               "name": "DropdownListItem",
               "status": "Duplicate",
               "origin": "node",
               "componentId": "ContentfulForma_36ReactComponents_DropdownListItem"
            },
            {
               "name": "with auto-sizing",
               "status": "Imported",
               "origin": "base",
               "id": "Components__Card__EntryCard__with_auto-sizing__1",
               "componentId": "ContentfulForma_36ReactComponents_EntryCard"
            },
            {
               "name": "DropdownList",
               "status": "Duplicate",
               "origin": "node",
               "componentId": "ContentfulForma_36ReactComponents_DropdownList"
            },
            {
               "name": "DropdownListItem",
               "status": "Duplicate",
               "origin": "node",
               "componentId": "ContentfulForma_36ReactComponents_DropdownListItem"
            },
            {
               "name": "DropdownListItem",
               "status": "Duplicate",
               "origin": "node",
               "componentId": "ContentfulForma_36ReactComponents_DropdownListItem"
            },
            {
               "name": "DropdownListItem",
               "status": "Duplicate",
               "origin": "node",
               "componentId": "ContentfulForma_36ReactComponents_DropdownListItem"
            }
         ]
      },
      "packages/forma-36-react-components/src/components/Card/InlineEntryCard/InlineEntryCard.stories.tsx": {
         "mode": "dynamic",
         "exportsFound": [],
         "examples": [
            {
               "name": "default",
               "status": "Imported",
               "origin": "base",
               "id": "Components__Card__InlineEntryCard__default__1",
               "componentId": "ContentfulForma_36ReactComponents_InlineEntryCard"
            },
            {
               "name": "DropdownList",
               "status": "Duplicate",
               "origin": "node",
               "componentId": "ContentfulForma_36ReactComponents_DropdownList"
            },
            {
               "name": "DropdownListItem",
               "status": "Duplicate",
               "origin": "node",
               "componentId": "ContentfulForma_36ReactComponents_DropdownListItem"
            },
            {
               "name": "DropdownListItem",
               "status": "Duplicate",
               "origin": "node",
               "componentId": "ContentfulForma_36ReactComponents_DropdownListItem"
            },
            {
               "name": "DropdownListItem",
               "status": "Duplicate",
               "origin": "node",
               "componentId": "ContentfulForma_36ReactComponents_DropdownListItem"
            },
            {
               "name": "default",
               "status": "Imported",
               "origin": "base",
               "id": "Components__Card__InlineEntryCard__default__2",
               "componentId": "ContentfulForma_36ReactComponents_InlineEntryCard"
            },
            {
               "name": "DropdownList",
               "status": "Duplicate",
               "origin": "node",
               "componentId": "ContentfulForma_36ReactComponents_DropdownList"
            },
            {
               "name": "Is Title DropdownListItem",
               "status": "Duplicate",
               "origin": "node",
               "componentId": "ContentfulForma_36ReactComponents_DropdownListItem"
            },
            {
               "name": "DropdownListItem",
               "status": "Duplicate",
               "origin": "node",
               "componentId": "ContentfulForma_36ReactComponents_DropdownListItem"
            },
            {
               "name": "DropdownListItem",
               "status": "Duplicate",
               "origin": "node",
               "componentId": "ContentfulForma_36ReactComponents_DropdownListItem"
            },
            {
               "name": "DropdownListItem",
               "status": "Duplicate",
               "origin": "node",
               "componentId": "ContentfulForma_36ReactComponents_DropdownListItem"
            },
            {
               "name": "DropdownList",
               "status": "Duplicate",
               "origin": "node",
               "componentId": "ContentfulForma_36ReactComponents_DropdownList"
            },
            {
               "name": "Is Title DropdownListItem",
               "status": "Duplicate",
               "origin": "node",
               "componentId": "ContentfulForma_36ReactComponents_DropdownListItem"
            },
            {
               "name": "DropdownListItem",
               "status": "Duplicate",
               "origin": "node",
               "componentId": "ContentfulForma_36ReactComponents_DropdownListItem"
            },
            {
               "name": "DropdownListItem",
               "status": "Duplicate",
               "origin": "node",
               "componentId": "ContentfulForma_36ReactComponents_DropdownListItem"
            },
            {
               "name": "DropdownListItem",
               "status": "Duplicate",
               "origin": "node",
               "componentId": "ContentfulForma_36ReactComponents_DropdownListItem"
            }
         ]
      },
      "packages/forma-36-react-components/src/components/Checkbox/Checkbox.stories.tsx": {
         "mode": "dynamic",
         "exportsFound": [],
         "examples": [
            {
               "name": "default",
               "status": "Imported",
               "origin": "base",
               "id": "Components__Checkbox__default__1",
               "componentId": "ContentfulForma_36ReactComponents_Checkbox"
            }
         ]
      },
      "packages/forma-36-react-components/src/components/CheckboxField/CheckboxField.stories.tsx": {
         "mode": "dynamic",
         "exportsFound": [],
         "examples": [
            {
               "name": "default",
               "status": "Imported",
               "origin": "base",
               "id": "Components__CheckboxField__default__1",
               "componentId": "ContentfulForma_36ReactComponents_FieldGroup"
            },
            {
               "name": "CheckboxField",
               "status": "Imported",
               "origin": "node",
               "id": "s_ae4d1a2cabff9e1074549dc6a2195040",
               "componentId": "ContentfulForma_36ReactComponents_CheckboxField"
            },
            {
               "name": "CheckboxField",
               "status": "Imported",
               "origin": "node",
               "id": "s_0edf15c57892ae4815ff9b8896001c1f",
               "componentId": "ContentfulForma_36ReactComponents_CheckboxField"
            }
         ]
      },
      "packages/forma-36-react-components/src/components/CopyButton/CopyButton.stories.tsx": {
         "mode": "dynamic",
         "exportsFound": [],
         "examples": [
            {
               "name": "default",
               "status": "Imported",
               "origin": "base",
               "id": "Components__CopyButton__default__1",
               "componentId": "ContentfulForma_36ReactComponents_CopyButton"
            }
         ]
      },
      "packages/forma-36-react-components/src/components/DateTime/DateTime/DateTime.stories.tsx": {
         "mode": "dynamic",
         "exportsFound": [
            "default",
            "basic",
            "withOtherFormats"
         ],
         "examples": [
            {
               "name": "Basic",
               "status": "Imported",
               "origin": "base",
               "id": "Components__DateTime__DateTime__basic__1",
               "componentId": "ContentfulForma_36ReactComponents_DateTime"
            },
            {
               "name": "With Other Formats",
               "status": "Duplicate",
               "origin": "base",
               "id": "Components/DateTime/DateTime/withOtherFormats__1",
               "componentId": "ContentfulForma_36ReactComponents_DateTime"
            }
         ]
      },
      "packages/forma-36-react-components/src/components/DateTime/RelativeDate/RelativeDate.stories.tsx": {
         "mode": "dynamic",
         "exportsFound": [
            "default",
            "basic",
            "withBaseDate"
         ],
         "examples": [
            {
               "name": "Basic",
               "status": "Imported",
               "origin": "base",
               "id": "Components__DateTime__RelativeDate__basic__1",
               "componentId": "ContentfulForma_36ReactComponents_RelativeDate"
            },
            {
               "name": "With Base Date",
               "status": "Duplicate",
               "origin": "base",
               "id": "Components/DateTime/RelativeDate/withBaseDate__1",
               "componentId": "ContentfulForma_36ReactComponents_RelativeDate"
            }
         ]
      },
      "packages/forma-36-react-components/src/components/Dropdown/Dropdown.stories.tsx": {
         "mode": "dynamic",
         "exportsFound": [],
         "examples": [
            {
               "name": "default",
               "status": "Imported",
               "origin": "base",
               "id": "Components__Dropdown__default__1",
               "componentId": "ContentfulForma_36ReactComponents_Dropdown"
            },
            {
               "name": "Small Indicate Dropdown Button",
               "status": "Limited",
               "origin": "node",
               "id": "s_2edea9d4e0b0f67bf1dd84f6739d84d6",
               "componentId": "ContentfulForma_36ReactComponents_Button"
            },
            {
               "name": "DropdownList",
               "status": "Limited",
               "origin": "node",
               "id": "s_9643462c54898ccbc1234c04e0dfb010",
               "componentId": "ContentfulForma_36ReactComponents_DropdownList"
            },
            {
               "name": "Is Title DropdownListItem",
               "status": "Duplicate",
               "origin": "node",
               "componentId": "ContentfulForma_36ReactComponents_DropdownListItem"
            },
            {
               "name": "DropdownListItem",
               "status": "Duplicate",
               "origin": "node",
               "componentId": "ContentfulForma_36ReactComponents_DropdownListItem"
            },
            {
               "name": "Dropdown",
               "status": "Limited",
               "origin": "node",
               "id": "s_22a60cdbda9db5fbe5a574f086d33f1b",
               "componentId": "ContentfulForma_36ReactComponents_Dropdown"
            },
            {
               "name": "DropdownList",
               "status": "Limited",
               "origin": "node",
               "id": "s_2c3c3104bc2ac73e4005fa7871ff49a3",
               "componentId": "ContentfulForma_36ReactComponents_DropdownList"
            },
            {
               "name": "DropdownListItem",
               "status": "Duplicate",
               "origin": "node",
               "componentId": "ContentfulForma_36ReactComponents_DropdownListItem"
            },
            {
               "name": "Is Disabled DropdownListItem",
               "status": "Limited",
               "origin": "node",
               "id": "s_7e8e59120bdd92f3f1ea8d50ab082328",
               "componentId": "ContentfulForma_36ReactComponents_DropdownListItem"
            },
            {
               "name": "DropdownList",
               "status": "Limited",
               "origin": "node",
               "id": "s_8f61613aa9471f5f585dfb71a652dae7",
               "componentId": "ContentfulForma_36ReactComponents_DropdownList"
            },
            {
               "name": "DropdownListItem",
               "status": "Limited",
               "origin": "node",
               "id": "s_bd2e1e6fca5cd9c59e5b1bc54f734116",
               "componentId": "ContentfulForma_36ReactComponents_DropdownListItem"
            },
            {
               "name": "TextLink",
               "status": "Limited",
               "origin": "node",
               "id": "s_adc8a0eba708d04b21d74e233ed1220f",
               "componentId": "ContentfulForma_36ReactComponents_TextLink"
            },
            {
               "name": "scrollable",
               "status": "Imported",
               "origin": "base",
               "id": "Components__Dropdown__scrollable__1",
               "componentId": "ContentfulForma_36ReactComponents_Dropdown"
            },
            {
               "name": "Small Indicate Dropdown Button",
               "status": "Duplicate",
               "origin": "node",
               "componentId": "ContentfulForma_36ReactComponents_Button"
            },
            {
               "name": "DropdownList",
               "status": "Limited",
               "origin": "node",
               "id": "s_3194f70d184318ddc7bc500898fbaff0",
               "componentId": "ContentfulForma_36ReactComponents_DropdownList"
            },
            {
               "name": "DropdownListItem",
               "status": "Limited",
               "origin": "node",
               "id": "s_cdaafb700bba041912604eb7b4c03d5c",
               "componentId": "ContentfulForma_36ReactComponents_DropdownListItem"
            },
            {
               "name": "DropdownListItem",
               "status": "Limited",
               "origin": "node",
               "id": "s_f0de640e49ce153d2f65fa38c2124d64",
               "componentId": "ContentfulForma_36ReactComponents_DropdownListItem"
            },
            {
               "name": "DropdownListItem",
               "status": "Limited",
               "origin": "node",
               "id": "s_0b71f645c980e8439c445d2127441639",
               "componentId": "ContentfulForma_36ReactComponents_DropdownListItem"
            },
            {
               "name": "DropdownListItem",
               "status": "Limited",
               "origin": "node",
               "id": "s_98480438bb99df8ceffe8e4302620bc8",
               "componentId": "ContentfulForma_36ReactComponents_DropdownListItem"
            },
            {
               "name": "DropdownListItem",
               "status": "Limited",
               "origin": "node",
               "id": "s_9e668641069b1b589f626c1439d194d0",
               "componentId": "ContentfulForma_36ReactComponents_DropdownListItem"
            },
            {
               "name": "DropdownListItem",
               "status": "Limited",
               "origin": "node",
               "id": "s_9f852a4a9a366b33ea78f78f962cb41f",
               "componentId": "ContentfulForma_36ReactComponents_DropdownListItem"
            },
            {
               "name": "DropdownListItem",
               "status": "Limited",
               "origin": "node",
               "id": "s_a206f0eb4e25c28665ceab07db47984e",
               "componentId": "ContentfulForma_36ReactComponents_DropdownListItem"
            },
            {
               "name": "DropdownListItem",
               "status": "Limited",
               "origin": "node",
               "id": "s_889ea622072f2bb10344f790768a7139",
               "componentId": "ContentfulForma_36ReactComponents_DropdownListItem"
            },
            {
               "name": "DropdownListItem",
               "status": "Limited",
               "origin": "node",
               "id": "s_62104c8e3d59a2d316d7e29d55417722",
               "componentId": "ContentfulForma_36ReactComponents_DropdownListItem"
            },
            {
               "name": "DropdownListItem",
               "status": "Limited",
               "origin": "node",
               "id": "s_79692816ecae311ad30baacf8bfd6662",
               "componentId": "ContentfulForma_36ReactComponents_DropdownListItem"
            },
            {
               "name": "DropdownListItem",
               "status": "Limited",
               "origin": "node",
               "id": "s_e363cf135fa2d780e0959e5e0156ffff",
               "componentId": "ContentfulForma_36ReactComponents_DropdownListItem"
            },
            {
               "name": "DropdownListItem",
               "status": "Limited",
               "origin": "node",
               "id": "s_320ec26a36bf7131030c4895903781f5",
               "componentId": "ContentfulForma_36ReactComponents_DropdownListItem"
            },
            {
               "name": "DropdownListItem",
               "status": "Limited",
               "origin": "node",
               "id": "s_25e32c3ebae523607f4759ef95befb42",
               "componentId": "ContentfulForma_36ReactComponents_DropdownListItem"
            },
            {
               "name": "DropdownListItem",
               "status": "Limited",
               "origin": "node",
               "id": "s_0a57e2710d7dc70b6441220e5b152c20",
               "componentId": "ContentfulForma_36ReactComponents_DropdownListItem"
            },
            {
               "name": "DropdownListItem",
               "status": "Limited",
               "origin": "node",
               "id": "s_c094a01c503d96df4c9444afd2b1ffe4",
               "componentId": "ContentfulForma_36ReactComponents_DropdownListItem"
            },
            {
               "name": "DropdownListItem",
               "status": "Limited",
               "origin": "node",
               "id": "s_17b68c702ee24620967e40f553495649",
               "componentId": "ContentfulForma_36ReactComponents_DropdownListItem"
            },
            {
               "name": "DropdownListItem",
               "status": "Limited",
               "origin": "node",
               "id": "s_84e657f4588beb48b569b787d368abeb",
               "componentId": "ContentfulForma_36ReactComponents_DropdownListItem"
            },
            {
               "name": "DropdownListItem",
               "status": "Limited",
               "origin": "node",
               "id": "s_8c401c35859eb1a61d43bce1a2c1d29a",
               "componentId": "ContentfulForma_36ReactComponents_DropdownListItem"
            },
            {
               "name": "DropdownListItem",
               "status": "Limited",
               "origin": "node",
               "id": "s_28bf9910b8e13a97c990fd401006ffac",
               "componentId": "ContentfulForma_36ReactComponents_DropdownListItem"
            },
            {
               "name": "DropdownListItem",
               "status": "Limited",
               "origin": "node",
               "id": "s_9864f66b6b305a8b2aaf7b5401999bcf",
               "componentId": "ContentfulForma_36ReactComponents_DropdownListItem"
            },
            {
               "name": "DropdownListItem",
               "status": "Limited",
               "origin": "node",
               "id": "s_c4771038e728f166f912193ef35b2fbd",
               "componentId": "ContentfulForma_36ReactComponents_DropdownListItem"
            },
            {
               "name": "DropdownListItem",
               "status": "Limited",
               "origin": "node",
               "id": "s_a74a490245285fde5ea2f513df5a8977",
               "componentId": "ContentfulForma_36ReactComponents_DropdownListItem"
            },
            {
               "name": "DropdownListItem",
               "status": "Limited",
               "origin": "node",
               "id": "s_390d57cc214f44cafc150ec857eee7c0",
               "componentId": "ContentfulForma_36ReactComponents_DropdownListItem"
            },
            {
               "name": "DropdownListItem",
               "status": "Limited",
               "origin": "node",
               "id": "s_75b5dd9ba572f52ded96305a0e9d038c",
               "componentId": "ContentfulForma_36ReactComponents_DropdownListItem"
            },
            {
               "name": "DropdownListItem",
               "status": "Limited",
               "origin": "node",
               "id": "s_a577fa8ad94c70e20a135da098626860",
               "componentId": "ContentfulForma_36ReactComponents_DropdownListItem"
            },
            {
               "name": "dynamic",
               "status": "Imported",
               "origin": "base",
               "id": "Components__Dropdown__dynamic__1",
               "componentId": "ContentfulForma_36ReactComponents_Dropdown"
            },
            {
               "name": "Small Indicate Dropdown Button",
               "status": "Duplicate",
               "origin": "node",
               "componentId": "ContentfulForma_36ReactComponents_Button"
            },
            {
               "name": "DropdownList",
               "status": "Limited",
               "origin": "node",
               "id": "s_cbd9349850de6e19d0cc4af2a9b14f43",
               "componentId": "ContentfulForma_36ReactComponents_DropdownList"
            },
            {
               "name": "DropdownListItem",
               "status": "Duplicate",
               "origin": "node",
               "componentId": "ContentfulForma_36ReactComponents_DropdownListItem"
            }
         ]
      },
      "packages/forma-36-react-components/src/components/Dropdown/DropdownList/DropdownList.stories.tsx": {
         "mode": "dynamic",
         "exportsFound": [],
         "examples": [
            {
               "name": "default",
               "status": "Imported",
               "origin": "base",
               "id": "Components__Dropdown__DropdownList__default__1",
               "componentId": "ContentfulForma_36ReactComponents_DropdownList"
            },
            {
               "name": "Is Title DropdownListItem",
               "status": "Duplicate",
               "origin": "node",
               "componentId": "ContentfulForma_36ReactComponents_DropdownListItem"
            },
            {
               "name": "Is Disabled DropdownListItem",
               "status": "Duplicate",
               "origin": "node",
               "componentId": "ContentfulForma_36ReactComponents_DropdownListItem"
            }
         ]
      },
      "packages/forma-36-react-components/src/components/Dropdown/DropdownListItem/DropdownListItem.stories.tsx": {
         "mode": "dynamic",
         "exportsFound": [],
         "examples": [
            {
               "name": "default",
               "status": "Imported",
               "origin": "base",
               "id": "Components__Dropdown__DropdownListItem__default__1",
               "componentId": "ContentfulForma_36ReactComponents_DropdownListItem"
            },
            {
               "name": "with onClick",
               "status": "Duplicate",
               "origin": "base",
               "id": "Components/Dropdown/DropdownListItem/with onClick__1",
               "componentId": "ContentfulForma_36ReactComponents_DropdownListItem"
            }
         ]
      },
      "packages/forma-36-react-components/src/components/EditorToolbar/EditorToolbar/EditorToolbar.stories.tsx": {
         "mode": "dynamic",
         "exportsFound": [],
         "examples": [
            {
               "name": "default",
               "status": "Imported",
               "origin": "base",
               "id": "Components__EditorToolbar__default__1",
               "componentId": "ContentfulForma_36ReactComponents_EditorToolbar"
            },
            {
               "name": "EditorToolbarButton",
               "status": "Limited",
               "origin": "node",
               "id": "s_16a3e432db27d425ab4458d310d53bb9",
               "componentId": "ContentfulForma_36ReactComponents_EditorToolbarButton"
            },
            {
               "name": "EditorToolbarButton",
               "status": "Limited",
               "origin": "node",
               "id": "s_10e35ecc47f61b027e44b88212232ad8",
               "componentId": "ContentfulForma_36ReactComponents_EditorToolbarButton"
            },
            {
               "name": "EditorToolbarButton",
               "status": "Limited",
               "origin": "node",
               "id": "s_3d87ec5d7a2abf26fb165b74d0510962",
               "componentId": "ContentfulForma_36ReactComponents_EditorToolbarButton"
            },
            {
               "name": "Small Button",
               "status": "Limited",
               "origin": "node",
               "id": "s_44355f32c0c30eeb399eddc7aeca6205",
               "componentId": "ContentfulForma_36ReactComponents_Button"
            }
         ]
      },
      "packages/forma-36-react-components/src/components/EditorToolbar/EditorToolbarButton/EditorToolbarButton.stories.tsx": {
         "mode": "dynamic",
         "exportsFound": [],
         "examples": [
            {
               "name": "default",
               "status": "Imported",
               "origin": "base",
               "id": "Components__EditorToolbar__EditorToolbarButton__default__1",
               "componentId": "ContentfulForma_36ReactComponents_EditorToolbarButton"
            }
         ]
      },
      "packages/forma-36-react-components/src/components/EditorToolbar/EditorToolbarDivider/EditorToolbarDivider.stories.tsx": {
         "mode": "dynamic",
         "exportsFound": [],
         "examples": [
            {
               "name": "default",
               "status": "Imported",
               "origin": "base",
               "id": "Components__EditorToolbar__EditorToolbarDivider__default__1",
               "componentId": "ContentfulForma_36ReactComponents_EditorToolbarDivider"
            }
         ]
      },
      "packages/forma-36-react-components/src/components/EmptyState/EmptyState.stories.tsx": {
         "mode": "dynamic",
         "exportsFound": [],
         "examples": [
            {
               "name": "default",
               "status": "Imported",
               "origin": "base",
               "id": "Components__EmptyState__default__1",
               "componentId": "ContentfulForma_36ReactComponents_EmptyState"
            },
            {
               "name": "with illustration",
               "status": "Imported",
               "origin": "base",
               "id": "Components__EmptyState__with_illustration__1",
               "componentId": "ContentfulForma_36ReactComponents_EmptyState"
            },
            {
               "name": "with custom image element",
               "status": "Imported",
               "origin": "base",
               "id": "Components__EmptyState__with_custom_image_element__1",
               "componentId": "ContentfulForma_36ReactComponents_EmptyState"
            },
            {
               "name": "with children",
               "status": "Imported",
               "origin": "base",
               "id": "Components__EmptyState__with_children__1",
               "componentId": "ContentfulForma_36ReactComponents_EmptyState"
            },
            {
               "name": "Button",
               "status": "Limited",
               "origin": "node",
               "id": "s_fca65f49184820eb58a7f89ebbe630f4",
               "componentId": "ContentfulForma_36ReactComponents_Button"
            }
         ]
      },
      "packages/forma-36-react-components/src/components/EntityList/EntityList.stories.tsx": {
         "mode": "dynamic",
         "exportsFound": [],
         "examples": [
            {
               "name": "default",
               "status": "Imported",
               "origin": "base",
               "id": "Components__EntityList__EntityList__default__1",
               "componentId": "ContentfulForma_36ReactComponents_EntityList"
            },
            {
               "name": "Published EntityListItem",
               "status": "Limited",
               "origin": "node",
               "id": "s_beb9b134a77950e637ac811f7e9b18e4",
               "componentId": "ContentfulForma_36ReactComponents_EntityListItem"
            },
            {
               "name": "Published EntityListItem",
               "status": "Limited",
               "origin": "node",
               "id": "s_91a20fd28fe4008ae046617a7a132e79",
               "componentId": "ContentfulForma_36ReactComponents_EntityListItem"
            },
            {
               "name": "Published EntityListItem",
               "status": "Limited",
               "origin": "node",
               "id": "s_a9041ce98c13b7f307fc7a2044537068",
               "componentId": "ContentfulForma_36ReactComponents_EntityListItem"
            },
            {
               "name": "with Ref",
               "status": "Imported",
               "origin": "base",
               "id": "Components__EntityList__EntityList__with_Ref__1",
               "componentId": "ContentfulForma_36ReactComponents_EntityList"
            },
            {
               "name": "Published EntityListItem",
               "status": "Duplicate",
               "origin": "node",
               "componentId": "ContentfulForma_36ReactComponents_EntityListItem"
            }
         ]
      },
      "packages/forma-36-react-components/src/components/EntityList/EntityListItem/EntityListItem.stories.tsx": {
         "mode": "dynamic",
         "exportsFound": [],
         "examples": [
            {
               "name": "default",
               "status": "Imported",
               "origin": "base",
               "id": "Components__EntityList__EntityListItem__default__1",
               "componentId": "ContentfulForma_36ReactComponents_EntityListItem"
            },
            {
               "name": "DropdownList",
               "status": "Duplicate",
               "origin": "node",
               "componentId": "ContentfulForma_36ReactComponents_DropdownList"
            },
            {
               "name": "Is Title DropdownListItem",
               "status": "Duplicate",
               "origin": "node",
               "componentId": "ContentfulForma_36ReactComponents_DropdownListItem"
            },
            {
               "name": "DropdownListItem",
               "status": "Duplicate",
               "origin": "node",
               "componentId": "ContentfulForma_36ReactComponents_DropdownListItem"
            },
            {
               "name": "DropdownListItem",
               "status": "Duplicate",
               "origin": "node",
               "componentId": "ContentfulForma_36ReactComponents_DropdownListItem"
            },
            {
               "name": "DropdownListItem",
               "status": "Duplicate",
               "origin": "node",
               "componentId": "ContentfulForma_36ReactComponents_DropdownListItem"
            },
            {
               "name": "with custom CardDragHandle",
               "status": "Imported",
               "origin": "base",
               "id": "Components__EntityList__EntityListItem__with_custom_CardDragHandle__1",
               "componentId": "ContentfulForma_36ReactComponents_EntityListItem"
            },
            {
               "name": "DropdownList",
               "status": "Duplicate",
               "origin": "node",
               "componentId": "ContentfulForma_36ReactComponents_DropdownList"
            },
            {
               "name": "Is Title DropdownListItem",
               "status": "Duplicate",
               "origin": "node",
               "componentId": "ContentfulForma_36ReactComponents_DropdownListItem"
            },
            {
               "name": "DropdownListItem",
               "status": "Duplicate",
               "origin": "node",
               "componentId": "ContentfulForma_36ReactComponents_DropdownListItem"
            },
            {
               "name": "DropdownListItem",
               "status": "Duplicate",
               "origin": "node",
               "componentId": "ContentfulForma_36ReactComponents_DropdownListItem"
            },
            {
               "name": "DropdownListItem",
               "status": "Duplicate",
               "origin": "node",
               "componentId": "ContentfulForma_36ReactComponents_DropdownListItem"
            },
            {
               "name": "CardDragHandle",
               "status": "Duplicate",
               "origin": "node",
               "componentId": "ContentfulForma_36ReactComponents_CardDragHandle"
            }
         ]
      },
      "packages/forma-36-react-components/src/components/Flex/Flex.stories.tsx": {
         "mode": "static",
         "exportsFound": [],
         "examples": [
            {
               "status": "UnknownComponent",
               "origin": "base"
            },
            {
               "status": "UnknownComponent",
               "origin": "base"
            },
            {
               "status": "UnknownComponent",
               "origin": "node"
            },
            {
               "status": "UnknownComponent",
               "origin": "base"
            },
            {
               "status": "UnknownComponent",
               "origin": "node"
            },
            {
               "status": "UnknownComponent",
               "origin": "node"
            },
            {
               "status": "UnknownComponent",
               "origin": "base"
            },
            {
               "status": "UnknownComponent",
               "origin": "node"
            },
            {
               "status": "UnknownComponent",
               "origin": "node"
            },
            {
               "status": "UnknownComponent",
               "origin": "base"
            }
         ]
      },
      "packages/forma-36-react-components/src/components/Form/FieldGroup/FieldGroup.stories.tsx": {
         "mode": "dynamic",
         "exportsFound": [],
         "examples": [
            {
               "name": "default",
               "status": "Imported",
               "origin": "base",
               "id": "Components__Form__FieldGroup__default__1",
               "componentId": "ContentfulForma_36ReactComponents_FieldGroup"
            },
            {
               "name": "Checked CheckboxField",
               "status": "Imported",
               "origin": "node",
               "id": "s_e09a2d0c4a84c7ed580e25b42febaed5",
               "componentId": "ContentfulForma_36ReactComponents_CheckboxField"
            },
            {
               "name": "CheckboxField",
               "status": "Imported",
               "origin": "node",
               "id": "s_2ee0313db2fac5a48385a81d8632f6bc",
               "componentId": "ContentfulForma_36ReactComponents_CheckboxField"
            }
         ]
      },
      "packages/forma-36-react-components/src/components/Form/Form.stories.tsx": {
         "mode": "dynamic",
         "exportsFound": [],
         "examples": [
            {
               "name": "default",
               "status": "Imported",
               "origin": "base",
               "id": "Components__Form__default__1",
               "componentId": "ContentfulForma_36ReactComponents_Form"
            },
            {
               "name": "Required TextField",
               "status": "Limited",
               "origin": "node",
               "id": "s_2acf1fb0abc639502f42e7f3b96fe3e9",
               "componentId": "ContentfulForma_36ReactComponents_TextField"
            },
            {
               "name": "Required TextField",
               "status": "Limited",
               "origin": "node",
               "id": "s_1901cd6aa8239a0a3b60c16f69bdcc3d",
               "componentId": "ContentfulForma_36ReactComponents_TextField"
            },
            {
               "name": "FieldGroup",
               "status": "Duplicate",
               "origin": "node",
               "componentId": "ContentfulForma_36ReactComponents_FieldGroup"
            },
            {
               "name": "Checked CheckboxField",
               "status": "Duplicate",
               "origin": "node",
               "componentId": "ContentfulForma_36ReactComponents_CheckboxField"
            },
            {
               "name": "CheckboxField",
               "status": "Duplicate",
               "origin": "node",
               "componentId": "ContentfulForma_36ReactComponents_CheckboxField"
            },
            {
               "name": "Button",
               "status": "Duplicate",
               "origin": "node",
               "componentId": "ContentfulForma_36ReactComponents_Button"
            }
         ]
      },
      "packages/forma-36-react-components/src/components/FormLabel/FormLabel.stories.tsx": {
         "mode": "dynamic",
         "exportsFound": [],
         "examples": [
            {
               "name": "default",
               "status": "Imported",
               "origin": "base",
               "id": "Components__FormLabel__default__1",
               "componentId": "ContentfulForma_36ReactComponents_FormLabel"
            }
         ]
      },
      "packages/forma-36-react-components/src/components/Grid/Grid.stories.tsx": {
         "mode": "static",
         "exportsFound": [],
         "examples": [
            {
               "status": "UnknownComponent",
               "origin": "base"
            },
            {
               "status": "UnknownComponent",
               "origin": "base"
            },
            {
               "status": "UnknownComponent",
               "origin": "node"
            },
            {
               "status": "UnknownComponent",
               "origin": "base"
            }
         ]
      },
      "packages/forma-36-react-components/src/components/Grid/GridItem/GridItem.stories.tsx": {
         "mode": "static",
         "exportsFound": [],
         "examples": [
            {
               "status": "UnknownComponent",
               "origin": "base"
            },
            {
               "status": "UnknownComponent",
               "origin": "base"
            },
            {
               "status": "UnknownComponent",
               "origin": "node"
            },
            {
               "status": "UnknownComponent",
               "origin": "node"
            },
            {
               "status": "UnknownComponent",
               "origin": "base"
            }
         ]
      },
      "packages/forma-36-react-components/src/components/HelpText/HelpText.stories.tsx": {
         "mode": "dynamic",
         "exportsFound": [],
         "examples": [
            {
               "name": "default",
               "status": "Imported",
               "origin": "base",
               "id": "Components__HelpText__default__1",
               "componentId": "ContentfulForma_36ReactComponents_HelpText"
            },
            {
               "name": "with link",
               "status": "Imported",
               "origin": "base",
               "id": "Components__HelpText__with_link__1",
               "componentId": "ContentfulForma_36ReactComponents_HelpText"
            },
            {
               "name": "TextLink",
               "status": "Limited",
               "origin": "node",
               "id": "s_c8d78a651cfe3d4003cbbbd3f36bcd0a",
               "componentId": "ContentfulForma_36ReactComponents_TextLink"
            }
         ]
      },
      "packages/forma-36-react-components/src/components/Icon/Icon.stories.tsx": {
         "mode": "dynamic",
         "exportsFound": [],
         "examples": [
            {
               "name": "Icon (default)",
               "status": "Imported",
               "origin": "base",
               "id": "Components__Icon__Icon_(default)__1",
               "componentId": "ContentfulForma_36ReactComponents_Icon"
            },
            {
               "name": "Icon (all icons)",
               "status": "Imported",
               "origin": "base",
               "id": "Components__Icon__Icon_(all_icons)__1",
               "componentId": "ContentfulForma_36ReactComponents_Icon"
            },
            {
               "name": "Icon (all icons)",
               "status": "Imported",
               "origin": "base",
               "id": "Components__Icon__Icon_(all_icons)__2",
               "componentId": "ContentfulForma_36ReactComponents_Icon"
            },
            {
               "name": "Icon (all icons)",
               "status": "Imported",
               "origin": "base",
               "id": "Components__Icon__Icon_(all_icons)__3",
               "componentId": "ContentfulForma_36ReactComponents_Icon"
            },
            {
               "name": "Icon (all icons)",
               "status": "Imported",
               "origin": "base",
               "id": "Components__Icon__Icon_(all_icons)__4",
               "componentId": "ContentfulForma_36ReactComponents_Icon"
            },
            {
               "name": "Icon (all icons)",
               "status": "Imported",
               "origin": "base",
               "id": "Components__Icon__Icon_(all_icons)__5",
               "componentId": "ContentfulForma_36ReactComponents_Icon"
            },
            {
               "name": "Icon (all icons)",
               "status": "Limited",
               "origin": "base",
               "id": "Components__Icon__Icon_(all_icons)__6",
               "componentId": "ContentfulForma_36ReactComponents_Icon"
            },
            {
               "name": "Icon (all icons)",
               "status": "Limited",
               "origin": "base",
               "id": "Components__Icon__Icon_(all_icons)__7",
               "componentId": "ContentfulForma_36ReactComponents_Icon"
            },
            {
               "name": "Icon (all icons)",
               "status": "Limited",
               "origin": "base",
               "id": "Components__Icon__Icon_(all_icons)__8",
               "componentId": "ContentfulForma_36ReactComponents_Icon"
            },
            {
               "name": "Icon (all icons)",
               "status": "Limited",
               "origin": "base",
               "id": "Components__Icon__Icon_(all_icons)__9",
               "componentId": "ContentfulForma_36ReactComponents_Icon"
            },
            {
               "name": "Icon (all icons)",
               "status": "Limited",
               "origin": "base",
               "id": "Components__Icon__Icon_(all_icons)__10",
               "componentId": "ContentfulForma_36ReactComponents_Icon"
            },
            {
               "name": "Icon (all icons)",
               "status": "Limited",
               "origin": "base",
               "id": "Components__Icon__Icon_(all_icons)__11",
               "componentId": "ContentfulForma_36ReactComponents_Icon"
            },
            {
               "name": "Icon (all icons)",
               "status": "Limited",
               "origin": "base",
               "id": "Components__Icon__Icon_(all_icons)__12",
               "componentId": "ContentfulForma_36ReactComponents_Icon"
            },
            {
               "name": "Icon (all icons)",
               "status": "Limited",
               "origin": "base",
               "id": "Components__Icon__Icon_(all_icons)__13",
               "componentId": "ContentfulForma_36ReactComponents_Icon"
            },
            {
               "name": "Icon (all icons)",
               "status": "Limited",
               "origin": "base",
               "id": "Components__Icon__Icon_(all_icons)__14",
               "componentId": "ContentfulForma_36ReactComponents_Icon"
            },
            {
               "name": "Icon (all icons)",
               "status": "Limited",
               "origin": "base",
               "id": "Components__Icon__Icon_(all_icons)__15",
               "componentId": "ContentfulForma_36ReactComponents_Icon"
            },
            {
               "name": "Icon (all icons)",
               "status": "Limited",
               "origin": "base",
               "id": "Components__Icon__Icon_(all_icons)__16",
               "componentId": "ContentfulForma_36ReactComponents_Icon"
            },
            {
               "name": "Icon (all icons)",
               "status": "Limited",
               "origin": "base",
               "id": "Components__Icon__Icon_(all_icons)__17",
               "componentId": "ContentfulForma_36ReactComponents_Icon"
            },
            {
               "name": "Icon (all icons)",
               "status": "Limited",
               "origin": "base",
               "id": "Components__Icon__Icon_(all_icons)__18",
               "componentId": "ContentfulForma_36ReactComponents_Icon"
            },
            {
               "name": "Icon (all icons)",
               "status": "Limited",
               "origin": "base",
               "id": "Components__Icon__Icon_(all_icons)__19",
               "componentId": "ContentfulForma_36ReactComponents_Icon"
            },
            {
               "name": "Icon (all icons)",
               "status": "Limited",
               "origin": "base",
               "id": "Components__Icon__Icon_(all_icons)__20",
               "componentId": "ContentfulForma_36ReactComponents_Icon"
            },
            {
               "name": "Icon (all icons)",
               "status": "Limited",
               "origin": "base",
               "id": "Components__Icon__Icon_(all_icons)__21",
               "componentId": "ContentfulForma_36ReactComponents_Icon"
            },
            {
               "name": "Icon (all icons)",
               "status": "Limited",
               "origin": "base",
               "id": "Components__Icon__Icon_(all_icons)__22",
               "componentId": "ContentfulForma_36ReactComponents_Icon"
            },
            {
               "name": "Icon (all icons)",
               "status": "Limited",
               "origin": "base",
               "id": "Components__Icon__Icon_(all_icons)__23",
               "componentId": "ContentfulForma_36ReactComponents_Icon"
            },
            {
               "name": "Icon (all icons)",
               "status": "Limited",
               "origin": "base",
               "id": "Components__Icon__Icon_(all_icons)__24",
               "componentId": "ContentfulForma_36ReactComponents_Icon"
            },
            {
               "name": "Icon (all icons)",
               "status": "Limited",
               "origin": "base",
               "id": "Components__Icon__Icon_(all_icons)__25",
               "componentId": "ContentfulForma_36ReactComponents_Icon"
            },
            {
               "name": "Icon (all icons)",
               "status": "Limited",
               "origin": "base",
               "id": "Components__Icon__Icon_(all_icons)__26",
               "componentId": "ContentfulForma_36ReactComponents_Icon"
            },
            {
               "name": "Icon (all icons)",
               "status": "Limited",
               "origin": "base",
               "id": "Components__Icon__Icon_(all_icons)__27",
               "componentId": "ContentfulForma_36ReactComponents_Icon"
            },
            {
               "name": "Icon (all icons)",
               "status": "Limited",
               "origin": "base",
               "id": "Components__Icon__Icon_(all_icons)__28",
               "componentId": "ContentfulForma_36ReactComponents_Icon"
            },
            {
               "name": "Icon (all icons)",
               "status": "Limited",
               "origin": "base",
               "id": "Components__Icon__Icon_(all_icons)__29",
               "componentId": "ContentfulForma_36ReactComponents_Icon"
            },
            {
               "name": "Icon (all icons)",
               "status": "Limited",
               "origin": "base",
               "id": "Components__Icon__Icon_(all_icons)__30",
               "componentId": "ContentfulForma_36ReactComponents_Icon"
            },
            {
               "name": "Icon (all icons)",
               "status": "Limited",
               "origin": "base",
               "id": "Components__Icon__Icon_(all_icons)__31",
               "componentId": "ContentfulForma_36ReactComponents_Icon"
            },
            {
               "name": "Icon (all icons)",
               "status": "Limited",
               "origin": "base",
               "id": "Components__Icon__Icon_(all_icons)__32",
               "componentId": "ContentfulForma_36ReactComponents_Icon"
            },
            {
               "name": "Icon (all icons)",
               "status": "Limited",
               "origin": "base",
               "id": "Components__Icon__Icon_(all_icons)__33",
               "componentId": "ContentfulForma_36ReactComponents_Icon"
            },
            {
               "name": "Icon (all icons)",
               "status": "Limited",
               "origin": "base",
               "id": "Components__Icon__Icon_(all_icons)__34",
               "componentId": "ContentfulForma_36ReactComponents_Icon"
            },
            {
               "name": "Icon (all icons)",
               "status": "Limited",
               "origin": "base",
               "id": "Components__Icon__Icon_(all_icons)__35",
               "componentId": "ContentfulForma_36ReactComponents_Icon"
            },
            {
               "name": "Icon (all icons)",
               "status": "Limited",
               "origin": "base",
               "id": "Components__Icon__Icon_(all_icons)__36",
               "componentId": "ContentfulForma_36ReactComponents_Icon"
            },
            {
               "name": "Icon (all icons)",
               "status": "Limited",
               "origin": "base",
               "id": "Components__Icon__Icon_(all_icons)__37",
               "componentId": "ContentfulForma_36ReactComponents_Icon"
            },
            {
               "name": "Icon (all icons)",
               "status": "Limited",
               "origin": "base",
               "id": "Components__Icon__Icon_(all_icons)__38",
               "componentId": "ContentfulForma_36ReactComponents_Icon"
            },
            {
               "name": "Icon (all icons)",
               "status": "Limited",
               "origin": "base",
               "id": "Components__Icon__Icon_(all_icons)__39",
               "componentId": "ContentfulForma_36ReactComponents_Icon"
            },
            {
               "name": "Icon (all icons)",
               "status": "Limited",
               "origin": "base",
               "id": "Components__Icon__Icon_(all_icons)__40",
               "componentId": "ContentfulForma_36ReactComponents_Icon"
            },
            {
               "name": "Icon (all icons)",
               "status": "Limited",
               "origin": "base",
               "id": "Components__Icon__Icon_(all_icons)__41",
               "componentId": "ContentfulForma_36ReactComponents_Icon"
            },
            {
               "name": "Icon (all icons)",
               "status": "Limited",
               "origin": "base",
               "id": "Components__Icon__Icon_(all_icons)__42",
               "componentId": "ContentfulForma_36ReactComponents_Icon"
            },
            {
               "name": "Icon (all icons)",
               "status": "Limited",
               "origin": "base",
               "id": "Components__Icon__Icon_(all_icons)__43",
               "componentId": "ContentfulForma_36ReactComponents_Icon"
            },
            {
               "name": "Icon (all icons)",
               "status": "Limited",
               "origin": "base",
               "id": "Components__Icon__Icon_(all_icons)__44",
               "componentId": "ContentfulForma_36ReactComponents_Icon"
            },
            {
               "name": "Icon (all icons)",
               "status": "Limited",
               "origin": "base",
               "id": "Components__Icon__Icon_(all_icons)__45",
               "componentId": "ContentfulForma_36ReactComponents_Icon"
            },
            {
               "name": "Icon (all icons)",
               "status": "Limited",
               "origin": "base",
               "id": "Components__Icon__Icon_(all_icons)__46",
               "componentId": "ContentfulForma_36ReactComponents_Icon"
            },
            {
               "name": "Icon (all icons)",
               "status": "Limited",
               "origin": "base",
               "id": "Components__Icon__Icon_(all_icons)__47",
               "componentId": "ContentfulForma_36ReactComponents_Icon"
            },
            {
               "name": "Icon (all icons)",
               "status": "Limited",
               "origin": "base",
               "id": "Components__Icon__Icon_(all_icons)__48",
               "componentId": "ContentfulForma_36ReactComponents_Icon"
            },
            {
               "name": "Icon (all icons)",
               "status": "Limited",
               "origin": "base",
               "id": "Components__Icon__Icon_(all_icons)__49",
               "componentId": "ContentfulForma_36ReactComponents_Icon"
            },
            {
               "name": "Icon (all icons)",
               "status": "Limited",
               "origin": "base",
               "id": "Components__Icon__Icon_(all_icons)__50",
               "componentId": "ContentfulForma_36ReactComponents_Icon"
            },
            {
               "name": "Icon (all icons)",
               "status": "Limited",
               "origin": "base",
               "id": "Components__Icon__Icon_(all_icons)__51",
               "componentId": "ContentfulForma_36ReactComponents_Icon"
            },
            {
               "name": "Icon (all icons)",
               "status": "Limited",
               "origin": "base",
               "id": "Components__Icon__Icon_(all_icons)__52",
               "componentId": "ContentfulForma_36ReactComponents_Icon"
            },
            {
               "name": "Icon (all icons)",
               "status": "Limited",
               "origin": "base",
               "id": "Components__Icon__Icon_(all_icons)__53",
               "componentId": "ContentfulForma_36ReactComponents_Icon"
            },
            {
               "name": "Icon (all icons)",
               "status": "Limited",
               "origin": "base",
               "id": "Components__Icon__Icon_(all_icons)__54",
               "componentId": "ContentfulForma_36ReactComponents_Icon"
            },
            {
               "name": "Icon (all icons)",
               "status": "Limited",
               "origin": "base",
               "id": "Components__Icon__Icon_(all_icons)__55",
               "componentId": "ContentfulForma_36ReactComponents_Icon"
            },
            {
               "name": "Icon (all icons)",
               "status": "Limited",
               "origin": "base",
               "id": "Components__Icon__Icon_(all_icons)__56",
               "componentId": "ContentfulForma_36ReactComponents_Icon"
            },
            {
               "name": "Icon (all icons)",
               "status": "Limited",
               "origin": "base",
               "id": "Components__Icon__Icon_(all_icons)__57",
               "componentId": "ContentfulForma_36ReactComponents_Icon"
            },
            {
               "name": "Icon (all icons)",
               "status": "Limited",
               "origin": "base",
               "id": "Components__Icon__Icon_(all_icons)__58",
               "componentId": "ContentfulForma_36ReactComponents_Icon"
            },
            {
               "name": "Icon (all icons)",
               "status": "Limited",
               "origin": "base",
               "id": "Components__Icon__Icon_(all_icons)__59",
               "componentId": "ContentfulForma_36ReactComponents_Icon"
            },
            {
               "name": "Icon (all icons)",
               "status": "Limited",
               "origin": "base",
               "id": "Components__Icon__Icon_(all_icons)__60",
               "componentId": "ContentfulForma_36ReactComponents_Icon"
            },
            {
               "name": "Icon (all icons)",
               "status": "Limited",
               "origin": "base",
               "id": "Components__Icon__Icon_(all_icons)__61",
               "componentId": "ContentfulForma_36ReactComponents_Icon"
            },
            {
               "name": "Icon (all icons)",
               "status": "Limited",
               "origin": "base",
               "id": "Components__Icon__Icon_(all_icons)__62",
               "componentId": "ContentfulForma_36ReactComponents_Icon"
            },
            {
               "name": "Icon (all icons)",
               "status": "Limited",
               "origin": "base",
               "id": "Components__Icon__Icon_(all_icons)__63",
               "componentId": "ContentfulForma_36ReactComponents_Icon"
            },
            {
               "name": "Icon (all icons)",
               "status": "Limited",
               "origin": "base",
               "id": "Components__Icon__Icon_(all_icons)__64",
               "componentId": "ContentfulForma_36ReactComponents_Icon"
            },
            {
               "name": "Icon (all icons)",
               "status": "Limited",
               "origin": "base",
               "id": "Components__Icon__Icon_(all_icons)__65",
               "componentId": "ContentfulForma_36ReactComponents_Icon"
            },
            {
               "name": "Icon (all icons)",
               "status": "Limited",
               "origin": "base",
               "id": "Components__Icon__Icon_(all_icons)__66",
               "componentId": "ContentfulForma_36ReactComponents_Icon"
            },
            {
               "name": "Icon (all icons)",
               "status": "Limited",
               "origin": "base",
               "id": "Components__Icon__Icon_(all_icons)__67",
               "componentId": "ContentfulForma_36ReactComponents_Icon"
            }
         ]
      },
      "packages/forma-36-react-components/src/components/IconButton/IconButton.stories.tsx": {
         "mode": "dynamic",
         "exportsFound": [],
         "examples": [
            {
               "name": "default",
               "status": "Imported",
               "origin": "base",
               "id": "Components__IconButton__default__1",
               "componentId": "ContentfulForma_36ReactComponents_IconButton"
            }
         ]
      },
      "packages/forma-36-react-components/src/components/Illustration/Illustration.stories.tsx": {
         "mode": "dynamic",
         "exportsFound": [],
         "examples": [
            {
               "name": "default",
               "status": "Imported",
               "origin": "base",
               "id": "Components__Illustration__default__1",
               "componentId": "ContentfulForma_36ReactComponents_Illustration"
            },
            {
               "name": "All Illustrations",
               "status": "Imported",
               "origin": "base",
               "id": "Components__Illustration__All_Illustrations__1",
               "componentId": "ContentfulForma_36ReactComponents_Illustration"
            },
            {
               "name": "All Illustrations",
               "status": "Imported",
               "origin": "base",
               "id": "Components__Illustration__All_Illustrations__2",
               "componentId": "ContentfulForma_36ReactComponents_Illustration"
            },
            {
               "name": "All Illustrations",
               "status": "Imported",
               "origin": "base",
               "id": "Components__Illustration__All_Illustrations__3",
               "componentId": "ContentfulForma_36ReactComponents_Illustration"
            },
            {
               "name": "All Illustrations",
               "status": "Imported",
               "origin": "base",
               "id": "Components__Illustration__All_Illustrations__4",
               "componentId": "ContentfulForma_36ReactComponents_Illustration"
            },
            {
               "name": "All Illustrations",
               "status": "Imported",
               "origin": "base",
               "id": "Components__Illustration__All_Illustrations__5",
               "componentId": "ContentfulForma_36ReactComponents_Illustration"
            },
            {
               "name": "All Illustrations",
               "status": "Limited",
               "origin": "base",
               "id": "Components__Illustration__All_Illustrations__6",
               "componentId": "ContentfulForma_36ReactComponents_Illustration"
            },
            {
               "name": "All Illustrations",
               "status": "Limited",
               "origin": "base",
               "id": "Components__Illustration__All_Illustrations__7",
               "componentId": "ContentfulForma_36ReactComponents_Illustration"
            },
            {
               "name": "All Illustrations",
               "status": "Limited",
               "origin": "base",
               "id": "Components__Illustration__All_Illustrations__8",
               "componentId": "ContentfulForma_36ReactComponents_Illustration"
            },
            {
               "name": "All Illustrations",
               "status": "Limited",
               "origin": "base",
               "id": "Components__Illustration__All_Illustrations__9",
               "componentId": "ContentfulForma_36ReactComponents_Illustration"
            },
            {
               "name": "All Illustrations",
               "status": "Limited",
               "origin": "base",
               "id": "Components__Illustration__All_Illustrations__10",
               "componentId": "ContentfulForma_36ReactComponents_Illustration"
            },
            {
               "name": "All Illustrations",
               "status": "Limited",
               "origin": "base",
               "id": "Components__Illustration__All_Illustrations__11",
               "componentId": "ContentfulForma_36ReactComponents_Illustration"
            }
         ]
      },
      "packages/forma-36-react-components/src/components/List/List.stories.tsx": {
         "mode": "dynamic",
         "exportsFound": [],
         "examples": [
            {
               "name": "default",
               "status": "Imported",
               "origin": "base",
               "id": "Components__List__default__1",
               "componentId": "ContentfulForma_36ReactComponents_List"
            },
            {
               "name": "ListItem",
               "status": "Imported",
               "origin": "node",
               "id": "s_44a24575e6da19e650157ff1e159b65e",
               "componentId": "ContentfulForma_36ReactComponents_ListItem"
            },
            {
               "name": "ListItem",
               "status": "Duplicate",
               "origin": "node",
               "componentId": "ContentfulForma_36ReactComponents_ListItem"
            },
            {
               "name": "ListItem",
               "status": "Imported",
               "origin": "node",
               "id": "s_a581628272cdd0639237e1888cafe9bc",
               "componentId": "ContentfulForma_36ReactComponents_ListItem"
            },
            {
               "name": "TextLink",
               "status": "Duplicate",
               "origin": "node",
               "componentId": "ContentfulForma_36ReactComponents_TextLink"
            },
            {
               "name": "ListItem",
               "status": "Imported",
               "origin": "node",
               "id": "s_2cfcbf06b4d90434b75485d11d8f770e",
               "componentId": "ContentfulForma_36ReactComponents_ListItem"
            },
            {
               "name": "List",
               "status": "Limited",
               "origin": "node",
               "id": "s_8af92fbe574da2243c66db66353ddd85",
               "componentId": "ContentfulForma_36ReactComponents_List"
            },
            {
               "name": "ListItem",
               "status": "Duplicate",
               "origin": "node",
               "componentId": "ContentfulForma_36ReactComponents_ListItem"
            },
            {
               "name": "ListItem",
               "status": "Duplicate",
               "origin": "node",
               "componentId": "ContentfulForma_36ReactComponents_ListItem"
            }
         ]
      },
      "packages/forma-36-react-components/src/components/Modal/Modal.stories.tsx": {
         "mode": "dynamic",
         "exportsFound": [],
         "examples": [
            {
               "name": "default",
               "status": "Imported",
               "origin": "base",
               "id": "Components__Modal__default__1",
               "componentId": "ContentfulForma_36ReactComponents_Button"
            },
            {
               "name": "default",
               "status": "Imported",
               "origin": "base",
               "id": "Components__Modal__default__2",
               "componentId": "ContentfulForma_36ReactComponents_Modal"
            },
            {
               "name": "long",
               "status": "Imported",
               "origin": "base",
               "id": "Components__Modal__long__1",
               "componentId": "ContentfulForma_36ReactComponents_Button"
            },
            {
               "name": "long",
               "status": "ParsingError",
               "origin": "base",
               "id": "Components/Modal/long__2",
               "componentId": "ContentfulForma_36ReactComponents_Modal"
            },
            {
               "name": "controlled",
               "status": "Imported",
               "origin": "base",
               "id": "Components__Modal__controlled__1",
               "componentId": "ContentfulForma_36ReactComponents_Button"
            },
            {
               "name": "controlled",
               "status": "Imported",
               "origin": "base",
               "id": "Components__Modal__controlled__2",
               "componentId": "ContentfulForma_36ReactComponents_Modal"
            }
         ]
      },
      "packages/forma-36-react-components/src/components/Modal/ModalConfirm/ModalConfirm.stories.tsx": {
         "mode": "dynamic",
         "exportsFound": [],
         "examples": [
            {
               "name": "default",
               "status": "Imported",
               "origin": "base",
               "id": "Components__Modal__ModalConfirm__default__1",
               "componentId": "ContentfulForma_36ReactComponents_Button"
            },
            {
               "name": "default",
               "status": "Imported",
               "origin": "base",
               "id": "Components__Modal__ModalConfirm__default__2",
               "componentId": "ContentfulForma_36ReactComponents_ModalConfirm"
            },
            {
               "name": "complex example",
               "status": "Duplicate",
               "origin": "base",
               "id": "Components/Modal/ModalConfirm/complex example__1",
               "componentId": "ContentfulForma_36ReactComponents_Button"
            },
            {
               "name": "complex example",
               "status": "Imported",
               "origin": "base",
               "id": "Components__Modal__ModalConfirm__complex_example__2",
               "componentId": "ContentfulForma_36ReactComponents_ModalConfirm"
            },
            {
               "name": "TextInput",
               "status": "Limited",
               "origin": "node",
               "id": "s_07677d86cec90ac26254645f69079630",
               "componentId": "ContentfulForma_36ReactComponents_TextInput"
            }
         ]
      },
      "packages/forma-36-react-components/src/components/Modal/ModalLauncher/ModalLauncher.stories.tsx": {
         "mode": "dynamic",
         "exportsFound": [],
         "examples": [
            {
               "name": "default",
               "status": "Imported",
               "origin": "base",
               "id": "Components__Modal__ModalLauncher__default__1",
               "componentId": "ContentfulForma_36ReactComponents_Button"
            }
         ]
      },
      "packages/forma-36-react-components/src/components/NavigationIcon/NavigationIcon.stories.tsx": {
         "mode": "static",
         "exportsFound": [],
         "examples": [
            {
               "status": "UnknownComponent",
               "origin": "base"
            }
         ]
      },
      "packages/forma-36-react-components/src/components/Note/Note.stories.tsx": {
         "mode": "dynamic",
         "exportsFound": [],
         "examples": [
            {
               "name": "default",
               "status": "Imported",
               "origin": "base",
               "id": "Components__Note__default__1",
               "componentId": "ContentfulForma_36ReactComponents_Note"
            },
            {
               "name": "all notes",
               "status": "Imported",
               "origin": "base",
               "id": "Components__Note__all_notes__1",
               "componentId": "ContentfulForma_36ReactComponents_Note"
            },
            {
               "name": "all notes",
               "status": "Imported",
               "origin": "base",
               "id": "Components__Note__all_notes__2",
               "componentId": "ContentfulForma_36ReactComponents_Note"
            },
            {
               "name": "all notes",
               "status": "Imported",
               "origin": "base",
               "id": "Components__Note__all_notes__3",
               "componentId": "ContentfulForma_36ReactComponents_Note"
            },
            {
               "name": "all notes",
               "status": "Imported",
               "origin": "base",
               "id": "Components__Note__all_notes__4",
               "componentId": "ContentfulForma_36ReactComponents_Note"
            },
            {
               "name": "all notes",
               "status": "Imported",
               "origin": "base",
               "id": "Components__Note__all_notes__5",
               "componentId": "ContentfulForma_36ReactComponents_Note"
            },
            {
               "name": "all notes",
               "status": "Limited",
               "origin": "base",
               "id": "Components__Note__all_notes__6",
               "componentId": "ContentfulForma_36ReactComponents_Note"
            },
            {
               "name": "all notes",
               "status": "Limited",
               "origin": "base",
               "id": "Components__Note__all_notes__7",
               "componentId": "ContentfulForma_36ReactComponents_Note"
            },
            {
               "name": "all notes",
               "status": "Limited",
               "origin": "base",
               "id": "Components__Note__all_notes__8",
               "componentId": "ContentfulForma_36ReactComponents_Note"
            }
         ]
      },
      "packages/forma-36-react-components/src/components/Notification/Notification.stories.tsx": {
         "error": "ReferenceError: button is not defined",
         "mode": "static",
         "examples": [
            {
               "name": "Button",
               "status": "Limited",
               "origin": "base",
               "id": "s_aeda662cd02de22295e60b22f9b3dec3",
               "componentId": "ContentfulForma_36ReactComponents_Button"
            },
            {
               "name": "Button",
               "status": "Limited",
               "origin": "base",
               "id": "s_5ec919f8664ecf1e2d7485421e75f26d",
               "componentId": "ContentfulForma_36ReactComponents_Button"
            },
            {
               "name": "Button",
               "status": "Limited",
               "origin": "base",
               "id": "s_d6accb397abd8f04f924056b7cb0c37a",
               "componentId": "ContentfulForma_36ReactComponents_Button"
            },
            {
               "name": "Button",
               "status": "Limited",
               "origin": "base",
               "id": "s_1e070289316c140149293ba99b23d89a",
               "componentId": "ContentfulForma_36ReactComponents_Button"
            },
            {
               "name": "Button",
               "status": "Limited",
               "origin": "base",
               "id": "s_15d61a2ff34f5e7a8e0a4a94a58225e7",
               "componentId": "ContentfulForma_36ReactComponents_Button"
            },
            {
               "status": "UnknownComponent",
               "origin": "base"
            }
         ]
      },
      "packages/forma-36-react-components/src/components/Pill/Pill.stories.tsx": {
         "mode": "dynamic",
         "exportsFound": [
            "default",
            "basic",
            "onDragAndOnClose",
            "CustomHandleComponent"
         ],
         "examples": [
            {
               "name": "Basic",
               "status": "Imported",
               "origin": "base",
               "id": "Components__Pill__basic__1",
               "componentId": "ContentfulForma_36ReactComponents_Pill"
            },
            {
               "name": "On Drag And On Close",
               "status": "Duplicate",
               "origin": "base",
               "id": "Components/Pill/onDragAndOnClose__1",
               "componentId": "ContentfulForma_36ReactComponents_Pill"
            },
            {
               "name": "On Drag And On Close",
               "status": "Imported",
               "origin": "base",
               "id": "Components__Pill__onDragAndOnClose__2",
               "componentId": "ContentfulForma_36ReactComponents_Pill"
            },
            {
               "name": "Custom Handle Component",
               "status": "Imported",
               "origin": "base",
               "id": "Components__Pill__CustomHandleComponent__1",
               "componentId": "ContentfulForma_36ReactComponents_Pill"
            },
            {
               "name": "Icon",
               "status": "Limited",
               "origin": "node",
               "id": "s_c925dbc0801dd0c61e2ed0e4b19a7d59",
               "componentId": "ContentfulForma_36ReactComponents_Icon"
            }
         ]
      },
      "packages/forma-36-react-components/src/components/RadioButton/RadioButton.stories.tsx": {
         "mode": "dynamic",
         "exportsFound": [],
         "examples": [
            {
               "name": "default",
               "status": "Imported",
               "origin": "base",
               "id": "Components__RadioButton__default__1",
               "componentId": "ContentfulForma_36ReactComponents_RadioButton"
            }
         ]
      },
      "packages/forma-36-react-components/src/components/RadioButtonField/RadioButtonField.stories.tsx": {
         "mode": "dynamic",
         "exportsFound": [],
         "examples": [
            {
               "name": "default",
               "status": "Imported",
               "origin": "base",
               "id": "Components__RadioButtonField__default__1",
               "componentId": "ContentfulForma_36ReactComponents_FieldGroup"
            },
            {
               "name": "Checked RadioButtonField",
               "status": "Imported",
               "origin": "node",
               "id": "s_8ad1e85cf2214aeaa7f41cf6958cbd3d",
               "componentId": "ContentfulForma_36ReactComponents_RadioButtonField"
            },
            {
               "name": "RadioButtonField",
               "status": "Imported",
               "origin": "node",
               "id": "s_3d36af08f34704a32cdcaf5c8a95476f",
               "componentId": "ContentfulForma_36ReactComponents_RadioButtonField"
            }
         ]
      },
      "packages/forma-36-react-components/src/components/Select/Select.stories.tsx": {
         "mode": "dynamic",
         "exportsFound": [],
         "examples": [
            {
               "name": "default",
               "status": "Imported",
               "origin": "base",
               "id": "Components__Select__default__1",
               "componentId": "ContentfulForma_36ReactComponents_Select"
            },
            {
               "name": "Option",
               "status": "Imported",
               "origin": "node",
               "id": "s_ef161b1691e802a58a33bf707c9acfb1",
               "componentId": "ContentfulForma_36ReactComponents_Option"
            },
            {
               "name": "Option",
               "status": "Imported",
               "origin": "node",
               "id": "s_6b24da23218c4842e5142785ede08cc5",
               "componentId": "ContentfulForma_36ReactComponents_Option"
            }
         ]
      },
      "packages/forma-36-react-components/src/components/SelectField/SelectField.stories.tsx": {
         "mode": "dynamic",
         "exportsFound": [],
         "examples": [
            {
               "name": "default",
               "status": "Imported",
               "origin": "base",
               "id": "Components__SelectField__default__1",
               "componentId": "ContentfulForma_36ReactComponents_SelectField"
            },
            {
               "name": "Option",
               "status": "Duplicate",
               "origin": "node",
               "componentId": "ContentfulForma_36ReactComponents_Option"
            },
            {
               "name": "Option",
               "status": "Duplicate",
               "origin": "node",
               "componentId": "ContentfulForma_36ReactComponents_Option"
            }
         ]
      },
      "packages/forma-36-react-components/src/components/Skeleton/SkeletonBodyText/SkeletonBodyText.stories.tsx": {
         "mode": "dynamic",
         "exportsFound": [],
         "examples": [
            {
               "name": "default",
               "status": "Imported",
               "origin": "base",
               "id": "Components__Skeleton__SkeletonBodyText__default__1",
               "componentId": "ContentfulForma_36ReactComponents_SkeletonContainer"
            },
            {
               "name": "SkeletonBodyText",
               "status": "Imported",
               "origin": "node",
               "id": "s_c4703f9c1d97fc16feae6f1471056fc5",
               "componentId": "ContentfulForma_36ReactComponents_SkeletonBodyText"
            }
         ]
      },
      "packages/forma-36-react-components/src/components/Skeleton/SkeletonContainer/SkeletonContainer.stories.tsx": {
         "mode": "dynamic",
         "exportsFound": [],
         "examples": [
            {
               "name": "default",
               "status": "Imported",
               "origin": "base",
               "id": "Components__Skeleton__SkeletonContainer__default__1",
               "componentId": "ContentfulForma_36ReactComponents_SkeletonContainer"
            },
            {
               "name": "SkeletonDisplayText",
               "status": "Imported",
               "origin": "node",
               "id": "s_96475f45f5349e761f30a893758f56b1",
               "componentId": "ContentfulForma_36ReactComponents_SkeletonDisplayText"
            },
            {
               "name": "SkeletonBodyText",
               "status": "Imported",
               "origin": "node",
               "id": "s_c1099a50995da4f280126bcd4622f2cf",
               "componentId": "ContentfulForma_36ReactComponents_SkeletonBodyText"
            }
         ]
      },
      "packages/forma-36-react-components/src/components/Skeleton/SkeletonDisplayText/SkeletonDisplayText.stories.tsx": {
         "mode": "dynamic",
         "exportsFound": [],
         "examples": [
            {
               "name": "default",
               "status": "Imported",
               "origin": "base",
               "id": "Components__Skeleton__SkeletonDisplayText__default__1",
               "componentId": "ContentfulForma_36ReactComponents_SkeletonContainer"
            },
            {
               "name": "SkeletonDisplayText",
               "status": "Duplicate",
               "origin": "node",
               "componentId": "ContentfulForma_36ReactComponents_SkeletonDisplayText"
            }
         ]
      },
      "packages/forma-36-react-components/src/components/Skeleton/SkeletonImage/SkeletonImage.stories.tsx": {
         "mode": "dynamic",
         "exportsFound": [],
         "examples": [
            {
               "name": "default",
               "status": "Imported",
               "origin": "base",
               "id": "Components__Skeleton__SkeletonImage__default__1",
               "componentId": "ContentfulForma_36ReactComponents_SkeletonContainer"
            },
            {
               "name": "SkeletonImage",
               "status": "Imported",
               "origin": "node",
               "id": "s_6ce8c920f45d678dc6c2912d2ee37676",
               "componentId": "ContentfulForma_36ReactComponents_SkeletonImage"
            }
         ]
      },
      "packages/forma-36-react-components/src/components/Skeleton/SkeletonRow/SkeletonRow.stories.tsx": {
         "mode": "dynamic",
         "exportsFound": [],
         "examples": [
            {
               "name": "default",
               "status": "Imported",
               "origin": "base",
               "id": "Components__Skeleton__SkeletonRow__default__1",
               "componentId": "ContentfulForma_36ReactComponents_Table"
            },
            {
               "name": "TableHead",
               "status": "Imported",
               "origin": "node",
               "id": "s_4676055be2e122a258aaf04f31e26351",
               "componentId": "ContentfulForma_36ReactComponents_TableHead"
            },
            {
               "name": "TableRow",
               "status": "Imported",
               "origin": "node",
               "id": "s_8369439aa3775c6ded8e7ad10a0eac03",
               "componentId": "ContentfulForma_36ReactComponents_TableRow"
            },
            {
               "name": "TableCell",
               "status": "Imported",
               "origin": "node",
               "id": "s_3bd542b0604e6d2aa4ffe4e6b3f2013e",
               "componentId": "ContentfulForma_36ReactComponents_TableCell"
            },
            {
               "name": "TableCell",
               "status": "Duplicate",
               "origin": "node",
               "componentId": "ContentfulForma_36ReactComponents_TableCell"
            },
            {
               "name": "TableCell",
               "status": "Duplicate",
               "origin": "node",
               "componentId": "ContentfulForma_36ReactComponents_TableCell"
            },
            {
               "name": "TableCell",
               "status": "Duplicate",
               "origin": "node",
               "componentId": "ContentfulForma_36ReactComponents_TableCell"
            },
            {
               "name": "TableCell",
               "status": "Duplicate",
               "origin": "node",
               "componentId": "ContentfulForma_36ReactComponents_TableCell"
            },
            {
               "name": "TableBody",
               "status": "Imported",
               "origin": "node",
               "id": "s_a6dba1b9651a130e0de6e2a1e20326aa",
               "componentId": "ContentfulForma_36ReactComponents_TableBody"
            },
            {
               "name": "SkeletonRow",
               "status": "Imported",
               "origin": "node",
               "id": "s_f379635378947acb800ae536ddf29e42",
               "componentId": "ContentfulForma_36ReactComponents_SkeletonRow"
            }
         ]
      },
      "packages/forma-36-react-components/src/components/Spinner/Spinner.stories.tsx": {
         "mode": "dynamic",
         "exportsFound": [],
         "examples": [
            {
               "name": "default",
               "status": "Imported",
               "origin": "base",
               "id": "Components__Spinner__default__1",
               "componentId": "ContentfulForma_36ReactComponents_Spinner"
            },
            {
               "name": "with inline text",
               "status": "Duplicate",
               "origin": "base",
               "id": "Components/Spinner/with inline text__1",
               "componentId": "ContentfulForma_36ReactComponents_Spinner"
            }
         ]
      },
      "packages/forma-36-react-components/src/components/Switch/Switch.stories.tsx": {
         "mode": "dynamic",
         "exportsFound": [],
         "examples": [
            {
               "name": "default",
               "status": "Imported",
               "origin": "base",
               "id": "Components__Switch__default__1",
               "componentId": "ContentfulForma_36ReactComponents_Switch"
            }
         ]
      },
      "packages/forma-36-react-components/src/components/Table/Table.stories.tsx": {
         "mode": "dynamic",
         "exportsFound": [],
         "examples": [
            {
               "name": "default",
               "status": "Imported",
               "origin": "base",
               "id": "Components__Table__default__1",
               "componentId": "ContentfulForma_36ReactComponents_Table"
            },
            {
               "name": "TableHead",
               "status": "Imported",
               "origin": "node",
               "id": "s_c179289be035cec3b093e2a450f60188",
               "componentId": "ContentfulForma_36ReactComponents_TableHead"
            },
            {
               "name": "TableRow",
               "status": "Imported",
               "origin": "node",
               "id": "s_01962547c37a68ac1465c0eb1a95b862",
               "componentId": "ContentfulForma_36ReactComponents_TableRow"
            },
            {
               "name": "TableCell",
               "status": "Duplicate",
               "origin": "node",
               "componentId": "ContentfulForma_36ReactComponents_TableCell"
            },
            {
               "name": "TableCell",
               "status": "Duplicate",
               "origin": "node",
               "componentId": "ContentfulForma_36ReactComponents_TableCell"
            },
            {
               "name": "TableCell",
               "status": "Duplicate",
               "origin": "node",
               "componentId": "ContentfulForma_36ReactComponents_TableCell"
            },
            {
               "name": "TableCell",
               "status": "Duplicate",
               "origin": "node",
               "componentId": "ContentfulForma_36ReactComponents_TableCell"
            },
            {
               "name": "TableBody",
               "status": "Imported",
               "origin": "node",
               "id": "s_c22f19b86633d8307d96f24422c347e3",
               "componentId": "ContentfulForma_36ReactComponents_TableBody"
            },
            {
               "name": "TableRow",
               "status": "Duplicate",
               "origin": "node",
               "componentId": "ContentfulForma_36ReactComponents_TableRow"
            },
            {
               "name": "TableCell",
               "status": "Duplicate",
               "origin": "node",
               "componentId": "ContentfulForma_36ReactComponents_TableCell"
            },
            {
               "name": "TableCell",
               "status": "Duplicate",
               "origin": "node",
               "componentId": "ContentfulForma_36ReactComponents_TableCell"
            },
            {
               "name": "TableCell",
               "status": "Duplicate",
               "origin": "node",
               "componentId": "ContentfulForma_36ReactComponents_TableCell"
            },
            {
               "name": "TableCell",
               "status": "Duplicate",
               "origin": "node",
               "componentId": "ContentfulForma_36ReactComponents_TableCell"
            },
            {
               "name": "TableRow",
               "status": "Duplicate",
               "origin": "node",
               "componentId": "ContentfulForma_36ReactComponents_TableRow"
            },
            {
               "name": "TableCell",
               "status": "Duplicate",
               "origin": "node",
               "componentId": "ContentfulForma_36ReactComponents_TableCell"
            },
            {
               "name": "TableCell",
               "status": "Duplicate",
               "origin": "node",
               "componentId": "ContentfulForma_36ReactComponents_TableCell"
            },
            {
               "name": "TableCell",
               "status": "Duplicate",
               "origin": "node",
               "componentId": "ContentfulForma_36ReactComponents_TableCell"
            },
            {
               "name": "TableCell",
               "status": "Duplicate",
               "origin": "node",
               "componentId": "ContentfulForma_36ReactComponents_TableCell"
            }
         ]
      },
      "packages/forma-36-react-components/src/components/Tabs/Tabs.stories.tsx": {
         "mode": "dynamic",
         "exportsFound": [],
         "examples": [
            {
               "name": "default",
               "status": "Imported",
               "origin": "base",
               "id": "Components__Tabs__default__1",
               "componentId": "ContentfulForma_36ReactComponents_Tabs"
            },
            {
               "name": "Selected Tab",
               "status": "Imported",
               "origin": "node",
               "id": "s_7f633dfac3783ca7c74a3a430602fe07",
               "componentId": "ContentfulForma_36ReactComponents_Tab"
            },
            {
               "name": "Tab",
               "status": "Imported",
               "origin": "node",
               "id": "s_84a932c870e3b5a298a2ecbbefd391fd",
               "componentId": "ContentfulForma_36ReactComponents_Tab"
            },
            {
               "name": "Disabled Tab",
               "status": "Imported",
               "origin": "node",
               "id": "s_e911143510b80e17eb7778b5d02f080f",
               "componentId": "ContentfulForma_36ReactComponents_Tab"
            },
            {
               "name": "default",
               "status": "Imported",
               "origin": "base",
               "id": "Components__Tabs__default__2",
               "componentId": "ContentfulForma_36ReactComponents_TabPanel"
            },
            {
               "name": "as navigation",
               "status": "Imported",
               "origin": "base",
               "id": "Components__Tabs__as_navigation__1",
               "componentId": "ContentfulForma_36ReactComponents_Tabs"
            },
            {
               "name": "Selected Tab",
               "status": "Imported",
               "origin": "node",
               "id": "s_02f6c8b6b076456ddf8ee54fe6629d51",
               "componentId": "ContentfulForma_36ReactComponents_Tab"
            },
            {
               "name": "Tab",
               "status": "Imported",
               "origin": "node",
               "id": "s_0fe4268d9c0974f142ab1ba6d1707873",
               "componentId": "ContentfulForma_36ReactComponents_Tab"
            },
            {
               "name": "Tab",
               "status": "Imported",
               "origin": "node",
               "id": "s_ee7565f67a153a9ee737968b5965884a",
               "componentId": "ContentfulForma_36ReactComponents_Tab"
            }
         ]
      },
      "packages/forma-36-react-components/src/components/Tag/Tag.stories.tsx": {
         "mode": "dynamic",
         "exportsFound": [],
         "examples": [
            {
               "name": "default",
               "status": "Imported",
               "origin": "base",
               "id": "Components__Tag__default__1",
               "componentId": "ContentfulForma_36ReactComponents_Tag"
            }
         ]
      },
      "packages/forma-36-react-components/src/components/TextField/TextField.stories.tsx": {
         "mode": "dynamic",
         "exportsFound": [],
         "examples": [
            {
               "name": "default",
               "status": "Imported",
               "origin": "base",
               "id": "Components__TextField__default__1",
               "componentId": "ContentfulForma_36ReactComponents_TextField"
            },
            {
               "name": "with Textarea",
               "status": "Imported",
               "origin": "base",
               "id": "Components__TextField__with_Textarea__1",
               "componentId": "ContentfulForma_36ReactComponents_TextField"
            },
            {
               "name": "with TextLink",
               "status": "Imported",
               "origin": "base",
               "id": "Components__TextField__with_TextLink__1",
               "componentId": "ContentfulForma_36ReactComponents_TextField"
            },
            {
               "name": "with Character count",
               "status": "Imported",
               "origin": "base",
               "id": "Components__TextField__with_Character_count__1",
               "componentId": "ContentfulForma_36ReactComponents_TextField"
            }
         ]
      },
      "packages/forma-36-react-components/src/components/TextInput/TextInput.stories.tsx": {
         "mode": "dynamic",
         "exportsFound": [],
         "examples": [
            {
               "name": "default",
               "status": "Imported",
               "origin": "base",
               "id": "Components__TextInput__default__1",
               "componentId": "ContentfulForma_36ReactComponents_TextInput"
            },
            {
               "name": "Controlling focus via ref",
               "status": "Imported",
               "origin": "base",
               "id": "Components__TextInput__Controlling_focus_via_ref__1",
               "componentId": "ContentfulForma_36ReactComponents_TextInput"
            },
            {
               "name": "Controlling focus via ref",
               "status": "Limited",
               "origin": "base",
               "id": "Components__TextInput__Controlling_focus_via_ref__2",
               "componentId": "ContentfulForma_36ReactComponents_Button"
            }
         ]
      },
      "packages/forma-36-react-components/src/components/TextLink/TextLink.stories.tsx": {
         "mode": "dynamic",
         "exportsFound": [],
         "examples": [
            {
               "name": "default",
               "status": "Imported",
               "origin": "base",
               "id": "Components__TextLink__default__1",
               "componentId": "ContentfulForma_36ReactComponents_TextLink"
            }
         ]
      },
      "packages/forma-36-react-components/src/components/Textarea/Textarea.stories.tsx": {
         "mode": "dynamic",
         "exportsFound": [],
         "examples": [
            {
               "name": "default",
               "status": "Imported",
               "origin": "base",
               "id": "Components__TextArea__default__1",
               "componentId": "ContentfulForma_36ReactComponents_Textarea"
            },
            {
               "name": "Controlling focus via ref",
               "status": "Imported",
               "origin": "base",
               "id": "Components__TextArea__Controlling_focus_via_ref__1",
               "componentId": "ContentfulForma_36ReactComponents_Textarea"
            },
            {
               "name": "Controlling focus via ref",
               "status": "Limited",
               "origin": "base",
               "id": "Components__TextArea__Controlling_focus_via_ref__2",
               "componentId": "ContentfulForma_36ReactComponents_Button"
            }
         ]
      },
      "packages/forma-36-react-components/src/components/ToggleButton/ToggleButton.stories.tsx": {
         "mode": "dynamic",
         "exportsFound": [],
         "examples": [
            {
               "name": "default",
               "status": "Imported",
               "origin": "base",
               "id": "Components__ToggleButton__default__1",
               "componentId": "ContentfulForma_36ReactComponents_ToggleButton"
            }
         ]
      },
      "packages/forma-36-react-components/src/components/Tooltip/Tooltip.stories.tsx": {
         "mode": "dynamic",
         "exportsFound": [
            "default",
            "basic",
            "withHtml",
            "autoPlacement"
         ],
         "examples": [
            {
               "name": "Basic",
               "status": "Imported",
               "origin": "base",
               "id": "Components__Tooltip__basic__1",
               "componentId": "ContentfulForma_36ReactComponents_Tooltip"
            },
            {
               "name": "TextLink",
               "status": "Duplicate",
               "origin": "node",
               "componentId": "ContentfulForma_36ReactComponents_TextLink"
            },
            {
               "name": "With Html",
               "status": "Imported",
               "origin": "base",
               "id": "Components__Tooltip__withHtml__1",
               "componentId": "ContentfulForma_36ReactComponents_Paragraph"
            },
            {
               "name": "Tooltip",
               "status": "Limited",
               "origin": "node",
               "id": "s_e9045fce1813b692c5902cef0bc67415",
               "componentId": "ContentfulForma_36ReactComponents_Tooltip"
            },
            {
               "name": "TextLink",
               "status": "Duplicate",
               "origin": "node",
               "componentId": "ContentfulForma_36ReactComponents_TextLink"
            },
            {
               "name": "Auto Placement",
               "status": "Duplicate",
               "origin": "base",
               "id": "Components/Tooltip/autoPlacement__1",
               "componentId": "ContentfulForma_36ReactComponents_Tooltip"
            },
            {
               "name": "TextLink",
               "status": "Duplicate",
               "origin": "node",
               "componentId": "ContentfulForma_36ReactComponents_TextLink"
            }
         ]
      },
      "packages/forma-36-react-components/src/components/Typography/Heading/Heading.stories.tsx": {
         "mode": "dynamic",
         "exportsFound": [],
         "examples": [
            {
               "name": "default",
               "status": "Imported",
               "origin": "base",
               "id": "Components__Typography__Heading__default__1",
               "componentId": "ContentfulForma_36ReactComponents_Heading"
            }
         ]
      },
      "packages/forma-36-react-components/src/components/Typography/Paragraph/Paragraph.stories.tsx": {
         "mode": "dynamic",
         "exportsFound": [],
         "examples": [
            {
               "name": "default",
               "status": "Imported",
               "origin": "base",
               "id": "Components__Typography__Paragraph__default__1",
               "componentId": "ContentfulForma_36ReactComponents_Paragraph"
            }
         ]
      },
      "packages/forma-36-react-components/src/components/Typography/SectionHeading/SectionHeading.stories.tsx": {
         "mode": "dynamic",
         "exportsFound": [],
         "examples": [
            {
               "name": "default",
               "status": "Imported",
               "origin": "base",
               "id": "Components__Typography__SectionHeading__default__1",
               "componentId": "ContentfulForma_36ReactComponents_SectionHeading"
            }
         ]
      },
      "packages/forma-36-react-components/src/components/Typography/Subheading/Subheading.stories.tsx": {
         "mode": "dynamic",
         "exportsFound": [],
         "examples": [
            {
               "name": "default",
               "status": "Imported",
               "origin": "base",
               "id": "Components__Typography__Subheading__default__1",
               "componentId": "ContentfulForma_36ReactComponents_Subheading"
            }
         ]
      },
      "packages/forma-36-react-components/src/components/Typography/Typography/Typography.stories.tsx": {
         "mode": "dynamic",
         "exportsFound": [],
         "examples": [
            {
               "name": "DisplayText - Large",
               "status": "Imported",
               "origin": "base",
               "id": "Components__Typography__Typography__DisplayText_-_Large__1",
               "componentId": "ContentfulForma_36ReactComponents_Typography"
            },
            {
               "name": "Large DisplayText",
               "status": "Imported",
               "origin": "node",
               "id": "s_ddd4eedf088148cd718d7e83ddbed6f8",
               "componentId": "ContentfulForma_36ReactComponents_DisplayText"
            },
            {
               "name": "Paragraph",
               "status": "Limited",
               "origin": "node",
               "id": "s_c9d1cf70c4d5d74bbf4fcca588b685a8",
               "componentId": "ContentfulForma_36ReactComponents_Paragraph"
            },
            {
               "name": "Paragraph",
               "status": "Duplicate",
               "origin": "node",
               "componentId": "ContentfulForma_36ReactComponents_Paragraph"
            },
            {
               "name": "DisplayText - Default",
               "status": "Imported",
               "origin": "base",
               "id": "Components__Typography__Typography__DisplayText_-_Default__1",
               "componentId": "ContentfulForma_36ReactComponents_Typography"
            },
            {
               "name": "DisplayText",
               "status": "Imported",
               "origin": "node",
               "id": "s_9c82ae9fc13f821a89c46f79abe85956",
               "componentId": "ContentfulForma_36ReactComponents_DisplayText"
            },
            {
               "name": "Paragraph",
               "status": "Duplicate",
               "origin": "node",
               "componentId": "ContentfulForma_36ReactComponents_Paragraph"
            },
            {
               "name": "Paragraph",
               "status": "Duplicate",
               "origin": "node",
               "componentId": "ContentfulForma_36ReactComponents_Paragraph"
            },
            {
               "name": "Heading",
               "status": "Imported",
               "origin": "base",
               "id": "Components__Typography__Typography__Heading__1",
               "componentId": "ContentfulForma_36ReactComponents_Typography"
            },
            {
               "name": "Heading",
               "status": "Limited",
               "origin": "node",
               "id": "s_f267b8dab719e63c2651d99ed03958f1",
               "componentId": "ContentfulForma_36ReactComponents_Heading"
            },
            {
               "name": "Paragraph",
               "status": "Duplicate",
               "origin": "node",
               "componentId": "ContentfulForma_36ReactComponents_Paragraph"
            },
            {
               "name": "Paragraph",
               "status": "Duplicate",
               "origin": "node",
               "componentId": "ContentfulForma_36ReactComponents_Paragraph"
            },
            {
               "name": "Subheading",
               "status": "Imported",
               "origin": "base",
               "id": "Components__Typography__Typography__Subheading__1",
               "componentId": "ContentfulForma_36ReactComponents_Typography"
            },
            {
               "name": "Subheading",
               "status": "Limited",
               "origin": "node",
               "id": "s_b827a8d0cb7d22ef7e2c69532b7f0c88",
               "componentId": "ContentfulForma_36ReactComponents_Subheading"
            },
            {
               "name": "Paragraph",
               "status": "Duplicate",
               "origin": "node",
               "componentId": "ContentfulForma_36ReactComponents_Paragraph"
            },
            {
               "name": "Paragraph",
               "status": "Duplicate",
               "origin": "node",
               "componentId": "ContentfulForma_36ReactComponents_Paragraph"
            },
            {
               "name": "SectionHeading",
               "status": "Imported",
               "origin": "base",
               "id": "Components__Typography__Typography__SectionHeading__1",
               "componentId": "ContentfulForma_36ReactComponents_Typography"
            },
            {
               "name": "SectionHeading",
               "status": "Limited",
               "origin": "node",
               "id": "s_76ee681ac2fd04192085dc7e7c3d9e32",
               "componentId": "ContentfulForma_36ReactComponents_SectionHeading"
            },
            {
               "name": "Paragraph",
               "status": "Duplicate",
               "origin": "node",
               "componentId": "ContentfulForma_36ReactComponents_Paragraph"
            },
            {
               "name": "Paragraph",
               "status": "Duplicate",
               "origin": "node",
               "componentId": "ContentfulForma_36ReactComponents_Paragraph"
            }
         ]
      },
      "packages/forma-36-react-components/src/components/ValidationMessage/ValidationMessage.stories.tsx": {
         "mode": "dynamic",
         "exportsFound": [],
         "examples": [
            {
               "name": "default",
               "status": "Imported",
               "origin": "base",
               "id": "Components__ValidationMessage__default__1",
               "componentId": "ContentfulForma_36ReactComponents_ValidationMessage"
            }
         ]
      },
      "packages/forma-36-react-components/src/components/Workbench/Workbench.stories.tsx": {
         "mode": "dynamic",
         "exportsFound": [],
         "examples": [
            {
               "name": "default",
               "status": "Imported",
               "origin": "base",
               "id": "(alpha)__Workbench__default__1",
               "componentId": "ContentfulForma_36ReactComponents_Workbench"
            },
            {
               "name": "WorkbenchHeader",
               "status": "Imported",
               "origin": "node",
               "id": "s_7ca3a4e0df2b2a8092be52ce86eee4f8",
               "componentId": "ContentfulForma_36ReactComponents_WorkbenchHeader"
            },
            {
               "name": "Icon",
               "status": "Limited",
               "origin": "node",
               "id": "s_5c7afd79e053f4c97cf54a72e16ff077",
               "componentId": "ContentfulForma_36ReactComponents_Icon"
            },
            {
               "name": "Button",
               "status": "Limited",
               "origin": "node",
               "id": "s_5e452b3ac3fc927df187480c7ba83cfc",
               "componentId": "ContentfulForma_36ReactComponents_Button"
            },
            {
               "name": "WorkbenchContent",
               "status": "Imported",
               "origin": "node",
               "id": "s_aee6b75ac6d21905a18735c4f9c795dd",
               "componentId": "ContentfulForma_36ReactComponents_WorkbenchContent"
            },
            {
               "name": "with left sidebar",
               "status": "Imported",
               "origin": "base",
               "id": "(alpha)__Workbench__with_left_sidebar__1",
               "componentId": "ContentfulForma_36ReactComponents_Workbench"
            },
            {
               "name": "WorkbenchHeader",
               "status": "Imported",
               "origin": "node",
               "id": "s_0cd41132f4196f30d43dda852f717f90",
               "componentId": "ContentfulForma_36ReactComponents_WorkbenchHeader"
            },
            {
               "name": "Icon",
               "status": "Duplicate",
               "origin": "node",
               "componentId": "ContentfulForma_36ReactComponents_Icon"
            },
            {
               "name": "Button",
               "status": "Duplicate",
               "origin": "node",
               "componentId": "ContentfulForma_36ReactComponents_Button"
            },
            {
               "name": "WorkbenchSidebar",
               "status": "Imported",
               "origin": "node",
               "id": "s_2dce8d70239258b3a818775991fc3f72",
               "componentId": "ContentfulForma_36ReactComponents_WorkbenchSidebar"
            },
            {
               "name": "WorkbenchContent",
               "status": "Duplicate",
               "origin": "node",
               "componentId": "ContentfulForma_36ReactComponents_WorkbenchContent"
            },
            {
               "name": "with right sidebar",
               "status": "Imported",
               "origin": "base",
               "id": "(alpha)__Workbench__with_right_sidebar__1",
               "componentId": "ContentfulForma_36ReactComponents_Workbench"
            },
            {
               "name": "WorkbenchHeader",
               "status": "Duplicate",
               "origin": "node",
               "componentId": "ContentfulForma_36ReactComponents_WorkbenchHeader"
            },
            {
               "name": "Icon",
               "status": "Duplicate",
               "origin": "node",
               "componentId": "ContentfulForma_36ReactComponents_Icon"
            },
            {
               "name": "Button",
               "status": "Duplicate",
               "origin": "node",
               "componentId": "ContentfulForma_36ReactComponents_Button"
            },
            {
               "name": "WorkbenchContent",
               "status": "Duplicate",
               "origin": "node",
               "componentId": "ContentfulForma_36ReactComponents_WorkbenchContent"
            },
            {
               "name": "WorkbenchSidebar",
               "status": "Imported",
               "origin": "node",
               "id": "s_3ad812e5bc9a2cdf5eb996957ee65ecf",
               "componentId": "ContentfulForma_36ReactComponents_WorkbenchSidebar"
            },
            {
               "name": "with left and right sidebar",
               "status": "Imported",
               "origin": "base",
               "id": "(alpha)__Workbench__with_left_and_right_sidebar__1",
               "componentId": "ContentfulForma_36ReactComponents_Workbench"
            },
            {
               "name": "WorkbenchHeader",
               "status": "Duplicate",
               "origin": "node",
               "componentId": "ContentfulForma_36ReactComponents_WorkbenchHeader"
            },
            {
               "name": "Icon",
               "status": "Duplicate",
               "origin": "node",
               "componentId": "ContentfulForma_36ReactComponents_Icon"
            },
            {
               "name": "Button",
               "status": "Duplicate",
               "origin": "node",
               "componentId": "ContentfulForma_36ReactComponents_Button"
            },
            {
               "name": "WorkbenchSidebar",
               "status": "Duplicate",
               "origin": "node",
               "componentId": "ContentfulForma_36ReactComponents_WorkbenchSidebar"
            },
            {
               "name": "WorkbenchContent",
               "status": "Duplicate",
               "origin": "node",
               "componentId": "ContentfulForma_36ReactComponents_WorkbenchContent"
            },
            {
               "name": "WorkbenchSidebar",
               "status": "Duplicate",
               "origin": "node",
               "componentId": "ContentfulForma_36ReactComponents_WorkbenchSidebar"
            },
            {
               "name": "with back button",
               "status": "Imported",
               "origin": "base",
               "id": "(alpha)__Workbench__with_back_button__1",
               "componentId": "ContentfulForma_36ReactComponents_Workbench"
            },
            {
               "name": "WorkbenchHeader",
               "status": "Duplicate",
               "origin": "node",
               "componentId": "ContentfulForma_36ReactComponents_WorkbenchHeader"
            },
            {
               "name": "Icon",
               "status": "Duplicate",
               "origin": "node",
               "componentId": "ContentfulForma_36ReactComponents_Icon"
            },
            {
               "name": "Button",
               "status": "Duplicate",
               "origin": "node",
               "componentId": "ContentfulForma_36ReactComponents_Button"
            },
            {
               "name": "WorkbenchContent",
               "status": "Duplicate",
               "origin": "node",
               "componentId": "ContentfulForma_36ReactComponents_WorkbenchContent"
            }
         ]
      }
   }
}